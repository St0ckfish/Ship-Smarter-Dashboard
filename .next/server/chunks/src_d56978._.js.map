{
  "version": 3,
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/app/(Dashboard)/distributors/components/Table/Data.ts"],"sourcesContent":["\r\nexport type Distributor = {\r\n    distributorName: string\r\n    nationalID: string\r\n    phoneNumber: string\r\n    city: string\r\n    region: string\r\n    zip: string\r\n}\r\n\r\nexport const Data: Distributor[] = [\r\n    {\r\n        distributorName: \"Ahmed Ali\",\r\n        nationalID: \"1234567891\",\r\n        phoneNumber: \"06545789\",\r\n        city: \"Marrakech\",\r\n        region: \"Casablanca\",\r\n        zip: \"Casablanca\"\r\n    },\r\n    {\r\n        distributorName: \"Ahmed Ali\",\r\n        nationalID: \"1234567891\",\r\n        phoneNumber: \"06545789\",\r\n        city: \"Marrakech\",\r\n        region: \"Casablanca\",\r\n        zip: \"Casablanca\"\r\n    },\r\n    {\r\n        distributorName: \"Ahmed Ali\",\r\n        nationalID: \"1234567891\",\r\n        phoneNumber: \"06545789\",\r\n        city: \"Marrakech\",\r\n        region: \"Casablanca\",\r\n        zip: \"Casablanca\"\r\n    },\r\n    {\r\n        distributorName: \"Ahmed Ali\",\r\n        nationalID: \"1234567891\",\r\n        phoneNumber: \"06545789\",\r\n        city: \"Marrakech\",\r\n        region: \"Casablanca\",\r\n        zip: \"Casablanca\"\r\n    },\r\n    {\r\n        distributorName: \"Ahmed Ali\",\r\n        nationalID: \"1234567891\",\r\n        phoneNumber: \"06545789\",\r\n        city: \"Marrakech\",\r\n        region: \"Casablanca\",\r\n        zip: \"Casablanca\"\r\n    },\r\n    {\r\n        distributorName: \"Ahmed Ali\",\r\n        nationalID: \"1234567891\",\r\n        phoneNumber: \"06545789\",\r\n        city: \"Marrakech\",\r\n        region: \"Casablanca\",\r\n        zip: \"Casablanca\"\r\n    },\r\n]"],"names":[],"mappings":";;;AAUO,MAAM,OAAsB;IAC/B;QACI,iBAAiB;QACjB,YAAY;QACZ,aAAa;QACb,MAAM;QACN,QAAQ;QACR,KAAK;IACT;IACA;QACI,iBAAiB;QACjB,YAAY;QACZ,aAAa;QACb,MAAM;QACN,QAAQ;QACR,KAAK;IACT;IACA;QACI,iBAAiB;QACjB,YAAY;QACZ,aAAa;QACb,MAAM;QACN,QAAQ;QACR,KAAK;IACT;IACA;QACI,iBAAiB;QACjB,YAAY;QACZ,aAAa;QACb,MAAM;QACN,QAAQ;QACR,KAAK;IACT;IACA;QACI,iBAAiB;QACjB,YAAY;QACZ,aAAa;QACb,MAAM;QACN,QAAQ;QACR,KAAK;IACT;IACA;QACI,iBAAiB;QACjB,YAAY;QACZ,aAAa;QACb,MAAM;QACN,QAAQ;QACR,KAAK;IACT;CACH"}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/components/ActionsButtonXL/ActionsButtonXL.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"actions__button\": \"actions__button__ActionsButtonXL__8a7d3d66\",\n  \"button__icon\": \"button__icon__ActionsButtonXL__8a7d3d66\",\n  \"button__text\": \"button__text__ActionsButtonXL__8a7d3d66\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 72, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/components/ActionsButtonXL/ActionsButtonXL.tsx"],"sourcesContent":["import styles from \"./ActionsButtonXL.module.css\"\r\n\r\n\r\nexport default function ActionsButtonXL({ title }: { title: string }) {\r\n    return (\r\n        <>\r\n            <button className={styles[\"actions__button\"]}>\r\n                <span className={styles[\"button__icon\"]}>+</span>\r\n                <span className={styles[\"button__text\"]}>\r\n                    {title}\r\n                </span>\r\n            </button>\r\n        </>\r\n    )\r\n}\r\n\r\n"],"names":[],"mappings":";;;;;;;;AAGe,SAAS,gBAAgB,EAAE,KAAK,EAAqB;IAChE,qBACI;kBACI,cAAA,mPAAC;YAAO,WAAW,8KAAM,CAAC,kBAAkB;;8BACxC,mPAAC;oBAAK,WAAW,8KAAM,CAAC,eAAe;8BAAE;;;;;;8BACzC,mPAAC;oBAAK,WAAW,8KAAM,CAAC,eAAe;8BAClC;;;;;;;;;;;;;AAKrB"}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/app/(Dashboard)/distributors/components/Table/Table.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport '@mantine/core/styles.css';\r\nimport '@mantine/dates/styles.css'; //if using mantine date picker features\r\nimport 'mantine-react-table/styles.css'; //make sure MRT styles were imported in your app root (once)\r\nimport {\r\n    MRT_EditActionButtons,\r\n    flexRender,\r\n    MRT_GlobalFilterTextInput,\r\n    MRT_TablePagination,\r\n    MRT_ToolbarAlertBanner,\r\n    type MRT_ColumnDef,\r\n    useMantineReactTable,\r\n    MRT_TableBodyCellValue,\r\n} from 'mantine-react-table';\r\n\r\nimport { Divider, Flex, Stack, Table, Title, Button, ActionIcon, Tooltip } from '@mantine/core';\r\n\r\nimport { ModalsProvider, modals } from '@mantine/modals';\r\n\r\nimport { type Distributor, Data } from './Data';\r\nimport { IconEdit, IconTrash } from '@tabler/icons-react';\r\nimport { useMemo } from 'react';\r\nimport ActionsButtonXL from '@/components/ActionsButtonXL/ActionsButtonXL';\r\n\r\nconst columns: MRT_ColumnDef<Distributor>[] = [\r\n    {\r\n        accessorKey: 'distributorName',\r\n        header: 'Distributor Name',\r\n        Cell: ({ renderedCellValue }) => (\r\n            <a style={{ color: \"#EF4887\", textDecoration: \"underline\" }} href=\"\">\r\n\r\n                {renderedCellValue}\r\n\r\n            </a>\r\n        ),\r\n        // mantineTableBodyCellProps: {\r\n        //     align: 'center',\r\n        // },\r\n\r\n    },\r\n    {\r\n        accessorKey: 'nationalID',\r\n        header: 'NationalID',\r\n        size: 180,\r\n\r\n        mantineTableHeadCellProps: {\r\n            align: 'center',\r\n        },\r\n        mantineTableBodyCellProps: {\r\n            align: 'center',\r\n        },\r\n\r\n    },\r\n    {\r\n        accessorKey: 'city',\r\n        header: 'City',\r\n    },\r\n    {\r\n        accessorKey: 'region',\r\n        header: 'Region',\r\n    },\r\n    {\r\n        accessorKey: 'zip',\r\n        header: 'Zip',\r\n    },\r\n    {\r\n        accessorKey: 'phoneNumber',\r\n        header: 'Phone Number',\r\n    },\r\n\r\n];\r\n\r\n\r\n\r\nconst DistributorsTable = () => {\r\n\r\n\r\n    const table = useMantineReactTable({\r\n        columns,\r\n        data: Data, //must be memoized or stable (useState, useMemo, defined outside of this component, etc.)\r\n        //MRT display columns can still work, optionally override cell renders with `displayColumnDefOptions`\r\n        enableFilterMatchHighlighting: true,\r\n        enableGlobalFilter: true,\r\n        enableGlobalFilterModes: true,\r\n        enableGlobalFilterRankedResults: true,\r\n        enableRowSelection: false,\r\n        enableEditing: true,\r\n        enableRowActions: true,\r\n        initialState: {\r\n            pagination: { pageSize: 5, pageIndex: 0 },\r\n            showGlobalFilter: true,\r\n        },\r\n        //customize the MRT components\r\n        mantinePaginationProps: {\r\n            rowsPerPageOptions: ['5', '10', '15'],\r\n        },\r\n        paginationDisplayMode: 'pages',\r\n        positionActionsColumn: 'last',\r\n        renderRowActions: ({ row, table }) => (\r\n\r\n            <Flex gap=\"md\">\r\n                <Tooltip label=\"Edit\">\r\n                    <ActionIcon onClick={() => table.setEditingRow(row)}>\r\n                        <IconEdit />\r\n                    </ActionIcon >\r\n                </Tooltip >\r\n                <Tooltip label=\"Delete\">\r\n                    <ActionIcon color=\"red\"\r\n                    // onClick={() => openDeleteConfirmModal(row)}\r\n                    >\r\n                        <IconTrash />\r\n                    </ActionIcon>\r\n                </Tooltip>\r\n            </Flex >\r\n        ),\r\n    });\r\n\r\n    return (\r\n        <Stack>\r\n            {/* <Divider /> */}\r\n            <Title pb={50} order={2}>Distributors Information</Title>\r\n            <Flex justify=\"space-between\" align=\"center\">\r\n                {/**\r\n         * Use MRT components along side your own markup.\r\n         * They just need the `table` instance passed as a prop to work!\r\n         */}\r\n                <MRT_GlobalFilterTextInput table={table} />\r\n                <ActionsButtonXL title=\"Add a new distributor\" />\r\n\r\n            </Flex>\r\n            {/* Using Vanilla Mantine Table component here */}\r\n            <Table.ScrollContainer minWidth={500}>\r\n                <Table\r\n                    captionSide=\"top\"\r\n                    fz=\"md\"\r\n                    highlightOnHover\r\n                    horizontalSpacing=\"xl\"\r\n                    striped\r\n                    verticalSpacing=\"xs\"\r\n                    withTableBorder\r\n                    withColumnBorders\r\n                    m=\"0\"\r\n                // miw=\"700\"\r\n                >\r\n                    {/* Use your own markup or stock Mantine components, customize however you want using the power of TanStack Table */}\r\n                    <Table.Thead>\r\n                        {table.getHeaderGroups().map((headerGroup) => (\r\n                            <Table.Tr key={headerGroup.id}>\r\n                                {headerGroup.headers.map((header) => (\r\n                                    <Table.Th key={header.id}>\r\n                                        {header.isPlaceholder\r\n                                            ? null\r\n                                            : flexRender(\r\n                                                header.column.columnDef.Header ??\r\n                                                header.column.columnDef.header,\r\n                                                header.getContext(),\r\n                                            )}\r\n                                    </Table.Th>\r\n                                ))}\r\n                            </Table.Tr>\r\n                        ))}\r\n                    </Table.Thead>\r\n                    <Table.Tbody>\r\n                        {table.getRowModel().rows.map((row) => (\r\n                            <Table.Tr key={row.id}>\r\n                                {row.getVisibleCells().map((cell) => (\r\n                                    <Table.Td key={cell.id}>\r\n                                        <MRT_TableBodyCellValue cell={cell} table={table} />\r\n                                    </Table.Td>\r\n                                ))}\r\n                            </Table.Tr>\r\n                        ))}\r\n                    </Table.Tbody>\r\n                </Table>\r\n            </Table.ScrollContainer>\r\n            <MRT_TablePagination table={table} />\r\n            <MRT_ToolbarAlertBanner stackAlertBanner table={table} />\r\n        </Stack >\r\n    );\r\n};\r\n\r\nexport default DistributorsTable;"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;AAyBA,MAAM,UAAwC;IAC1C;QACI,aAAa;QACb,QAAQ;QACR,MAAM,CAAC,EAAE,iBAAiB,EAAE,iBACxB,mPAAC;gBAAE,OAAO;oBAAE,OAAO;oBAAW,gBAAgB;gBAAY;gBAAG,MAAK;0BAE7D;;;;;;IAQb;IACA;QACI,aAAa;QACb,QAAQ;QACR,MAAM;QAEN,2BAA2B;YACvB,OAAO;QACX;QACA,2BAA2B;YACvB,OAAO;QACX;IAEJ;IACA;QACI,aAAa;QACb,QAAQ;IACZ;IACA;QACI,aAAa;QACb,QAAQ;IACZ;IACA;QACI,aAAa;QACb,QAAQ;IACZ;IACA;QACI,aAAa;QACb,QAAQ;IACZ;CAEH;AAID,MAAM,oBAAoB;IAGtB,MAAM,QAAQ,2LAAqB;QAC/B;QACA,IAAI;QACJ,qGAAqG;QACrG,+BAA+B;QAC/B,oBAAoB;QACpB,yBAAyB;QACzB,iCAAiC;QACjC,oBAAoB;QACpB,eAAe;QACf,kBAAkB;QAClB,cAAc;YACV,YAAY;gBAAE,UAAU;gBAAG,WAAW;YAAE;YACxC,kBAAkB;QACtB;QACA,8BAA8B;QAC9B,wBAAwB;YACpB,oBAAoB;gBAAC;gBAAK;gBAAM;aAAK;QACzC;QACA,uBAAuB;QACvB,uBAAuB;QACvB,kBAAkB,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,iBAE7B;gBAAM,KAAI;;kCACN;wBAAS,OAAM;kCACX,cAAA;4BAAY,SAAS,IAAM,MAAM,aAAa,CAAC;sCAC3C,cAAA;;;;;;;;;;;;;;;kCAGR;wBAAS,OAAM;kCACX,cAAA;4BAAY,OAAM;sCAGd,cAAA;;;;;;;;;;;;;;;;;;;;;IAKpB;IAEA,qBACI;;0BAEI;gBAAO,IAAI;gBAAI,OAAO;0BAAG;;;;;;0BACzB;gBAAM,SAAQ;gBAAgB,OAAM;;kCAKhC;wBAA2B,OAAO;;;;;;kCAClC;wBAAiB,OAAM;;;;;;;;;;;;0BAI3B,mPAAC,mLAAM,eAAe;gBAAC,UAAU;0BAC7B,cAAA;oBACI,aAAY;oBACZ,IAAG;oBACH,gBAAgB;oBAChB,mBAAkB;oBAClB,OAAO;oBACP,iBAAgB;oBAChB,eAAe;oBACf,iBAAiB;oBACjB,GAAE;;sCAIF,mPAAC,mLAAM,KAAK;sCACP,MAAM,eAAe,GAAG,GAAG,CAAC,CAAC,4BAC1B,mPAAC,mLAAM,EAAE;8CACJ,YAAY,OAAO,CAAC,GAAG,CAAC,CAAC,uBACtB,mPAAC,mLAAM,EAAE;sDACJ,OAAO,aAAa,GACf,OACA,iLACE,OAAO,MAAM,CAAC,SAAS,CAAC,MAAM,IAC9B,OAAO,MAAM,CAAC,SAAS,CAAC,MAAM,EAC9B,OAAO,UAAU;2CANd,OAAO,EAAE;;;;;mCAFjB,YAAY,EAAE;;;;;;;;;;sCAerC,mPAAC,mLAAM,KAAK;sCACP,MAAM,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,oBAC3B,mPAAC,mLAAM,EAAE;8CACJ,IAAI,eAAe,GAAG,GAAG,CAAC,CAAC,qBACxB,mPAAC,mLAAM,EAAE;sDACL,cAAA;gDAAwB,MAAM;gDAAM,OAAO;;;;;;2CADhC,KAAK,EAAE;;;;;mCAFf,IAAI,EAAE;;;;;;;;;;;;;;;;;;;;;0BAWrC;gBAAqB,OAAO;;;;;;0BAC5B;gBAAwB,gBAAgB;gBAAC,OAAO;;;;;;;;;;;;AAG5D;uCAEe"}},
    {"offset": {"line": 390, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}