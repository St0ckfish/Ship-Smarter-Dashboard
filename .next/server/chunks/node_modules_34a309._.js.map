{
  "version": 3,
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["../../../../../src/server/future/route-modules/app-page/module.compiled.js","/turbopack/[project]/node_modules/next/dist/server/future/route-modules/app-page/module.compiled.js"],"names":["module","exports","require"],"mappings":";AAAA;;OAEO;IACL;;WAQO;QACL,wCAA4C;YAC1CA,OAAOC,OAAO,GAAGC;QACnB;;;IAKF;AACF"}},
    {"offset": {"line": 18, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 22, "column": 0}, "map": {"version":3,"sources":["../../../../../../../src/server/future/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.ts","/turbopack/[project]/node_modules/next/dist/server/future/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.js"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,yIAAiCC,QAAQ,CACxD,YACD,CAACC,kBAAkB"}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/tslib/tslib.es6.mjs"],"sourcesContent":["/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n  return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose;\n    if (async) {\n        if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n        dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n        if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n        dispose = value[Symbol.dispose];\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  function next() {\n    while (env.stack.length) {\n      var rec = env.stack.pop();\n      try {\n        var result = rec.dispose && rec.dispose.call(rec.value);\n        if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n      }\n      catch (e) {\n          fail(e);\n      }\n    }\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 581, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 585, "column": 0}, "map": {"version":3,"sources":["../../../../../../../src/server/future/route-modules/app-page/vendored/rsc/react.ts","/turbopack/[project]/node_modules/next/dist/server/future/route-modules/app-page/vendored/rsc/react.js"],"names":["module","exports","require","vendored","React"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,yIAAiCC,QAAQ,CAAC,YAAY,CAACC,KAAK"}},
    {"offset": {"line": 587, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 592, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/react-remove-scroll-bar/dist/es2015/constants.js"],"sourcesContent":["export var zeroRightClassName = 'right-scroll-bar-position';\nexport var fullWidthClassName = 'width-before-scroll-bar';\nexport var noScrollbarsClassName = 'with-scroll-bars-hidden';\n/**\n * Name of a CSS variable containing the amount of \"hidden\" scrollbar\n * ! might be undefined ! use will fallback!\n */\nexport var removedBarSizeVariable = '--removed-body-scroll-bar-size';\n"],"names":[],"mappings":";;;;;;AAAO,IAAI,qBAAqB;AACzB,IAAI,qBAAqB;AACzB,IAAI,wBAAwB;AAK5B,IAAI,yBAAyB"}},
    {"offset": {"line": 602, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 607, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/use-callback-ref/dist/es2015/assignRef.js"],"sourcesContent":["/**\n * Assigns a value for a given ref, no matter of the ref format\n * @param {RefObject} ref - a callback function or ref object\n * @param value - a new value\n *\n * @see https://github.com/theKashey/use-callback-ref#assignref\n * @example\n * const refObject = useRef();\n * const refFn = (ref) => {....}\n *\n * assignRef(refObject, \"refValue\");\n * assignRef(refFn, \"refValue\");\n */\nexport function assignRef(ref, value) {\n    if (typeof ref === 'function') {\n        ref(value);\n    }\n    else if (ref) {\n        ref.current = value;\n    }\n    return ref;\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;CAYC;;;AACM,SAAS,UAAU,GAAG,EAAE,KAAK;IAChC,IAAI,OAAO,QAAQ,YAAY;QAC3B,IAAI;IACR,OACK,IAAI,KAAK;QACV,IAAI,OAAO,GAAG;IAClB;IACA,OAAO;AACX"}},
    {"offset": {"line": 630, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 635, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/use-callback-ref/dist/es2015/useRef.js"],"sourcesContent":["import { useState } from 'react';\n/**\n * creates a MutableRef with ref change callback\n * @param initialValue - initial ref value\n * @param {Function} callback - a callback to run when value changes\n *\n * @example\n * const ref = useCallbackRef(0, (newValue, oldValue) => console.log(oldValue, '->', newValue);\n * ref.current = 1;\n * // prints 0 -> 1\n *\n * @see https://reactjs.org/docs/hooks-reference.html#useref\n * @see https://github.com/theKashey/use-callback-ref#usecallbackref---to-replace-reactuseref\n * @returns {MutableRefObject}\n */\nexport function useCallbackRef(initialValue, callback) {\n    var ref = useState(function () { return ({\n        // value\n        value: initialValue,\n        // last callback\n        callback: callback,\n        // \"memoized\" public interface\n        facade: {\n            get current() {\n                return ref.value;\n            },\n            set current(value) {\n                var last = ref.value;\n                if (last !== value) {\n                    ref.value = value;\n                    ref.callback(value, last);\n                }\n            },\n        },\n    }); })[0];\n    // update callback\n    ref.callback = callback;\n    return ref.facade;\n}\n"],"names":[],"mappings":";;;;;;AAeO,SAAS,eAAe,YAAY,EAAE,QAAQ;IACjD,IAAI,MAAM,4NAAS;QAAc,OAAQ;YACrC,QAAQ;YACR,OAAO;YACP,gBAAgB;YAChB,UAAU;YACV,8BAA8B;YAC9B,QAAQ;gBACJ,IAAI,WAAU;oBACV,OAAO,IAAI,KAAK;gBACpB;gBACA,IAAI,SAAQ,MAAO;oBACf,IAAI,OAAO,IAAI,KAAK;oBACpB,IAAI,SAAS,OAAO;wBAChB,IAAI,KAAK,GAAG;wBACZ,IAAI,QAAQ,CAAC,OAAO;oBACxB;gBACJ;YACJ;QACJ;IAAI,EAAE,CAAC,EAAE;IACT,kBAAkB;IAClB,IAAI,QAAQ,GAAG;IACf,OAAO,IAAI,MAAM;AACrB"}},
    {"offset": {"line": 667, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 672, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/use-callback-ref/dist/es2015/useMergeRef.js"],"sourcesContent":["import * as React from 'react';\nimport { assignRef } from './assignRef';\nimport { useCallbackRef } from './useRef';\nvar useIsomorphicLayoutEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nvar currentValues = new WeakMap();\n/**\n * Merges two or more refs together providing a single interface to set their value\n * @param {RefObject|Ref} refs\n * @returns {MutableRefObject} - a new ref, which translates all changes to {refs}\n *\n * @see {@link mergeRefs} a version without buit-in memoization\n * @see https://github.com/theKashey/use-callback-ref#usemergerefs\n * @example\n * const Component = React.forwardRef((props, ref) => {\n *   const ownRef = useRef();\n *   const domRef = useMergeRefs([ref, ownRef]); // 👈 merge together\n *   return <div ref={domRef}>...</div>\n * }\n */\nexport function useMergeRefs(refs, defaultValue) {\n    var callbackRef = useCallbackRef(defaultValue || null, function (newValue) {\n        return refs.forEach(function (ref) { return assignRef(ref, newValue); });\n    });\n    // handle refs changes - added or removed\n    useIsomorphicLayoutEffect(function () {\n        var oldValue = currentValues.get(callbackRef);\n        if (oldValue) {\n            var prevRefs_1 = new Set(oldValue);\n            var nextRefs_1 = new Set(refs);\n            var current_1 = callbackRef.current;\n            prevRefs_1.forEach(function (ref) {\n                if (!nextRefs_1.has(ref)) {\n                    assignRef(ref, null);\n                }\n            });\n            nextRefs_1.forEach(function (ref) {\n                if (!prevRefs_1.has(ref)) {\n                    assignRef(ref, current_1);\n                }\n            });\n        }\n        currentValues.set(callbackRef, refs);\n    }, [refs]);\n    return callbackRef;\n}\n"],"names":[],"mappings":";;;;;;;;;;AAGA,IAAI,4BAA4B,OAAO,WAAW,cAAc,gNAAM,eAAe,GAAG,gNAAM,SAAS;AACvG,IAAI,gBAAgB,IAAI;AAejB,SAAS,aAAa,IAAI,EAAE,YAAY;IAC3C,IAAI,cAAc,qLAAe,gBAAgB,MAAM,SAAU,QAAQ;QACrE,OAAO,KAAK,OAAO,CAAC,SAAU,GAAG;YAAI,OAAO,mLAAU,KAAK;QAAW;IAC1E;IACA,yCAAyC;IACzC,0BAA0B;QACtB,IAAI,WAAW,cAAc,GAAG,CAAC;QACjC,IAAI,UAAU;YACV,IAAI,aAAa,IAAI,IAAI;YACzB,IAAI,aAAa,IAAI,IAAI;YACzB,IAAI,YAAY,YAAY,OAAO;YACnC,WAAW,OAAO,CAAC,SAAU,GAAG;gBAC5B,IAAI,CAAC,WAAW,GAAG,CAAC,MAAM;oBACtB,mLAAU,KAAK;gBACnB;YACJ;YACA,WAAW,OAAO,CAAC,SAAU,GAAG;gBAC5B,IAAI,CAAC,WAAW,GAAG,CAAC,MAAM;oBACtB,mLAAU,KAAK;gBACnB;YACJ;QACJ;QACA,cAAc,GAAG,CAAC,aAAa;IACnC,GAAG;QAAC;KAAK;IACT,OAAO;AACX"}},
    {"offset": {"line": 714, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 719, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/detect-node-es/esm/node.js"],"sourcesContent":["// Only Node.JS has a process variable that is of [[Class]] process\nexport const isNode = Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\n"],"names":[],"mappings":"AAAA,mEAAmE;;;;AAC5D,MAAM,SAAS,OAAO,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,YAAY,cAAc,UAAU,OAAO"}},
    {"offset": {"line": 724, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 729, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/use-sidecar/dist/es2015/env.js"],"sourcesContent":["import { isNode } from 'detect-node-es';\nexport var env = {\n    isNode: isNode,\n    forceCache: false,\n};\n"],"names":[],"mappings":";;;;;;AACO,IAAI,MAAM;IACb,MAAM;IACN,YAAY;AAChB"}},
    {"offset": {"line": 739, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 744, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/use-sidecar/dist/es2015/hook.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { env } from './env';\nvar cache = new WeakMap();\nvar NO_OPTIONS = {};\nexport function useSidecar(importer, effect) {\n    var options = (effect && effect.options) || NO_OPTIONS;\n    if (env.isNode && !options.ssr) {\n        return [null, null];\n    }\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    return useRealSidecar(importer, effect);\n}\nfunction useRealSidecar(importer, effect) {\n    var options = (effect && effect.options) || NO_OPTIONS;\n    var couldUseCache = env.forceCache || (env.isNode && !!options.ssr) || !options.async;\n    var _a = useState(couldUseCache ? function () { return cache.get(importer); } : undefined), Car = _a[0], setCar = _a[1];\n    var _b = useState(null), error = _b[0], setError = _b[1];\n    useEffect(function () {\n        if (!Car) {\n            importer().then(function (car) {\n                var resolved = effect ? effect.read() : car.default || car;\n                if (!resolved) {\n                    console.error('Sidecar error: with importer', importer);\n                    var error_1;\n                    if (effect) {\n                        console.error('Sidecar error: with medium', effect);\n                        error_1 = new Error('Sidecar medium was not found');\n                    }\n                    else {\n                        error_1 = new Error('Sidecar was not found in exports');\n                    }\n                    setError(function () { return error_1; });\n                    throw error_1;\n                }\n                cache.set(importer, resolved);\n                setCar(function () { return resolved; });\n            }, function (e) { return setError(function () { return e; }); });\n        }\n    }, []);\n    return [Car, error];\n}\n"],"names":[],"mappings":";;;;;;;;AAEA,IAAI,QAAQ,IAAI;AAChB,IAAI,aAAa,CAAC;AACX,SAAS,WAAW,QAAQ,EAAE,MAAM;IACvC,IAAI,UAAU,AAAC,UAAU,OAAO,OAAO,IAAK;IAC5C,IAAI,+JAAI,MAAM,IAAI,CAAC,QAAQ,GAAG,EAAE;QAC5B,OAAO;YAAC;YAAM;SAAK;IACvB;IACA,sDAAsD;IACtD,OAAO,eAAe,UAAU;AACpC;AACA,SAAS,eAAe,QAAQ,EAAE,MAAM;IACpC,IAAI,UAAU,AAAC,UAAU,OAAO,OAAO,IAAK;IAC5C,IAAI,gBAAgB,+JAAI,UAAU,IAAK,+JAAI,MAAM,IAAI,CAAC,CAAC,QAAQ,GAAG,IAAK,CAAC,QAAQ,KAAK;IACrF,IAAI,KAAK,4NAAS,gBAAgB;QAAc,OAAO,MAAM,GAAG,CAAC;IAAW,IAAI,YAAY,MAAM,EAAE,CAAC,EAAE,EAAE,SAAS,EAAE,CAAC,EAAE;IACvH,IAAI,KAAK,4NAAS,OAAO,QAAQ,EAAE,CAAC,EAAE,EAAE,WAAW,EAAE,CAAC,EAAE;IACxD,6NAAU;QACN,IAAI,CAAC,KAAK;YACN,WAAW,IAAI,CAAC,SAAU,GAAG;gBACzB,IAAI,WAAW,SAAS,OAAO,IAAI,KAAK,IAAI,OAAO,IAAI;gBACvD,IAAI,CAAC,UAAU;oBACX,QAAQ,KAAK,CAAC,gCAAgC;oBAC9C,IAAI;oBACJ,IAAI,QAAQ;wBACR,QAAQ,KAAK,CAAC,8BAA8B;wBAC5C,UAAU,IAAI,MAAM;oBACxB,OACK;wBACD,UAAU,IAAI,MAAM;oBACxB;oBACA,SAAS;wBAAc,OAAO;oBAAS;oBACvC,MAAM;gBACV;gBACA,MAAM,GAAG,CAAC,UAAU;gBACpB,OAAO;oBAAc,OAAO;gBAAU;YAC1C,GAAG,SAAU,CAAC;gBAAI,OAAO,SAAS;oBAAc,OAAO;gBAAG;YAAI;QAClE;IACJ,GAAG,EAAE;IACL,OAAO;QAAC;QAAK;KAAM;AACvB"}},
    {"offset": {"line": 806, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 811, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/use-sidecar/dist/es2015/hoc.js"],"sourcesContent":["import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { useSidecar } from './hook';\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function sidecar(importer, errorComponent) {\n    var ErrorCase = function () { return errorComponent; };\n    return function Sidecar(props) {\n        var _a = useSidecar(importer, props.sideCar), Car = _a[0], error = _a[1];\n        if (error && errorComponent) {\n            return ErrorCase;\n        }\n        // @ts-expect-error type shenanigans\n        return Car ? React.createElement(Car, __assign({}, props)) : null;\n    };\n}\n"],"names":[],"mappings":";;;;;;;;;;AAIO,SAAS,QAAQ,QAAQ,EAAE,cAAc;IAC5C,IAAI,YAAY;QAAc,OAAO;IAAgB;IACrD,OAAO,SAAS,QAAQ,KAAK;QACzB,IAAI,KAAK,uKAAW,UAAU,MAAM,OAAO,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE;QACxE,IAAI,SAAS,gBAAgB;YACzB,OAAO;QACX;QACA,oCAAoC;QACpC,OAAO,MAAM,gNAAM,aAAa,CAAC,KAAK,mJAAS,CAAC,GAAG,UAAU;IACjE;AACJ"}},
    {"offset": {"line": 834, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 839, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/use-sidecar/dist/es2015/config.js"],"sourcesContent":["export var config = {\n    onError: function (e) { return console.error(e); },\n};\nexport var setConfig = function (conf) {\n    Object.assign(config, conf);\n};\n"],"names":[],"mappings":";;;;AAAO,IAAI,SAAS;IAChB,SAAS,SAAU,CAAC;QAAI,OAAO,QAAQ,KAAK,CAAC;IAAI;AACrD;AACO,IAAI,YAAY,SAAU,IAAI;IACjC,OAAO,MAAM,CAAC,QAAQ;AAC1B"}},
    {"offset": {"line": 851, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 856, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/use-sidecar/dist/es2015/medium.js"],"sourcesContent":["import { __assign } from \"tslib\";\nfunction ItoI(a) {\n    return a;\n}\nfunction innerCreateMedium(defaults, middleware) {\n    if (middleware === void 0) { middleware = ItoI; }\n    var buffer = [];\n    var assigned = false;\n    var medium = {\n        read: function () {\n            if (assigned) {\n                throw new Error('Sidecar: could not `read` from an `assigned` medium. `read` could be used only with `useMedium`.');\n            }\n            if (buffer.length) {\n                return buffer[buffer.length - 1];\n            }\n            return defaults;\n        },\n        useMedium: function (data) {\n            var item = middleware(data, assigned);\n            buffer.push(item);\n            return function () {\n                buffer = buffer.filter(function (x) { return x !== item; });\n            };\n        },\n        assignSyncMedium: function (cb) {\n            assigned = true;\n            while (buffer.length) {\n                var cbs = buffer;\n                buffer = [];\n                cbs.forEach(cb);\n            }\n            buffer = {\n                push: function (x) { return cb(x); },\n                filter: function () { return buffer; },\n            };\n        },\n        assignMedium: function (cb) {\n            assigned = true;\n            var pendingQueue = [];\n            if (buffer.length) {\n                var cbs = buffer;\n                buffer = [];\n                cbs.forEach(cb);\n                pendingQueue = buffer;\n            }\n            var executeQueue = function () {\n                var cbs = pendingQueue;\n                pendingQueue = [];\n                cbs.forEach(cb);\n            };\n            var cycle = function () { return Promise.resolve().then(executeQueue); };\n            cycle();\n            buffer = {\n                push: function (x) {\n                    pendingQueue.push(x);\n                    cycle();\n                },\n                filter: function (filter) {\n                    pendingQueue = pendingQueue.filter(filter);\n                    return buffer;\n                },\n            };\n        },\n    };\n    return medium;\n}\nexport function createMedium(defaults, middleware) {\n    if (middleware === void 0) { middleware = ItoI; }\n    return innerCreateMedium(defaults, middleware);\n}\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function createSidecarMedium(options) {\n    if (options === void 0) { options = {}; }\n    var medium = innerCreateMedium(null);\n    medium.options = __assign({ async: true, ssr: false }, options);\n    return medium;\n}\n"],"names":[],"mappings":";;;;;;;AACA,SAAS,KAAK,CAAC;IACX,OAAO;AACX;AACA,SAAS,kBAAkB,QAAQ,EAAE,UAAU;IAC3C,IAAI,eAAe,KAAK,GAAG;QAAE,aAAa;IAAM;IAChD,IAAI,SAAS,EAAE;IACf,IAAI,WAAW;IACf,IAAI,SAAS;QACT,MAAM;YACF,IAAI,UAAU;gBACV,MAAM,IAAI,MAAM;YACpB;YACA,IAAI,OAAO,MAAM,EAAE;gBACf,OAAO,MAAM,CAAC,OAAO,MAAM,GAAG,EAAE;YACpC;YACA,OAAO;QACX;QACA,WAAW,SAAU,IAAI;YACrB,IAAI,OAAO,WAAW,MAAM;YAC5B,OAAO,IAAI,CAAC;YACZ,OAAO;gBACH,SAAS,OAAO,MAAM,CAAC,SAAU,CAAC;oBAAI,OAAO,MAAM;gBAAM;YAC7D;QACJ;QACA,kBAAkB,SAAU,EAAE;YAC1B,WAAW;YACX,MAAO,OAAO,MAAM,CAAE;gBAClB,IAAI,MAAM;gBACV,SAAS,EAAE;gBACX,IAAI,OAAO,CAAC;YAChB;YACA,SAAS;gBACL,MAAM,SAAU,CAAC;oBAAI,OAAO,GAAG;gBAAI;gBACnC,QAAQ;oBAAc,OAAO;gBAAQ;YACzC;QACJ;QACA,cAAc,SAAU,EAAE;YACtB,WAAW;YACX,IAAI,eAAe,EAAE;YACrB,IAAI,OAAO,MAAM,EAAE;gBACf,IAAI,MAAM;gBACV,SAAS,EAAE;gBACX,IAAI,OAAO,CAAC;gBACZ,eAAe;YACnB;YACA,IAAI,eAAe;gBACf,IAAI,MAAM;gBACV,eAAe,EAAE;gBACjB,IAAI,OAAO,CAAC;YAChB;YACA,IAAI,QAAQ;gBAAc,OAAO,QAAQ,OAAO,GAAG,IAAI,CAAC;YAAe;YACvE;YACA,SAAS;gBACL,MAAM,SAAU,CAAC;oBACb,aAAa,IAAI,CAAC;oBAClB;gBACJ;gBACA,QAAQ,SAAU,MAAM;oBACpB,eAAe,aAAa,MAAM,CAAC;oBACnC,OAAO;gBACX;YACJ;QACJ;IACJ;IACA,OAAO;AACX;AACO,SAAS,aAAa,QAAQ,EAAE,UAAU;IAC7C,IAAI,eAAe,KAAK,GAAG;QAAE,aAAa;IAAM;IAChD,OAAO,kBAAkB,UAAU;AACvC;AAEO,SAAS,oBAAoB,OAAO;IACvC,IAAI,YAAY,KAAK,GAAG;QAAE,UAAU,CAAC;IAAG;IACxC,IAAI,SAAS,kBAAkB;IAC/B,OAAO,OAAO,GAAG,mJAAS;QAAE,OAAO;QAAM,KAAK;IAAM,GAAG;IACvD,OAAO;AACX"}},
    {"offset": {"line": 956, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 961, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/use-sidecar/dist/es2015/renderProp.js"],"sourcesContent":["import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { useState, useCallback, useEffect, useLayoutEffect } from 'react';\nexport function renderCar(WrappedComponent, defaults) {\n    function State(_a) {\n        var stateRef = _a.stateRef, props = _a.props;\n        var renderTarget = useCallback(function SideTarget() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            useLayoutEffect(function () {\n                stateRef.current(args);\n            });\n            return null;\n        }, []);\n        // @ts-ignore\n        return React.createElement(WrappedComponent, __assign({}, props, { children: renderTarget }));\n    }\n    var Children = React.memo(function (_a) {\n        var stateRef = _a.stateRef, defaultState = _a.defaultState, children = _a.children;\n        var _b = useState(defaultState.current), state = _b[0], setState = _b[1];\n        useEffect(function () {\n            stateRef.current = setState;\n        }, []);\n        return children.apply(void 0, state);\n    }, function () { return true; });\n    return function Combiner(props) {\n        var defaultState = React.useRef(defaults(props));\n        var ref = React.useRef(function (state) { return (defaultState.current = state); });\n        return (React.createElement(React.Fragment, null,\n            React.createElement(State, { stateRef: ref, props: props }),\n            React.createElement(Children, { stateRef: ref, defaultState: defaultState, children: props.children })));\n    };\n}\n"],"names":[],"mappings":";;;;;;;;;AAGO,SAAS,UAAU,gBAAgB,EAAE,QAAQ;IAChD,SAAS,MAAM,EAAE;QACb,IAAI,WAAW,GAAG,QAAQ,EAAE,QAAQ,GAAG,KAAK;QAC5C,IAAI,eAAe,+NAAY,SAAS;YACpC,IAAI,OAAO,EAAE;YACb,IAAK,IAAI,KAAK,GAAG,KAAK,UAAU,MAAM,EAAE,KAAM;gBAC1C,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC,GAAG;YAC5B;YACA,mOAAgB;gBACZ,SAAS,OAAO,CAAC;YACrB;YACA,OAAO;QACX,GAAG,EAAE;QACL,aAAa;QACb,OAAO,gNAAM,aAAa,CAAC,kBAAkB,mJAAS,CAAC,GAAG,OAAO;YAAE,UAAU;QAAa;IAC9F;IACA,IAAI,WAAW,gNAAM,IAAI,CAAC,SAAU,EAAE;QAClC,IAAI,WAAW,GAAG,QAAQ,EAAE,eAAe,GAAG,YAAY,EAAE,WAAW,GAAG,QAAQ;QAClF,IAAI,KAAK,4NAAS,aAAa,OAAO,GAAG,QAAQ,EAAE,CAAC,EAAE,EAAE,WAAW,EAAE,CAAC,EAAE;QACxE,6NAAU;YACN,SAAS,OAAO,GAAG;QACvB,GAAG,EAAE;QACL,OAAO,SAAS,KAAK,CAAC,KAAK,GAAG;IAClC,GAAG;QAAc,OAAO;IAAM;IAC9B,OAAO,SAAS,SAAS,KAAK;QAC1B,IAAI,eAAe,gNAAM,MAAM,CAAC,SAAS;QACzC,IAAI,MAAM,gNAAM,MAAM,CAAC,SAAU,KAAK;YAAI,OAAQ,aAAa,OAAO,GAAG;QAAQ;QACjF,OAAQ,gNAAM,aAAa,CAAC,gNAAM,QAAQ,EAAE,MACxC,gNAAM,aAAa,CAAC,OAAO;YAAE,UAAU;YAAK,OAAO;QAAM,IACzD,gNAAM,aAAa,CAAC,UAAU;YAAE,UAAU;YAAK,cAAc;YAAc,UAAU,MAAM,QAAQ;QAAC;IAC5G;AACJ"}},
    {"offset": {"line": 1013, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1018, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/use-sidecar/dist/es2015/exports.js"],"sourcesContent":["import { __assign, __rest } from \"tslib\";\nimport * as React from 'react';\nvar SideCar = function (_a) {\n    var sideCar = _a.sideCar, rest = __rest(_a, [\"sideCar\"]);\n    if (!sideCar) {\n        throw new Error('Sidecar: please provide `sideCar` property to import the right car');\n    }\n    var Target = sideCar.read();\n    if (!Target) {\n        throw new Error('Sidecar medium not found');\n    }\n    return React.createElement(Target, __assign({}, rest));\n};\nSideCar.isSideCarExport = true;\nexport function exportSidecar(medium, exported) {\n    medium.useMedium(exported);\n    return SideCar;\n}\n"],"names":[],"mappings":";;;;;;;;AAEA,IAAI,UAAU,SAAU,EAAE;IACtB,IAAI,UAAU,GAAG,OAAO,EAAE,OAAO,iJAAO,IAAI;QAAC;KAAU;IACvD,IAAI,CAAC,SAAS;QACV,MAAM,IAAI,MAAM;IACpB;IACA,IAAI,SAAS,QAAQ,IAAI;IACzB,IAAI,CAAC,QAAQ;QACT,MAAM,IAAI,MAAM;IACpB;IACA,OAAO,gNAAM,aAAa,CAAC,QAAQ,mJAAS,CAAC,GAAG;AACpD;AACA,QAAQ,eAAe,GAAG;AACnB,SAAS,cAAc,MAAM,EAAE,QAAQ;IAC1C,OAAO,SAAS,CAAC;IACjB,OAAO;AACX"}},
    {"offset": {"line": 1044, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1049, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 1056, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1075, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/react-remove-scroll/dist/es2015/medium.js"],"sourcesContent":["import { createSidecarMedium } from 'use-sidecar';\nexport var effectCar = createSidecarMedium();\n"],"names":[],"mappings":";;;;;;;AACO,IAAI,YAAY"}},
    {"offset": {"line": 1083, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1088, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/react-remove-scroll/dist/es2015/UI.js"],"sourcesContent":["import { __assign, __rest } from \"tslib\";\nimport * as React from 'react';\nimport { fullWidthClassName, zeroRightClassName } from 'react-remove-scroll-bar/constants';\nimport { useMergeRefs } from 'use-callback-ref';\nimport { effectCar } from './medium';\nvar nothing = function () {\n    return;\n};\n/**\n * Removes scrollbar from the page and contain the scroll within the Lock\n */\nvar RemoveScroll = React.forwardRef(function (props, parentRef) {\n    var ref = React.useRef(null);\n    var _a = React.useState({\n        onScrollCapture: nothing,\n        onWheelCapture: nothing,\n        onTouchMoveCapture: nothing,\n    }), callbacks = _a[0], setCallbacks = _a[1];\n    var forwardProps = props.forwardProps, children = props.children, className = props.className, removeScrollBar = props.removeScrollBar, enabled = props.enabled, shards = props.shards, sideCar = props.sideCar, noIsolation = props.noIsolation, inert = props.inert, allowPinchZoom = props.allowPinchZoom, _b = props.as, Container = _b === void 0 ? 'div' : _b, gapMode = props.gapMode, rest = __rest(props, [\"forwardProps\", \"children\", \"className\", \"removeScrollBar\", \"enabled\", \"shards\", \"sideCar\", \"noIsolation\", \"inert\", \"allowPinchZoom\", \"as\", \"gapMode\"]);\n    var SideCar = sideCar;\n    var containerRef = useMergeRefs([ref, parentRef]);\n    var containerProps = __assign(__assign({}, rest), callbacks);\n    return (React.createElement(React.Fragment, null,\n        enabled && (React.createElement(SideCar, { sideCar: effectCar, removeScrollBar: removeScrollBar, shards: shards, noIsolation: noIsolation, inert: inert, setCallbacks: setCallbacks, allowPinchZoom: !!allowPinchZoom, lockRef: ref, gapMode: gapMode })),\n        forwardProps ? (React.cloneElement(React.Children.only(children), __assign(__assign({}, containerProps), { ref: containerRef }))) : (React.createElement(Container, __assign({}, containerProps, { className: className, ref: containerRef }), children))));\n});\nRemoveScroll.defaultProps = {\n    enabled: true,\n    removeScrollBar: true,\n    inert: false,\n};\nRemoveScroll.classNames = {\n    fullWidth: fullWidthClassName,\n    zeroRight: zeroRightClassName,\n};\nexport { RemoveScroll };\n"],"names":[],"mappings":";;;;;;;;;;;;;;AAKA,IAAI,UAAU;IACV;AACJ;AACA;;CAEC,GACD,IAAI,eAAe,gNAAM,UAAU,CAAC,SAAU,KAAK,EAAE,SAAS;IAC1D,IAAI,MAAM,gNAAM,MAAM,CAAC;IACvB,IAAI,KAAK,gNAAM,QAAQ,CAAC;QACpB,iBAAiB;QACjB,gBAAgB;QAChB,oBAAoB;IACxB,IAAI,YAAY,EAAE,CAAC,EAAE,EAAE,eAAe,EAAE,CAAC,EAAE;IAC3C,IAAI,eAAe,MAAM,YAAY,EAAE,WAAW,MAAM,QAAQ,EAAE,YAAY,MAAM,SAAS,EAAE,kBAAkB,MAAM,eAAe,EAAE,UAAU,MAAM,OAAO,EAAE,SAAS,MAAM,MAAM,EAAE,UAAU,MAAM,OAAO,EAAE,cAAc,MAAM,WAAW,EAAE,QAAQ,MAAM,KAAK,EAAE,iBAAiB,MAAM,cAAc,EAAE,KAAK,MAAM,EAAE,EAAE,YAAY,OAAO,KAAK,IAAI,QAAQ,IAAI,UAAU,MAAM,OAAO,EAAE,OAAO,iJAAO,OAAO;QAAC;QAAgB;QAAY;QAAa;QAAmB;QAAW;QAAU;QAAW;QAAe;QAAS;QAAkB;QAAM;KAAU;IAC1iB,IAAI,UAAU;IACd,IAAI,eAAe,wLAAa;QAAC;QAAK;KAAU;IAChD,IAAI,iBAAiB,mJAAS,mJAAS,CAAC,GAAG,OAAO;IAClD,OAAQ,gNAAM,aAAa,CAAC,gNAAM,QAAQ,EAAE,MACxC,WAAY,gNAAM,aAAa,CAAC,SAAS;QAAE,OAAO;QAAa,iBAAiB;QAAiB,QAAQ;QAAQ,aAAa;QAAa,OAAO;QAAO,cAAc;QAAc,gBAAgB,CAAC,CAAC;QAAgB,SAAS;QAAK,SAAS;IAAQ,IACtP,eAAgB,gNAAM,YAAY,CAAC,gNAAM,QAAQ,CAAC,IAAI,CAAC,WAAW,mJAAS,mJAAS,CAAC,GAAG,iBAAiB;QAAE,KAAK;IAAa,MAAQ,gNAAM,aAAa,CAAC,WAAW,mJAAS,CAAC,GAAG,gBAAgB;QAAE,WAAW;QAAW,KAAK;IAAa,IAAI;AACvP;AACA,aAAa,YAAY,GAAG;IACxB,SAAS;IACT,iBAAiB;IACjB,OAAO;AACX;AACA,aAAa,UAAU,GAAG;IACtB,SAAS;IACT,SAAS;AACb"}},
    {"offset": {"line": 1161, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1166, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/get-nonce/dist/es2015/index.js"],"sourcesContent":["var currentNonce;\nexport var setNonce = function (nonce) {\n    currentNonce = nonce;\n};\nexport var getNonce = function () {\n    if (currentNonce) {\n        return currentNonce;\n    }\n    if (typeof __webpack_nonce__ !== 'undefined') {\n        return __webpack_nonce__;\n    }\n    return undefined;\n};\n"],"names":[],"mappings":";;;;AAAA,IAAI;AACG,IAAI,WAAW,SAAU,KAAK;IACjC,eAAe;AACnB;AACO,IAAI,WAAW;IAClB,IAAI,cAAc;QACd,OAAO;IACX;IACA,IAAI,OAAO,sBAAsB,aAAa;QAC1C,OAAO;IACX;IACA,OAAO;AACX"}},
    {"offset": {"line": 1183, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1188, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/react-style-singleton/dist/es2015/singleton.js"],"sourcesContent":["import { getNonce } from 'get-nonce';\nfunction makeStyleTag() {\n    if (!document)\n        return null;\n    var tag = document.createElement('style');\n    tag.type = 'text/css';\n    var nonce = getNonce();\n    if (nonce) {\n        tag.setAttribute('nonce', nonce);\n    }\n    return tag;\n}\nfunction injectStyles(tag, css) {\n    // @ts-ignore\n    if (tag.styleSheet) {\n        // @ts-ignore\n        tag.styleSheet.cssText = css;\n    }\n    else {\n        tag.appendChild(document.createTextNode(css));\n    }\n}\nfunction insertStyleTag(tag) {\n    var head = document.head || document.getElementsByTagName('head')[0];\n    head.appendChild(tag);\n}\nexport var stylesheetSingleton = function () {\n    var counter = 0;\n    var stylesheet = null;\n    return {\n        add: function (style) {\n            if (counter == 0) {\n                if ((stylesheet = makeStyleTag())) {\n                    injectStyles(stylesheet, style);\n                    insertStyleTag(stylesheet);\n                }\n            }\n            counter++;\n        },\n        remove: function () {\n            counter--;\n            if (!counter && stylesheet) {\n                stylesheet.parentNode && stylesheet.parentNode.removeChild(stylesheet);\n                stylesheet = null;\n            }\n        },\n    };\n};\n"],"names":[],"mappings":";;;;;;AACA,SAAS;IACL,IAAI,CAAC,UACD,OAAO;IACX,IAAI,MAAM,SAAS,aAAa,CAAC;IACjC,IAAI,IAAI,GAAG;IACX,IAAI,QAAQ;IACZ,IAAI,OAAO;QACP,IAAI,YAAY,CAAC,SAAS;IAC9B;IACA,OAAO;AACX;AACA,SAAS,aAAa,GAAG,EAAE,GAAG;IAC1B,aAAa;IACb,IAAI,IAAI,UAAU,EAAE;QAChB,aAAa;QACb,IAAI,UAAU,CAAC,OAAO,GAAG;IAC7B,OACK;QACD,IAAI,WAAW,CAAC,SAAS,cAAc,CAAC;IAC5C;AACJ;AACA,SAAS,eAAe,GAAG;IACvB,IAAI,OAAO,SAAS,IAAI,IAAI,SAAS,oBAAoB,CAAC,OAAO,CAAC,EAAE;IACpE,KAAK,WAAW,CAAC;AACrB;AACO,IAAI,sBAAsB;IAC7B,IAAI,UAAU;IACd,IAAI,aAAa;IACjB,OAAO;QACH,KAAK,SAAU,KAAK;YAChB,IAAI,WAAW,GAAG;gBACd,IAAK,aAAa,gBAAiB;oBAC/B,aAAa,YAAY;oBACzB,eAAe;gBACnB;YACJ;YACA;QACJ;QACA,QAAQ;YACJ;YACA,IAAI,CAAC,WAAW,YAAY;gBACxB,WAAW,UAAU,IAAI,WAAW,UAAU,CAAC,WAAW,CAAC;gBAC3D,aAAa;YACjB;QACJ;IACJ;AACJ"}},
    {"offset": {"line": 1239, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1244, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/react-style-singleton/dist/es2015/hook.js"],"sourcesContent":["import * as React from 'react';\nimport { stylesheetSingleton } from './singleton';\n/**\n * creates a hook to control style singleton\n * @see {@link styleSingleton} for a safer component version\n * @example\n * ```tsx\n * const useStyle = styleHookSingleton();\n * ///\n * useStyle('body { overflow: hidden}');\n */\nexport var styleHookSingleton = function () {\n    var sheet = stylesheetSingleton();\n    return function (styles, isDynamic) {\n        React.useEffect(function () {\n            sheet.add(styles);\n            return function () {\n                sheet.remove();\n            };\n        }, [styles && isDynamic]);\n    };\n};\n"],"names":[],"mappings":";;;;;;;;AAWO,IAAI,qBAAqB;IAC5B,IAAI,QAAQ;IACZ,OAAO,SAAU,MAAM,EAAE,SAAS;QAC9B,gNAAM,SAAS,CAAC;YACZ,MAAM,GAAG,CAAC;YACV,OAAO;gBACH,MAAM,MAAM;YAChB;QACJ,GAAG;YAAC,UAAU;SAAU;IAC5B;AACJ"}},
    {"offset": {"line": 1265, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1270, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/react-style-singleton/dist/es2015/component.js"],"sourcesContent":["import { styleHookSingleton } from './hook';\n/**\n * create a Component to add styles on demand\n * - styles are added when first instance is mounted\n * - styles are removed when the last instance is unmounted\n * - changing styles in runtime does nothing unless dynamic is set. But with multiple components that can lead to the undefined behavior\n */\nexport var styleSingleton = function () {\n    var useStyle = styleHookSingleton();\n    var Sheet = function (_a) {\n        var styles = _a.styles, dynamic = _a.dynamic;\n        useStyle(styles, dynamic);\n        return null;\n    };\n    return Sheet;\n};\n"],"names":[],"mappings":";;;;;;AAOO,IAAI,iBAAiB;IACxB,IAAI,WAAW;IACf,IAAI,QAAQ,SAAU,EAAE;QACpB,IAAI,SAAS,GAAG,MAAM,EAAE,UAAU,GAAG,OAAO;QAC5C,SAAS,QAAQ;QACjB,OAAO;IACX;IACA,OAAO;AACX"}},
    {"offset": {"line": 1285, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1290, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 1294, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1310, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/react-remove-scroll-bar/dist/es2015/utils.js"],"sourcesContent":["export var zeroGap = {\n    left: 0,\n    top: 0,\n    right: 0,\n    gap: 0,\n};\nvar parse = function (x) { return parseInt(x || '', 10) || 0; };\nvar getOffset = function (gapMode) {\n    var cs = window.getComputedStyle(document.body);\n    var left = cs[gapMode === 'padding' ? 'paddingLeft' : 'marginLeft'];\n    var top = cs[gapMode === 'padding' ? 'paddingTop' : 'marginTop'];\n    var right = cs[gapMode === 'padding' ? 'paddingRight' : 'marginRight'];\n    return [parse(left), parse(top), parse(right)];\n};\nexport var getGapWidth = function (gapMode) {\n    if (gapMode === void 0) { gapMode = 'margin'; }\n    if (typeof window === 'undefined') {\n        return zeroGap;\n    }\n    var offsets = getOffset(gapMode);\n    var documentWidth = document.documentElement.clientWidth;\n    var windowWidth = window.innerWidth;\n    return {\n        left: offsets[0],\n        top: offsets[1],\n        right: offsets[2],\n        gap: Math.max(0, windowWidth - documentWidth + offsets[2] - offsets[0]),\n    };\n};\n"],"names":[],"mappings":";;;;AAAO,IAAI,UAAU;IACjB,MAAM;IACN,KAAK;IACL,OAAO;IACP,KAAK;AACT;AACA,IAAI,QAAQ,SAAU,CAAC;IAAI,OAAO,SAAS,KAAK,IAAI,OAAO;AAAG;AAC9D,IAAI,YAAY,SAAU,OAAO;IAC7B,IAAI,KAAK,OAAO,gBAAgB,CAAC,SAAS,IAAI;IAC9C,IAAI,OAAO,EAAE,CAAC,YAAY,YAAY,gBAAgB,aAAa;IACnE,IAAI,MAAM,EAAE,CAAC,YAAY,YAAY,eAAe,YAAY;IAChE,IAAI,QAAQ,EAAE,CAAC,YAAY,YAAY,iBAAiB,cAAc;IACtE,OAAO;QAAC,MAAM;QAAO,MAAM;QAAM,MAAM;KAAO;AAClD;AACO,IAAI,cAAc,SAAU,OAAO;IACtC,IAAI,YAAY,KAAK,GAAG;QAAE,UAAU;IAAU;IAC9C,IAAI,OAAO,WAAW,aAAa;QAC/B,OAAO;IACX;IACA,IAAI,UAAU,UAAU;IACxB,IAAI,gBAAgB,SAAS,eAAe,CAAC,WAAW;IACxD,IAAI,cAAc,OAAO,UAAU;IACnC,OAAO;QACH,MAAM,OAAO,CAAC,EAAE;QAChB,KAAK,OAAO,CAAC,EAAE;QACf,OAAO,OAAO,CAAC,EAAE;QACjB,KAAK,KAAK,GAAG,CAAC,GAAG,cAAc,gBAAgB,OAAO,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE;IAC1E;AACJ"}},
    {"offset": {"line": 1351, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1356, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/react-remove-scroll-bar/dist/es2015/component.js"],"sourcesContent":["import * as React from 'react';\nimport { styleSingleton } from 'react-style-singleton';\nimport { fullWidthClassName, zeroRightClassName, noScrollbarsClassName, removedBarSizeVariable } from './constants';\nimport { getGapWidth } from './utils';\nvar Style = styleSingleton();\nexport var lockAttribute = 'data-scroll-locked';\n// important tip - once we measure scrollBar width and remove them\n// we could not repeat this operation\n// thus we are using style-singleton - only the first \"yet correct\" style will be applied.\nvar getStyles = function (_a, allowRelative, gapMode, important) {\n    var left = _a.left, top = _a.top, right = _a.right, gap = _a.gap;\n    if (gapMode === void 0) { gapMode = 'margin'; }\n    return \"\\n  .\".concat(noScrollbarsClassName, \" {\\n   overflow: hidden \").concat(important, \";\\n   padding-right: \").concat(gap, \"px \").concat(important, \";\\n  }\\n  body[\").concat(lockAttribute, \"] {\\n    overflow: hidden \").concat(important, \";\\n    overscroll-behavior: contain;\\n    \").concat([\n        allowRelative && \"position: relative \".concat(important, \";\"),\n        gapMode === 'margin' &&\n            \"\\n    padding-left: \".concat(left, \"px;\\n    padding-top: \").concat(top, \"px;\\n    padding-right: \").concat(right, \"px;\\n    margin-left:0;\\n    margin-top:0;\\n    margin-right: \").concat(gap, \"px \").concat(important, \";\\n    \"),\n        gapMode === 'padding' && \"padding-right: \".concat(gap, \"px \").concat(important, \";\"),\n    ]\n        .filter(Boolean)\n        .join(''), \"\\n  }\\n  \\n  .\").concat(zeroRightClassName, \" {\\n    right: \").concat(gap, \"px \").concat(important, \";\\n  }\\n  \\n  .\").concat(fullWidthClassName, \" {\\n    margin-right: \").concat(gap, \"px \").concat(important, \";\\n  }\\n  \\n  .\").concat(zeroRightClassName, \" .\").concat(zeroRightClassName, \" {\\n    right: 0 \").concat(important, \";\\n  }\\n  \\n  .\").concat(fullWidthClassName, \" .\").concat(fullWidthClassName, \" {\\n    margin-right: 0 \").concat(important, \";\\n  }\\n  \\n  body[\").concat(lockAttribute, \"] {\\n    \").concat(removedBarSizeVariable, \": \").concat(gap, \"px;\\n  }\\n\");\n};\nvar getCurrentUseCounter = function () {\n    var counter = parseInt(document.body.getAttribute(lockAttribute) || '0', 10);\n    return isFinite(counter) ? counter : 0;\n};\nexport var useLockAttribute = function () {\n    React.useEffect(function () {\n        document.body.setAttribute(lockAttribute, (getCurrentUseCounter() + 1).toString());\n        return function () {\n            var newCounter = getCurrentUseCounter() - 1;\n            if (newCounter <= 0) {\n                document.body.removeAttribute(lockAttribute);\n            }\n            else {\n                document.body.setAttribute(lockAttribute, newCounter.toString());\n            }\n        };\n    }, []);\n};\n/**\n * Removes page scrollbar and blocks page scroll when mounted\n */\nexport var RemoveScrollBar = function (_a) {\n    var noRelative = _a.noRelative, noImportant = _a.noImportant, _b = _a.gapMode, gapMode = _b === void 0 ? 'margin' : _b;\n    useLockAttribute();\n    /*\n     gap will be measured on every component mount\n     however it will be used only by the \"first\" invocation\n     due to singleton nature of <Style\n     */\n    var gap = React.useMemo(function () { return getGapWidth(gapMode); }, [gapMode]);\n    return React.createElement(Style, { styles: getStyles(gap, !noRelative, gapMode, !noImportant ? '!important' : '') });\n};\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAIA,IAAI,QAAQ;AACL,IAAI,gBAAgB;AAC3B,kEAAkE;AAClE,qCAAqC;AACrC,0FAA0F;AAC1F,IAAI,YAAY,SAAU,EAAE,EAAE,aAAa,EAAE,OAAO,EAAE,SAAS;IAC3D,IAAI,OAAO,GAAG,IAAI,EAAE,MAAM,GAAG,GAAG,EAAE,QAAQ,GAAG,KAAK,EAAE,MAAM,GAAG,GAAG;IAChE,IAAI,YAAY,KAAK,GAAG;QAAE,UAAU;IAAU;IAC9C,OAAO,QAAQ,MAAM,2MAAwB,4BAA4B,MAAM,CAAC,WAAW,yBAAyB,MAAM,CAAC,KAAK,OAAO,MAAM,CAAC,WAAW,mBAAmB,MAAM,CAAC,eAAe,8BAA8B,MAAM,CAAC,WAAW,8CAA8C,MAAM,CAAC;QACnS,iBAAiB,sBAAsB,MAAM,CAAC,WAAW;QACzD,YAAY,YACR,uBAAuB,MAAM,CAAC,MAAM,0BAA0B,MAAM,CAAC,KAAK,4BAA4B,MAAM,CAAC,OAAO,kEAAkE,MAAM,CAAC,KAAK,OAAO,MAAM,CAAC,WAAW;QAC/N,YAAY,aAAa,kBAAkB,MAAM,CAAC,KAAK,OAAO,MAAM,CAAC,WAAW;KACnF,CACI,MAAM,CAAC,SACP,IAAI,CAAC,KAAK,kBAAkB,MAAM,wMAAqB,mBAAmB,MAAM,CAAC,KAAK,OAAO,MAAM,CAAC,WAAW,mBAAmB,MAAM,wMAAqB,0BAA0B,MAAM,CAAC,KAAK,OAAO,MAAM,CAAC,WAAW,mBAAmB,MAAM,wMAAqB,MAAM,MAAM,wMAAqB,qBAAqB,MAAM,CAAC,WAAW,mBAAmB,MAAM,wMAAqB,MAAM,MAAM,wMAAqB,4BAA4B,MAAM,CAAC,WAAW,uBAAuB,MAAM,CAAC,eAAe,aAAa,MAAM,4MAAyB,MAAM,MAAM,CAAC,KAAK;AACnkB;AACA,IAAI,uBAAuB;IACvB,IAAI,UAAU,SAAS,SAAS,IAAI,CAAC,YAAY,CAAC,kBAAkB,KAAK;IACzE,OAAO,SAAS,WAAW,UAAU;AACzC;AACO,IAAI,mBAAmB;IAC1B,gNAAM,SAAS,CAAC;QACZ,SAAS,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,yBAAyB,CAAC,EAAE,QAAQ;QAC/E,OAAO;YACH,IAAI,aAAa,yBAAyB;YAC1C,IAAI,cAAc,GAAG;gBACjB,SAAS,IAAI,CAAC,eAAe,CAAC;YAClC,OACK;gBACD,SAAS,IAAI,CAAC,YAAY,CAAC,eAAe,WAAW,QAAQ;YACjE;QACJ;IACJ,GAAG,EAAE;AACT;AAIO,IAAI,kBAAkB,SAAU,EAAE;IACrC,IAAI,aAAa,GAAG,UAAU,EAAE,cAAc,GAAG,WAAW,EAAE,KAAK,GAAG,OAAO,EAAE,UAAU,OAAO,KAAK,IAAI,WAAW;IACpH;IACA;;;;KAIC,GACD,IAAI,MAAM,gNAAM,OAAO,CAAC;QAAc,OAAO,2LAAY;IAAU,GAAG;QAAC;KAAQ;IAC/E,OAAO,gNAAM,aAAa,CAAC,OAAO;QAAE,QAAQ,UAAU,KAAK,CAAC,YAAY,SAAS,CAAC,cAAc,eAAe;IAAI;AACvH"}},
    {"offset": {"line": 1420, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1425, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 1430, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1446, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/react-remove-scroll/dist/es2015/aggresiveCapture.js"],"sourcesContent":["var passiveSupported = false;\nif (typeof window !== 'undefined') {\n    try {\n        var options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passiveSupported = true;\n                return true;\n            },\n        });\n        // @ts-ignore\n        window.addEventListener('test', options, options);\n        // @ts-ignore\n        window.removeEventListener('test', options, options);\n    }\n    catch (err) {\n        passiveSupported = false;\n    }\n}\nexport var nonPassive = passiveSupported ? { passive: false } : false;\n"],"names":[],"mappings":";;;AAAA,IAAI,mBAAmB;AACvB,IAAI,OAAO,WAAW,aAAa;IAC/B,IAAI;QACA,IAAI,UAAU,OAAO,cAAc,CAAC,CAAC,GAAG,WAAW;YAC/C,KAAK;gBACD,mBAAmB;gBACnB,OAAO;YACX;QACJ;QACA,aAAa;QACb,OAAO,gBAAgB,CAAC,QAAQ,SAAS;QACzC,aAAa;QACb,OAAO,mBAAmB,CAAC,QAAQ,SAAS;IAChD,EACA,OAAO,KAAK;QACR,mBAAmB;IACvB;AACJ;AACO,IAAI,aAAa,mBAAmB;IAAE,SAAS;AAAM,IAAI"}},
    {"offset": {"line": 1469, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1474, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/react-remove-scroll/dist/es2015/handleScroll.js"],"sourcesContent":["var alwaysContainsScroll = function (node) {\n    // textarea will always _contain_ scroll inside self. It only can be hidden\n    return node.tagName === 'TEXTAREA';\n};\nvar elementCanBeScrolled = function (node, overflow) {\n    var styles = window.getComputedStyle(node);\n    return (\n    // not-not-scrollable\n    styles[overflow] !== 'hidden' &&\n        // contains scroll inside self\n        !(styles.overflowY === styles.overflowX && !alwaysContainsScroll(node) && styles[overflow] === 'visible'));\n};\nvar elementCouldBeVScrolled = function (node) { return elementCanBeScrolled(node, 'overflowY'); };\nvar elementCouldBeHScrolled = function (node) { return elementCanBeScrolled(node, 'overflowX'); };\nexport var locationCouldBeScrolled = function (axis, node) {\n    var ownerDocument = node.ownerDocument;\n    var current = node;\n    do {\n        // Skip over shadow root\n        if (typeof ShadowRoot !== 'undefined' && current instanceof ShadowRoot) {\n            current = current.host;\n        }\n        var isScrollable = elementCouldBeScrolled(axis, current);\n        if (isScrollable) {\n            var _a = getScrollVariables(axis, current), s = _a[1], d = _a[2];\n            if (s > d) {\n                return true;\n            }\n        }\n        current = current.parentNode;\n    } while (current && current !== ownerDocument.body);\n    return false;\n};\nvar getVScrollVariables = function (_a) {\n    var scrollTop = _a.scrollTop, scrollHeight = _a.scrollHeight, clientHeight = _a.clientHeight;\n    return [\n        scrollTop,\n        scrollHeight,\n        clientHeight,\n    ];\n};\nvar getHScrollVariables = function (_a) {\n    var scrollLeft = _a.scrollLeft, scrollWidth = _a.scrollWidth, clientWidth = _a.clientWidth;\n    return [\n        scrollLeft,\n        scrollWidth,\n        clientWidth,\n    ];\n};\nvar elementCouldBeScrolled = function (axis, node) {\n    return axis === 'v' ? elementCouldBeVScrolled(node) : elementCouldBeHScrolled(node);\n};\nvar getScrollVariables = function (axis, node) {\n    return axis === 'v' ? getVScrollVariables(node) : getHScrollVariables(node);\n};\nvar getDirectionFactor = function (axis, direction) {\n    /**\n     * If the element's direction is rtl (right-to-left), then scrollLeft is 0 when the scrollbar is at its rightmost position,\n     * and then increasingly negative as you scroll towards the end of the content.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollLeft\n     */\n    return axis === 'h' && direction === 'rtl' ? -1 : 1;\n};\nexport var handleScroll = function (axis, endTarget, event, sourceDelta, noOverscroll) {\n    var directionFactor = getDirectionFactor(axis, window.getComputedStyle(endTarget).direction);\n    var delta = directionFactor * sourceDelta;\n    // find scrollable target\n    var target = event.target;\n    var targetInLock = endTarget.contains(target);\n    var shouldCancelScroll = false;\n    var isDeltaPositive = delta > 0;\n    var availableScroll = 0;\n    var availableScrollTop = 0;\n    do {\n        var _a = getScrollVariables(axis, target), position = _a[0], scroll_1 = _a[1], capacity = _a[2];\n        var elementScroll = scroll_1 - capacity - directionFactor * position;\n        if (position || elementScroll) {\n            if (elementCouldBeScrolled(axis, target)) {\n                availableScroll += elementScroll;\n                availableScrollTop += position;\n            }\n        }\n        if (target instanceof ShadowRoot) {\n            target = target.host;\n        }\n        else {\n            target = target.parentNode;\n        }\n    } while (\n    // portaled content\n    (!targetInLock && target !== document.body) ||\n        // self content\n        (targetInLock && (endTarget.contains(target) || endTarget === target)));\n    // handle epsilon around 0 (non standard zoom levels)\n    if (isDeltaPositive &&\n        ((noOverscroll && Math.abs(availableScroll) < 1) || (!noOverscroll && delta > availableScroll))) {\n        shouldCancelScroll = true;\n    }\n    else if (!isDeltaPositive &&\n        ((noOverscroll && Math.abs(availableScrollTop) < 1) || (!noOverscroll && -delta > availableScrollTop))) {\n        shouldCancelScroll = true;\n    }\n    return shouldCancelScroll;\n};\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1576, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1581, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/react-remove-scroll/dist/es2015/SideEffect.js"],"sourcesContent":["import { __spreadArray } from \"tslib\";\nimport * as React from 'react';\nimport { RemoveScrollBar } from 'react-remove-scroll-bar';\nimport { styleSingleton } from 'react-style-singleton';\nimport { nonPassive } from './aggresiveCapture';\nimport { handleScroll, locationCouldBeScrolled } from './handleScroll';\nexport var getTouchXY = function (event) {\n    return 'changedTouches' in event ? [event.changedTouches[0].clientX, event.changedTouches[0].clientY] : [0, 0];\n};\nexport var getDeltaXY = function (event) { return [event.deltaX, event.deltaY]; };\nvar extractRef = function (ref) {\n    return ref && 'current' in ref ? ref.current : ref;\n};\nvar deltaCompare = function (x, y) { return x[0] === y[0] && x[1] === y[1]; };\nvar generateStyle = function (id) { return \"\\n  .block-interactivity-\".concat(id, \" {pointer-events: none;}\\n  .allow-interactivity-\").concat(id, \" {pointer-events: all;}\\n\"); };\nvar idCounter = 0;\nvar lockStack = [];\nexport function RemoveScrollSideCar(props) {\n    var shouldPreventQueue = React.useRef([]);\n    var touchStartRef = React.useRef([0, 0]);\n    var activeAxis = React.useRef();\n    var id = React.useState(idCounter++)[0];\n    var Style = React.useState(styleSingleton)[0];\n    var lastProps = React.useRef(props);\n    React.useEffect(function () {\n        lastProps.current = props;\n    }, [props]);\n    React.useEffect(function () {\n        if (props.inert) {\n            document.body.classList.add(\"block-interactivity-\".concat(id));\n            var allow_1 = __spreadArray([props.lockRef.current], (props.shards || []).map(extractRef), true).filter(Boolean);\n            allow_1.forEach(function (el) { return el.classList.add(\"allow-interactivity-\".concat(id)); });\n            return function () {\n                document.body.classList.remove(\"block-interactivity-\".concat(id));\n                allow_1.forEach(function (el) { return el.classList.remove(\"allow-interactivity-\".concat(id)); });\n            };\n        }\n        return;\n    }, [props.inert, props.lockRef.current, props.shards]);\n    var shouldCancelEvent = React.useCallback(function (event, parent) {\n        if ('touches' in event && event.touches.length === 2) {\n            return !lastProps.current.allowPinchZoom;\n        }\n        var touch = getTouchXY(event);\n        var touchStart = touchStartRef.current;\n        var deltaX = 'deltaX' in event ? event.deltaX : touchStart[0] - touch[0];\n        var deltaY = 'deltaY' in event ? event.deltaY : touchStart[1] - touch[1];\n        var currentAxis;\n        var target = event.target;\n        var moveDirection = Math.abs(deltaX) > Math.abs(deltaY) ? 'h' : 'v';\n        // allow horizontal touch move on Range inputs. They will not cause any scroll\n        if ('touches' in event && moveDirection === 'h' && target.type === 'range') {\n            return false;\n        }\n        var canBeScrolledInMainDirection = locationCouldBeScrolled(moveDirection, target);\n        if (!canBeScrolledInMainDirection) {\n            return true;\n        }\n        if (canBeScrolledInMainDirection) {\n            currentAxis = moveDirection;\n        }\n        else {\n            currentAxis = moveDirection === 'v' ? 'h' : 'v';\n            canBeScrolledInMainDirection = locationCouldBeScrolled(moveDirection, target);\n            // other axis might be not scrollable\n        }\n        if (!canBeScrolledInMainDirection) {\n            return false;\n        }\n        if (!activeAxis.current && 'changedTouches' in event && (deltaX || deltaY)) {\n            activeAxis.current = currentAxis;\n        }\n        if (!currentAxis) {\n            return true;\n        }\n        var cancelingAxis = activeAxis.current || currentAxis;\n        return handleScroll(cancelingAxis, parent, event, cancelingAxis === 'h' ? deltaX : deltaY, true);\n    }, []);\n    var shouldPrevent = React.useCallback(function (_event) {\n        var event = _event;\n        if (!lockStack.length || lockStack[lockStack.length - 1] !== Style) {\n            // not the last active\n            return;\n        }\n        var delta = 'deltaY' in event ? getDeltaXY(event) : getTouchXY(event);\n        var sourceEvent = shouldPreventQueue.current.filter(function (e) { return e.name === event.type && (e.target === event.target || event.target === e.shadowParent) && deltaCompare(e.delta, delta); })[0];\n        // self event, and should be canceled\n        if (sourceEvent && sourceEvent.should) {\n            if (event.cancelable) {\n                event.preventDefault();\n            }\n            return;\n        }\n        // outside or shard event\n        if (!sourceEvent) {\n            var shardNodes = (lastProps.current.shards || [])\n                .map(extractRef)\n                .filter(Boolean)\n                .filter(function (node) { return node.contains(event.target); });\n            var shouldStop = shardNodes.length > 0 ? shouldCancelEvent(event, shardNodes[0]) : !lastProps.current.noIsolation;\n            if (shouldStop) {\n                if (event.cancelable) {\n                    event.preventDefault();\n                }\n            }\n        }\n    }, []);\n    var shouldCancel = React.useCallback(function (name, delta, target, should) {\n        var event = { name: name, delta: delta, target: target, should: should, shadowParent: getOutermostShadowParent(target) };\n        shouldPreventQueue.current.push(event);\n        setTimeout(function () {\n            shouldPreventQueue.current = shouldPreventQueue.current.filter(function (e) { return e !== event; });\n        }, 1);\n    }, []);\n    var scrollTouchStart = React.useCallback(function (event) {\n        touchStartRef.current = getTouchXY(event);\n        activeAxis.current = undefined;\n    }, []);\n    var scrollWheel = React.useCallback(function (event) {\n        shouldCancel(event.type, getDeltaXY(event), event.target, shouldCancelEvent(event, props.lockRef.current));\n    }, []);\n    var scrollTouchMove = React.useCallback(function (event) {\n        shouldCancel(event.type, getTouchXY(event), event.target, shouldCancelEvent(event, props.lockRef.current));\n    }, []);\n    React.useEffect(function () {\n        lockStack.push(Style);\n        props.setCallbacks({\n            onScrollCapture: scrollWheel,\n            onWheelCapture: scrollWheel,\n            onTouchMoveCapture: scrollTouchMove,\n        });\n        document.addEventListener('wheel', shouldPrevent, nonPassive);\n        document.addEventListener('touchmove', shouldPrevent, nonPassive);\n        document.addEventListener('touchstart', scrollTouchStart, nonPassive);\n        return function () {\n            lockStack = lockStack.filter(function (inst) { return inst !== Style; });\n            document.removeEventListener('wheel', shouldPrevent, nonPassive);\n            document.removeEventListener('touchmove', shouldPrevent, nonPassive);\n            document.removeEventListener('touchstart', scrollTouchStart, nonPassive);\n        };\n    }, []);\n    var removeScrollBar = props.removeScrollBar, inert = props.inert;\n    return (React.createElement(React.Fragment, null,\n        inert ? React.createElement(Style, { styles: generateStyle(id) }) : null,\n        removeScrollBar ? React.createElement(RemoveScrollBar, { gapMode: props.gapMode }) : null));\n}\nfunction getOutermostShadowParent(node) {\n    var shadowParent = null;\n    while (node !== null) {\n        if (node instanceof ShadowRoot) {\n            shadowParent = node.host;\n            node = node.host;\n        }\n        node = node.parentNode;\n    }\n    return shadowParent;\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1794, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1799, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/react-remove-scroll/dist/es2015/sidecar.js"],"sourcesContent":["import { exportSidecar } from 'use-sidecar';\nimport { RemoveScrollSideCar } from './SideEffect';\nimport { effectCar } from './medium';\nexport default exportSidecar(effectCar, RemoveScrollSideCar);\n"],"names":[],"mappings":";;;;;;;;;;;uCAGe"}},
    {"offset": {"line": 1811, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1816, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/react-remove-scroll/dist/es2015/Combination.js"],"sourcesContent":["import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { RemoveScroll } from './UI';\nimport SideCar from './sidecar';\nvar ReactRemoveScroll = React.forwardRef(function (props, ref) { return (React.createElement(RemoveScroll, __assign({}, props, { ref: ref, sideCar: SideCar }))); });\nReactRemoveScroll.classNames = RemoveScroll.classNames;\nexport default ReactRemoveScroll;\n"],"names":[],"mappings":";;;;;;;;;;;;AAIA,IAAI,oBAAoB,gNAAM,UAAU,CAAC,SAAU,KAAK,EAAE,GAAG;IAAI,OAAQ,gNAAM,aAAa,oLAAe,mJAAS,CAAC,GAAG,OAAO;QAAE,KAAK;QAAK,OAAO;IAAU;AAAM;AAClK,kBAAkB,UAAU,GAAG,kLAAa,UAAU;uCACvC"}},
    {"offset": {"line": 1836, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1841, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 1844, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1857, "column": 0}, "map": {"version":3,"sources":["../../../../../../../src/server/future/route-modules/app-page/vendored/rsc/react-server-dom-turbopack-server-edge.ts","/turbopack/[project]/node_modules/next/dist/server/future/route-modules/app-page/vendored/rsc/react-server-dom-turbopack-server-edge.js"],"names":["module","exports","require","vendored","ReactServerDOMTurbopackServerEdge"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,yIAAiCC,QAAQ,CACxD,YACD,CAACC,iCAAiC"}},
    {"offset": {"line": 1859, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1864, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/utils/keys/keys.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const keys = registerClientReference(\n    function() { throw new Error(\"Attempted to call keys() from the server but keys is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/utils/keys/keys.mjs\",\n    \"keys\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,OAAO,2RAChB;IAAa,MAAM,IAAI,MAAM;AAAwN,GACrP,qEACA"}},
    {"offset": {"line": 1873, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1878, "column": 0}, "map": {"version":3,"sources":["../../../../src/core/utils/keys/keys.ts"],"sourcesContent":["export function keys<T extends object, K extends keyof T>(object: T): K[] {\n  return Object.keys(object) as K[];\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 1883, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1888, "column": 0}, "map": {"version":3,"sources":["../../../../src/core/utils/deep-merge/deep-merge.ts","/turbopack/[project]/node_modules/@mantine/core/esm/core/utils/deep-merge/deep-merge.mjs"],"sourcesContent":["function isObject(item: unknown) {\n  return item && typeof item === 'object' && !Array.isArray(item);\n}\n\nexport function deepMerge<T extends object>(target: T, source: any): T {\n  const result: Record<string, any> = { ...target };\n  const _source: Record<string, any> = source;\n\n  if (isObject(target) && isObject(source)) {\n    Object.keys(source).forEach((key) => {\n      if (isObject(_source[key])) {\n        if (!(key in target)) {\n          result[key] = _source[key];\n        } else {\n          result[key] = deepMerge(result[key], _source[key]);\n        }\n      } else {\n        result[key] = _source[key];\n      }\n    });\n  }\n\n  return result as T;\n}\n",null],"names":[],"mappings":";;;AACA,SAAS,SAAS,IAAI;IACpB,OAAO,QAAQ,OAAO,SAAS,YAAY,CAAC,MAAM,OAAO,CAAC;AAC5D;AACO,SAAS,UAAU,MAAM,EAAE,MAAM;IACtC,MAAM,SAAS;QAAE,GAAG,MAAM;IAAA;IAC1B,MAAM,UAAU;IAChB,IAAI,SAAS,WAAW,SAAS,SAAS;QACxC,OAAO,IAAI,CAAC,QAAQ,OAAO,CAAC,CAAC;YAC3B,IAAI,SAAS,OAAO,CAAC,IAAI,GAAG;gBAC1B,IAAI,CAAA,CAAE,OAAO,MAAM,GAAG;oBACpB,MAAM,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI;gBACpC,OAAe;oBACL,MAAM,CAAC,IAAI,GAAG,UAAU,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,IAAI;gBAC3D;YACA,OAAa;gBACL,MAAM,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI;YAClC;QACA;IACA;IACE,OAAO;AACT"}},
    {"offset": {"line": 1916, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1921, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/utils/camel-to-kebab-case/camel-to-kebab-case.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const camelToKebabCase = registerClientReference(\n    function() { throw new Error(\"Attempted to call camelToKebabCase() from the server but camelToKebabCase is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/utils/camel-to-kebab-case/camel-to-kebab-case.mjs\",\n    \"camelToKebabCase\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,mBAAmB,2RAC5B;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,mGACA"}},
    {"offset": {"line": 1930, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1935, "column": 0}, "map": {"version":3,"sources":["../../../../src/core/utils/camel-to-kebab-case/camel-to-kebab-case.ts"],"sourcesContent":["export function camelToKebabCase(value: string) {\n  return value.replace(/[A-Z]/g, (letter) => `-${letter.toLowerCase()}`);\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 1940, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1945, "column": 0}, "map": {"version":3,"sources":["../../../../src/core/utils/units-converters/px.ts","/turbopack/[project]/node_modules/@mantine/core/esm/core/utils/units-converters/px.mjs"],"sourcesContent":["function getTransformedScaledValue(value: unknown) {\n  if (typeof value !== 'string' || !value.includes('var(--mantine-scale)')) {\n    return value;\n  }\n\n  return value\n    .match(/^calc\\((.*?)\\)$/)?.[1]\n    .split('*')[0]\n    .trim();\n}\n\nexport function px(value: unknown) {\n  const transformedValue = getTransformedScaledValue(value);\n\n  if (typeof transformedValue === 'number') {\n    return transformedValue;\n  }\n\n  if (typeof transformedValue === 'string') {\n    if (transformedValue.includes('calc') || transformedValue.includes('var')) {\n      return transformedValue;\n    }\n\n    if (transformedValue.includes('px')) {\n      return Number(transformedValue.replace('px', ''));\n    }\n\n    if (transformedValue.includes('rem')) {\n      return Number(transformedValue.replace('rem', '')) * 16;\n    }\n\n    if (transformedValue.includes('em')) {\n      return Number(transformedValue.replace('em', '')) * 16;\n    }\n\n    return Number(transformedValue);\n  }\n\n  return NaN;\n}\n",null],"names":[],"mappings":";;;AACA,SAAS,0BAA0B,KAAK;IACtC,IAAI,OAAO,UAAU,YAAY,CAAC,MAAM,QAAQ,CAAC,yBAAyB;QACxE,OAAO;IACX;IACE,OAAO,MAAM,KAAK,CAAC,oBAAkB,CAAG,EAAE,CAAC,MAAM,IAAI,CAAC,EAAE,CAAC;AAC3D;AACO,SAAS,GAAG,KAAK;IACtB,MAAM,mBAAmB,0BAA0B;IACnD,IAAI,OAAO,qBAAqB,UAAU;QACxC,OAAO;IACX;IACE,IAAI,OAAO,qBAAqB,UAAU;QACxC,IAAI,iBAAiB,QAAQ,CAAC,WAAW,iBAAiB,QAAQ,CAAC,QAAQ;YACzE,OAAO;QACb;QACI,IAAI,iBAAiB,QAAQ,CAAC,OAAO;YACnC,OAAO,OAAO,iBAAiB,OAAO,CAAC,MAAM;QACnD;QACI,IAAI,iBAAiB,QAAQ,CAAC,QAAQ;YACpC,OAAO,OAAO,iBAAiB,OAAO,CAAC,OAAO,OAAO;QAC3D;QACI,IAAI,iBAAiB,QAAQ,CAAC,OAAO;YACnC,OAAO,OAAO,iBAAiB,OAAO,CAAC,MAAM,OAAO;QAC1D;QACI,OAAO,OAAO;IAClB;IACE,OAAO;AACT"}},
    {"offset": {"line": 1978, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1983, "column": 0}, "map": {"version":3,"sources":["../../../../src/core/utils/units-converters/rem.ts","/turbopack/[project]/node_modules/@mantine/core/esm/core/utils/units-converters/rem.mjs"],"sourcesContent":["function scaleRem(remValue: string) {\n  if (remValue === '0rem') {\n    return '0rem';\n  }\n\n  return `calc(${remValue} * var(--mantine-scale))`;\n}\n\nfunction createConverter(units: string, { shouldScale = false } = {}) {\n  function converter(value: unknown): string {\n    if (value === 0 || value === '0') {\n      return `0${units}`;\n    }\n\n    if (typeof value === 'number') {\n      const val = `${value / 16}${units}`;\n      return shouldScale ? scaleRem(val) : val;\n    }\n\n    if (typeof value === 'string') {\n      if (value.startsWith('calc(') || value.startsWith('clamp(') || value.includes('rgba(')) {\n        return value;\n      }\n\n      if (value.includes(',')) {\n        return value\n          .split(',')\n          .map((val) => converter(val))\n          .join(',');\n      }\n\n      if (value.includes(' ')) {\n        return value\n          .split(' ')\n          .map((val) => converter(val))\n          .join(' ');\n      }\n\n      if (value.includes(units)) {\n        return shouldScale ? scaleRem(value) : value;\n      }\n\n      const replaced = value.replace('px', '');\n      if (!Number.isNaN(Number(replaced))) {\n        const val = `${Number(replaced) / 16}${units}`;\n        return shouldScale ? scaleRem(val) : val;\n      }\n    }\n\n    return value as string;\n  }\n\n  return converter;\n}\n\nexport const rem = createConverter('rem', { shouldScale: true });\nexport const em = createConverter('em');\n",null],"names":[],"mappings":";;;;AACA,SAAS,SAAS,QAAQ;IACxB,IAAI,aAAa,QAAQ;QACvB,OAAO;IACX;IACE,OAAO,CAAC,KAAK,EAAE,SAAS,wBAAwB,CAAC;AACnD;AACA,SAAS,gBAAgB,KAAK,EAAE,EAAE,cAAc,KAAK,EAAE,GAAG,CAAA,CAAE;IAC1D,SAAS,UAAU,KAAK;QACtB,IAAI,UAAU,KAAK,UAAU,KAAK;YAChC,OAAO,CAAC,CAAC,EAAE,MAAM,CAAC;QACxB;QACI,IAAI,OAAO,UAAU,UAAU;YAC7B,MAAM,MAAM,CAAC,EAAE,QAAQ,GAAG,EAAE,MAAM,CAAC;YACnC,OAAO,cAAc,SAAS,OAAO;QAC3C;QACI,IAAI,OAAO,UAAU,UAAU;YAC7B,IAAI,MAAM,UAAU,CAAC,YAAY,MAAM,UAAU,CAAC,aAAa,MAAM,QAAQ,CAAC,UAAU;gBACtF,OAAO;YACf;YACM,IAAI,MAAM,QAAQ,CAAC,MAAM;gBACvB,OAAO,MAAM,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,MAAQ,UAAU,MAAM,IAAI,CAAC;YAClE;YACM,IAAI,MAAM,QAAQ,CAAC,MAAM;gBACvB,OAAO,MAAM,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,MAAQ,UAAU,MAAM,IAAI,CAAC;YAClE;YACM,IAAI,MAAM,QAAQ,CAAC,QAAQ;gBACzB,OAAO,cAAc,SAAS,SAAS;YAC/C;YACM,MAAM,WAAW,MAAM,OAAO,CAAC,MAAM;YACrC,IAAI,CAAC,OAAO,KAAK,CAAC,OAAO,YAAY;gBACnC,MAAM,MAAM,CAAC,EAAE,OAAO,YAAY,GAAG,EAAE,MAAM,CAAC;gBAC9C,OAAO,cAAc,SAAS,OAAO;YAC7C;QACA;QACI,OAAO;IACX;IACE,OAAO;AACT;AACY,MAAC,MAAM,gBAAgB,OAAO;IAAE,aAAa;AAAI;AACjD,MAAC,KAAK,gBAAgB"}},
    {"offset": {"line": 2031, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2036, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/utils/filter-props/filter-props.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const filterProps = registerClientReference(\n    function() { throw new Error(\"Attempted to call filterProps() from the server but filterProps is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/utils/filter-props/filter-props.mjs\",\n    \"filterProps\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,cAAc,2RACvB;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,qFACA"}},
    {"offset": {"line": 2045, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2050, "column": 0}, "map": {"version":3,"sources":["../../../../src/core/utils/filter-props/filter-props.ts"],"sourcesContent":["type FilterPropsRes<T extends Record<string, any>> = {\n  [Key in keyof T]-?: T[Key] extends undefined ? never : T[Key];\n};\n\nexport function filterProps<T extends Record<string, any>>(props: T) {\n  return Object.keys(props).reduce<FilterPropsRes<T>>((acc, key: keyof T) => {\n    if (props[key] !== undefined) {\n      acc[key] = props[key];\n    }\n    return acc;\n  }, {} as FilterPropsRes<T>);\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 2055, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2060, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/utils/is-number-like/is-number-like.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const isNumberLike = registerClientReference(\n    function() { throw new Error(\"Attempted to call isNumberLike() from the server but isNumberLike is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/utils/is-number-like/is-number-like.mjs\",\n    \"isNumberLike\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,eAAe,2RACxB;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,yFACA"}},
    {"offset": {"line": 2069, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2074, "column": 0}, "map": {"version":3,"sources":["../../../../src/core/utils/is-number-like/is-number-like.ts"],"sourcesContent":["export function isNumberLike(value: unknown) {\n  if (typeof value === 'number') {\n    return true;\n  }\n\n  if (typeof value === 'string') {\n    if (\n      value.startsWith('calc(') ||\n      value.startsWith('var(') ||\n      (value.includes(' ') && value.trim() !== '')\n    ) {\n      return true;\n    }\n\n    return /[0-9]/.test(value.trim().replace('-', '')[0]);\n  }\n\n  return false;\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 2079, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2084, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/utils/is-element/is-element.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const isElement = registerClientReference(\n    function() { throw new Error(\"Attempted to call isElement() from the server but isElement is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/utils/is-element/is-element.mjs\",\n    \"isElement\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,YAAY,2RACrB;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,iFACA"}},
    {"offset": {"line": 2093, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2098, "column": 0}, "map": {"version":3,"sources":["../../../../src/core/utils/is-element/is-element.ts"],"sourcesContent":["import React from 'react';\n\nexport function isElement(value: any): value is React.ReactElement {\n  if (Array.isArray(value) || value === null) {\n    return false;\n  }\n\n  if (typeof value === 'object') {\n    if (value.type === React.Fragment) {\n      return false;\n    }\n\n    return true;\n  }\n\n  return false;\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 2103, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2108, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/utils/create-safe-context/create-safe-context.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const createSafeContext = registerClientReference(\n    function() { throw new Error(\"Attempted to call createSafeContext() from the server but createSafeContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/utils/create-safe-context/create-safe-context.mjs\",\n    \"createSafeContext\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,oBAAoB,2RAC7B;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,mGACA"}},
    {"offset": {"line": 2117, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2122, "column": 0}, "map": {"version":3,"sources":["../../../../src/core/utils/create-safe-context/create-safe-context.tsx"],"sourcesContent":["import React, { createContext, useContext } from 'react';\n\nexport function createSafeContext<ContextValue>(errorMessage: string) {\n  const Context = createContext<ContextValue | null>(null);\n\n  const useSafeContext = () => {\n    const ctx = useContext(Context);\n\n    if (ctx === null) {\n      throw new Error(errorMessage);\n    }\n\n    return ctx;\n  };\n\n  const Provider = ({ children, value }: { value: ContextValue; children: React.ReactNode }) => (\n    <Context.Provider value={value}>{children}</Context.Provider>\n  );\n\n  return [Provider, useSafeContext] as const;\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 2127, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2132, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/utils/create-optional-context/create-optional-context.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const createOptionalContext = registerClientReference(\n    function() { throw new Error(\"Attempted to call createOptionalContext() from the server but createOptionalContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/utils/create-optional-context/create-optional-context.mjs\",\n    \"createOptionalContext\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,wBAAwB,2RACjC;IAAa,MAAM,IAAI,MAAM;AAA0P,GACvR,2GACA"}},
    {"offset": {"line": 2141, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2146, "column": 0}, "map": {"version":3,"sources":["../../../../src/core/utils/create-optional-context/create-optional-context.tsx"],"sourcesContent":["import React, { createContext, useContext } from 'react';\n\nexport function createOptionalContext<ContextValue>(initialValue: ContextValue | null = null) {\n  const Context = createContext<ContextValue | null>(initialValue);\n\n  const useOptionalContext = () => useContext(Context);\n\n  const Provider = ({ children, value }: { value: ContextValue; children: React.ReactNode }) => (\n    <Context.Provider value={value}>{children}</Context.Provider>\n  );\n\n  return [Provider, useOptionalContext] as const;\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 2151, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2156, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/utils/get-safe-id/get-safe-id.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const getSafeId = registerClientReference(\n    function() { throw new Error(\"Attempted to call getSafeId() from the server but getSafeId is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/utils/get-safe-id/get-safe-id.mjs\",\n    \"getSafeId\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,YAAY,2RACrB;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,mFACA"}},
    {"offset": {"line": 2165, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2170, "column": 0}, "map": {"version":3,"sources":["../../../../src/core/utils/get-safe-id/get-safe-id.ts"],"sourcesContent":["export function getSafeId(uid: string, errorMessage: string) {\n  return (value: string) => {\n    if (typeof value !== 'string' || value.trim().length === 0) {\n      throw new Error(errorMessage);\n    }\n\n    return `${uid}-${value}`;\n  };\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 2175, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2180, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/utils/create-scoped-keydown-handler/create-scoped-keydown-handler.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const createScopedKeydownHandler = registerClientReference(\n    function() { throw new Error(\"Attempted to call createScopedKeydownHandler() from the server but createScopedKeydownHandler is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/utils/create-scoped-keydown-handler/create-scoped-keydown-handler.mjs\",\n    \"createScopedKeydownHandler\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,6BAA6B,2RACtC;IAAa,MAAM,IAAI,MAAM;AAAoQ,GACjS,uHACA"}},
    {"offset": {"line": 2189, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2194, "column": 0}, "map": {"version":3,"sources":["../../../../src/core/utils/create-scoped-keydown-handler/create-scoped-keydown-handler.ts"],"sourcesContent":["import { findElementAncestor } from '../find-element-ancestor/find-element-ancestor';\n\nfunction getPreviousIndex(current: number, elements: HTMLButtonElement[], loop: boolean) {\n  for (let i = current - 1; i >= 0; i -= 1) {\n    if (!elements[i].disabled) {\n      return i;\n    }\n  }\n\n  if (loop) {\n    for (let i = elements.length - 1; i > -1; i -= 1) {\n      if (!elements[i].disabled) {\n        return i;\n      }\n    }\n  }\n\n  return current;\n}\n\nfunction getNextIndex(current: number, elements: HTMLButtonElement[], loop: boolean) {\n  for (let i = current + 1; i < elements.length; i += 1) {\n    if (!elements[i].disabled) {\n      return i;\n    }\n  }\n\n  if (loop) {\n    for (let i = 0; i < elements.length; i += 1) {\n      if (!elements[i].disabled) {\n        return i;\n      }\n    }\n  }\n\n  return current;\n}\n\n/** Validates that target element is on the same level as sibling, used to filter out children that have the same sibling selector */\nfunction onSameLevel(\n  target: HTMLButtonElement,\n  sibling: HTMLButtonElement,\n  parentSelector: string\n) {\n  return (\n    findElementAncestor(target, parentSelector) === findElementAncestor(sibling, parentSelector)\n  );\n}\n\ninterface GetElementsSiblingsInput {\n  /** Selector used to find parent node, e.g. '[role=\"tablist\"]', '.mantine-Text-root' */\n  parentSelector: string;\n\n  /** Selector used to find element siblings, e.g. '[data-tab]' */\n  siblingSelector: string;\n\n  /** Determines whether next/previous indices should loop */\n  loop?: boolean;\n\n  /** Determines which arrow keys will be used */\n  orientation: 'vertical' | 'horizontal';\n\n  /** Text direction */\n  dir?: 'rtl' | 'ltr';\n\n  /** Determines whether element should be clicked when focused with keyboard event */\n  activateOnFocus?: boolean;\n\n  /** External keydown event */\n  onKeyDown?: (event: React.KeyboardEvent<HTMLButtonElement>) => void;\n}\n\nexport function createScopedKeydownHandler({\n  parentSelector,\n  siblingSelector,\n  onKeyDown,\n  loop = true,\n  activateOnFocus = false,\n  dir = 'rtl',\n  orientation,\n}: GetElementsSiblingsInput) {\n  return (event: React.KeyboardEvent<HTMLButtonElement>) => {\n    onKeyDown?.(event);\n\n    const elements = Array.from(\n      findElementAncestor(event.currentTarget, parentSelector)?.querySelectorAll<HTMLButtonElement>(\n        siblingSelector\n      ) || []\n    ).filter((node) => onSameLevel(event.currentTarget, node, parentSelector));\n\n    const current = elements.findIndex((el) => event.currentTarget === el);\n    const _nextIndex = getNextIndex(current, elements, loop);\n    const _previousIndex = getPreviousIndex(current, elements, loop);\n    const nextIndex = dir === 'rtl' ? _previousIndex : _nextIndex;\n    const previousIndex = dir === 'rtl' ? _nextIndex : _previousIndex;\n\n    switch (event.key) {\n      case 'ArrowRight': {\n        if (orientation === 'horizontal') {\n          event.stopPropagation();\n          event.preventDefault();\n          elements[nextIndex].focus();\n          activateOnFocus && elements[nextIndex].click();\n        }\n\n        break;\n      }\n\n      case 'ArrowLeft': {\n        if (orientation === 'horizontal') {\n          event.stopPropagation();\n          event.preventDefault();\n          elements[previousIndex].focus();\n          activateOnFocus && elements[previousIndex].click();\n        }\n\n        break;\n      }\n\n      case 'ArrowUp': {\n        if (orientation === 'vertical') {\n          event.stopPropagation();\n          event.preventDefault();\n          elements[_previousIndex].focus();\n          activateOnFocus && elements[_previousIndex].click();\n        }\n\n        break;\n      }\n\n      case 'ArrowDown': {\n        if (orientation === 'vertical') {\n          event.stopPropagation();\n          event.preventDefault();\n          elements[_nextIndex].focus();\n          activateOnFocus && elements[_nextIndex].click();\n        }\n\n        break;\n      }\n\n      case 'Home': {\n        event.stopPropagation();\n        event.preventDefault();\n        !elements[0].disabled && elements[0].focus();\n        break;\n      }\n\n      case 'End': {\n        event.stopPropagation();\n        event.preventDefault();\n        const last = elements.length - 1;\n        !elements[last].disabled && elements[last].focus();\n        break;\n      }\n    }\n  };\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 2199, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2204, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/utils/find-element-ancestor/find-element-ancestor.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const findElementAncestor = registerClientReference(\n    function() { throw new Error(\"Attempted to call findElementAncestor() from the server but findElementAncestor is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/utils/find-element-ancestor/find-element-ancestor.mjs\",\n    \"findElementAncestor\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,sBAAsB,2RAC/B;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,uGACA"}},
    {"offset": {"line": 2213, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2218, "column": 0}, "map": {"version":3,"sources":["../../../../src/core/utils/find-element-ancestor/find-element-ancestor.ts"],"sourcesContent":["export function findElementAncestor(element: HTMLElement, selector: string) {\n  let _element: HTMLElement | null = element;\n  while ((_element = _element.parentElement) && !_element.matches(selector));\n  return _element;\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 2223, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2228, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/utils/get-default-z-index/get-default-z-index.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const getDefaultZIndex = registerClientReference(\n    function() { throw new Error(\"Attempted to call getDefaultZIndex() from the server but getDefaultZIndex is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/utils/get-default-z-index/get-default-z-index.mjs\",\n    \"getDefaultZIndex\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,mBAAmB,2RAC5B;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,mGACA"}},
    {"offset": {"line": 2237, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2242, "column": 0}, "map": {"version":3,"sources":["../../../../src/core/utils/get-default-z-index/get-default-z-index.ts"],"sourcesContent":["const elevations = {\n  app: 100,\n  modal: 200,\n  popover: 300,\n  overlay: 400,\n  max: 9999,\n} as const;\n\nexport function getDefaultZIndex(level: keyof typeof elevations) {\n  return elevations[level];\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 2247, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2252, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/utils/close-on-escape/close-on-escape.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const closeOnEscape = registerClientReference(\n    function() { throw new Error(\"Attempted to call closeOnEscape() from the server but closeOnEscape is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/utils/close-on-escape/close-on-escape.mjs\",\n    \"closeOnEscape\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,gBAAgB,2RACzB;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,2FACA"}},
    {"offset": {"line": 2261, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2266, "column": 0}, "map": {"version":3,"sources":["../../../../src/core/utils/close-on-escape/close-on-escape.ts"],"sourcesContent":["import React from 'react';\nimport { noop } from '../noop/noop';\n\ninterface Options {\n  active: boolean | undefined;\n  onTrigger?: () => void;\n  onKeyDown?: (event: React.KeyboardEvent<any>) => void;\n}\n\nexport function closeOnEscape(\n  callback?: (event: any) => void,\n  options: Options = { active: true }\n) {\n  if (typeof callback !== 'function' || !options.active) {\n    return options.onKeyDown || noop;\n  }\n\n  return (event: React.KeyboardEvent<any>) => {\n    if (event.key === 'Escape') {\n      callback(event);\n      options.onTrigger?.();\n    }\n  };\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 2271, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2276, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/utils/noop/noop.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const noop = registerClientReference(\n    function() { throw new Error(\"Attempted to call noop() from the server but noop is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/utils/noop/noop.mjs\",\n    \"noop\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,OAAO,2RAChB;IAAa,MAAM,IAAI,MAAM;AAAwN,GACrP,qEACA"}},
    {"offset": {"line": 2285, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2290, "column": 0}, "map": {"version":3,"sources":["../../../../src/core/utils/noop/noop.ts"],"sourcesContent":["export const noop = () => {};\n"],"names":[],"mappings":""}},
    {"offset": {"line": 2295, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2300, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/utils/get-size/get-size.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const getFontSize = registerClientReference(\n    function() { throw new Error(\"Attempted to call getFontSize() from the server but getFontSize is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/utils/get-size/get-size.mjs\",\n    \"getFontSize\",\n);\nexport const getLineHeight = registerClientReference(\n    function() { throw new Error(\"Attempted to call getLineHeight() from the server but getLineHeight is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/utils/get-size/get-size.mjs\",\n    \"getLineHeight\",\n);\nexport const getRadius = registerClientReference(\n    function() { throw new Error(\"Attempted to call getRadius() from the server but getRadius is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/utils/get-size/get-size.mjs\",\n    \"getRadius\",\n);\nexport const getShadow = registerClientReference(\n    function() { throw new Error(\"Attempted to call getShadow() from the server but getShadow is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/utils/get-size/get-size.mjs\",\n    \"getShadow\",\n);\nexport const getSize = registerClientReference(\n    function() { throw new Error(\"Attempted to call getSize() from the server but getSize is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/utils/get-size/get-size.mjs\",\n    \"getSize\",\n);\nexport const getSpacing = registerClientReference(\n    function() { throw new Error(\"Attempted to call getSpacing() from the server but getSpacing is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/utils/get-size/get-size.mjs\",\n    \"getSpacing\",\n);\n"],"names":[],"mappings":";;;;;;;;;;;AACO,MAAM,cAAc,2RACvB;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,6EACA;AAEG,MAAM,gBAAgB,2RACzB;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,6EACA;AAEG,MAAM,YAAY,2RACrB;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,6EACA;AAEG,MAAM,YAAY,2RACrB;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,6EACA;AAEG,MAAM,UAAU,2RACnB;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,6EACA;AAEG,MAAM,aAAa,2RACtB;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,6EACA"}},
    {"offset": {"line": 2329, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2334, "column": 0}, "map": {"version":3,"sources":["../../../../src/core/utils/get-size/get-size.ts"],"sourcesContent":["import { isNumberLike } from '../is-number-like/is-number-like';\nimport { rem } from '../units-converters';\n\nexport function getSize(size: unknown, prefix = 'size', convertToRem = true): string | undefined {\n  if (size === undefined) {\n    return undefined;\n  }\n\n  return isNumberLike(size)\n    ? convertToRem\n      ? rem(size)\n      : (size as string)\n    : `var(--${prefix}-${size})`;\n}\n\nexport function getSpacing(size: unknown) {\n  return getSize(size, 'mantine-spacing');\n}\n\nexport function getRadius(size: unknown) {\n  if (size === undefined) {\n    return 'var(--mantine-radius-default)';\n  }\n\n  return getSize(size, 'mantine-radius');\n}\n\nexport function getFontSize(size: unknown) {\n  return getSize(size, 'mantine-font-size');\n}\n\nexport function getLineHeight(size: unknown) {\n  return getSize(size, 'mantine-line-height', false);\n}\n\nexport function getShadow(size: unknown) {\n  if (!size) {\n    return undefined;\n  }\n\n  return getSize(size, 'mantine-shadow', false);\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 2339, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2344, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/utils/create-event-handler/create-event-handler.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const createEventHandler = registerClientReference(\n    function() { throw new Error(\"Attempted to call createEventHandler() from the server but createEventHandler is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/utils/create-event-handler/create-event-handler.mjs\",\n    \"createEventHandler\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,qBAAqB,2RAC9B;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,qGACA"}},
    {"offset": {"line": 2353, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2358, "column": 0}, "map": {"version":3,"sources":["../../../../src/core/utils/create-event-handler/create-event-handler.ts"],"sourcesContent":["type EventHandler<Event> = ((event?: Event) => void) | undefined;\n\nexport function createEventHandler<Event>(\n  parentEventHandler: EventHandler<Event>,\n  eventHandler: EventHandler<Event>\n) {\n  return (event?: Event) => {\n    parentEventHandler?.(event);\n    eventHandler?.(event);\n  };\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 2363, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2368, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/utils/get-breakpoint-value/get-breakpoint-value.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const getBreakpointValue = registerClientReference(\n    function() { throw new Error(\"Attempted to call getBreakpointValue() from the server but getBreakpointValue is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/utils/get-breakpoint-value/get-breakpoint-value.mjs\",\n    \"getBreakpointValue\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,qBAAqB,2RAC9B;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,qGACA"}},
    {"offset": {"line": 2377, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2382, "column": 0}, "map": {"version":3,"sources":["../../../../src/core/utils/get-breakpoint-value/get-breakpoint-value.ts"],"sourcesContent":["import type { MantineBreakpoint, MantineTheme } from '../../MantineProvider';\nimport { px } from '../units-converters';\n\nexport function getBreakpointValue(breakpoint: number | string, theme: MantineTheme) {\n  if (breakpoint in theme.breakpoints) {\n    return px(theme.breakpoints[breakpoint as MantineBreakpoint]) as number;\n  }\n\n  return px(breakpoint) as number;\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 2387, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2392, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/utils/get-sorted-breakpoints/get-sorted-breakpoints.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const getSortedBreakpoints = registerClientReference(\n    function() { throw new Error(\"Attempted to call getSortedBreakpoints() from the server but getSortedBreakpoints is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/utils/get-sorted-breakpoints/get-sorted-breakpoints.mjs\",\n    \"getSortedBreakpoints\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,uBAAuB,2RAChC;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,yGACA"}},
    {"offset": {"line": 2401, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2406, "column": 0}, "map": {"version":3,"sources":["../../../../src/core/utils/get-sorted-breakpoints/get-sorted-breakpoints.ts"],"sourcesContent":["import type { MantineTheme } from '../../MantineProvider';\nimport { getBreakpointValue } from '../get-breakpoint-value/get-breakpoint-value';\n\nexport function getSortedBreakpoints(breakpoints: string[], theme: MantineTheme) {\n  const convertedBreakpoints = breakpoints.map((breakpoint) => ({\n    value: breakpoint,\n    px: getBreakpointValue(breakpoint, theme),\n  }));\n\n  convertedBreakpoints.sort((a, b) => a.px - b.px);\n  return convertedBreakpoints;\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 2411, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2416, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/utils/get-base-value/get-base-value.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const getBaseValue = registerClientReference(\n    function() { throw new Error(\"Attempted to call getBaseValue() from the server but getBaseValue is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/utils/get-base-value/get-base-value.mjs\",\n    \"getBaseValue\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,eAAe,2RACxB;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,yFACA"}},
    {"offset": {"line": 2425, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2430, "column": 0}, "map": {"version":3,"sources":["../../../../src/core/utils/get-base-value/get-base-value.ts"],"sourcesContent":["import type { StyleProp } from '../../Box';\n\nexport function getBaseValue<Value = any>(value: StyleProp<Value>) {\n  if (typeof value === 'object' && value !== null) {\n    if ('base' in value) {\n      return value.base;\n    }\n\n    return undefined;\n  }\n\n  return value;\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 2435, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2440, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/utils/get-context-item-index/get-context-item-index.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const getContextItemIndex = registerClientReference(\n    function() { throw new Error(\"Attempted to call getContextItemIndex() from the server but getContextItemIndex is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/utils/get-context-item-index/get-context-item-index.mjs\",\n    \"getContextItemIndex\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,sBAAsB,2RAC/B;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,yGACA"}},
    {"offset": {"line": 2449, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2454, "column": 0}, "map": {"version":3,"sources":["../../../../src/core/utils/get-context-item-index/get-context-item-index.ts"],"sourcesContent":["import { findElementAncestor } from '../find-element-ancestor/find-element-ancestor';\n\nexport function getContextItemIndex(\n  elementSelector: string,\n  parentSelector: string,\n  node: HTMLElement\n) {\n  if (!node) {\n    return null;\n  }\n\n  return Array.from(\n    findElementAncestor(node, parentSelector)?.querySelectorAll(elementSelector) || []\n  ).findIndex((element) => element === node);\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 2459, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2464, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/utils/use-hovered/use-hovered.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const useHovered = registerClientReference(\n    function() { throw new Error(\"Attempted to call useHovered() from the server but useHovered is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/utils/use-hovered/use-hovered.mjs\",\n    \"useHovered\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,aAAa,2RACtB;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,mFACA"}},
    {"offset": {"line": 2473, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2478, "column": 0}, "map": {"version":3,"sources":["../../../../src/core/utils/use-hovered/use-hovered.ts"],"sourcesContent":["import { useState } from 'react';\n\nexport function useHovered() {\n  const [hovered, setHovered] = useState<number | null>(-1);\n  const resetHovered = () => setHovered(-1);\n  return [hovered, { setHovered, resetHovered }] as const;\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 2483, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2488, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/utils/create-use-external-events/create-use-external-events.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const createUseExternalEvents = registerClientReference(\n    function() { throw new Error(\"Attempted to call createUseExternalEvents() from the server but createUseExternalEvents is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/utils/create-use-external-events/create-use-external-events.mjs\",\n    \"createUseExternalEvents\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,0BAA0B,2RACnC;IAAa,MAAM,IAAI,MAAM;AAA8P,GAC3R,iHACA"}},
    {"offset": {"line": 2497, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2502, "column": 0}, "map": {"version":3,"sources":["../../../../src/core/utils/create-use-external-events/create-use-external-events.ts"],"sourcesContent":["import { useIsomorphicEffect } from '@mantine/hooks';\n\nfunction dispatchEvent<T>(type: string, detail?: T) {\n  window.dispatchEvent(new CustomEvent(type, { detail }));\n}\n\nexport function createUseExternalEvents<Handlers extends Record<string, (detail: any) => void>>(\n  prefix: string\n) {\n  function _useExternalEvents(events: Handlers) {\n    const handlers = Object.keys(events).reduce<any>((acc, eventKey) => {\n      acc[`${prefix}:${eventKey}`] = (event: CustomEvent) => events[eventKey](event.detail);\n      return acc;\n    }, {});\n\n    useIsomorphicEffect(() => {\n      Object.keys(handlers).forEach((eventKey) => {\n        window.removeEventListener(eventKey, handlers[eventKey]);\n        window.addEventListener(eventKey, handlers[eventKey]);\n      });\n\n      return () =>\n        Object.keys(handlers).forEach((eventKey) => {\n          window.removeEventListener(eventKey, handlers[eventKey]);\n        });\n    }, [handlers]);\n  }\n\n  function createEvent<EventKey extends keyof Handlers>(event: EventKey) {\n    type Parameter = Parameters<Handlers[EventKey]>[0];\n\n    return (...payload: Parameter extends undefined ? [undefined?] : [Parameter]) =>\n      dispatchEvent(`${prefix}:${String(event)}`, payload[0]);\n  }\n\n  return [_useExternalEvents, createEvent] as const;\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 2507, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2512, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/utils/get-env/get-env.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const getEnv = registerClientReference(\n    function() { throw new Error(\"Attempted to call getEnv() from the server but getEnv is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/utils/get-env/get-env.mjs\",\n    \"getEnv\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,SAAS,2RAClB;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,2EACA"}},
    {"offset": {"line": 2521, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2526, "column": 0}, "map": {"version":3,"sources":["../../../../src/core/utils/get-env/get-env.ts"],"sourcesContent":["export function getEnv() {\n  if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV) {\n    return process.env.NODE_ENV;\n  }\n\n  return 'development';\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 2531, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2536, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/styles-api/create-vars-resolver/create-vars-resolver.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const createVarsResolver = registerClientReference(\n    function() { throw new Error(\"Attempted to call createVarsResolver() from the server but createVarsResolver is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/styles-api/create-vars-resolver/create-vars-resolver.mjs\",\n    \"createVarsResolver\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,qBAAqB,2RAC9B;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,0GACA"}},
    {"offset": {"line": 2545, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2550, "column": 0}, "map": {"version":3,"sources":["../../../../src/core/styles-api/create-vars-resolver/create-vars-resolver.ts"],"sourcesContent":["import { CssVariable } from '../../Box';\nimport { FactoryPayload } from '../../factory';\nimport { MantineTheme } from '../../MantineProvider';\n\nexport type TransformVars<V> = {\n  [Key in keyof V]: V[Key] extends CssVariable ? Record<V[Key], string | undefined> : never;\n};\n\nexport type PartialTransformVars<V> = {\n  [Key in keyof V]: V[Key] extends CssVariable\n    ? Partial<Record<V[Key], string | undefined>>\n    : never;\n};\n\nexport type VarsResolver<Payload extends FactoryPayload> = (\n  theme: MantineTheme,\n  props: Payload['props'],\n  ctx: Payload['ctx']\n) => TransformVars<Payload['vars']>;\n\nexport type PartialVarsResolver<Payload extends FactoryPayload> = (\n  theme: MantineTheme,\n  props: Payload['props'],\n  ctx: Payload['ctx']\n) => PartialTransformVars<Payload['vars']>;\n\nexport function createVarsResolver<Payload extends FactoryPayload>(\n  resolver: VarsResolver<Payload>\n) {\n  return resolver;\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 2555, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2560, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/styles-api/use-styles/get-class-name/resolve-class-names/resolve-class-names.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const resolveClassNames = registerClientReference(\n    function() { throw new Error(\"Attempted to call resolveClassNames() from the server but resolveClassNames is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/styles-api/use-styles/get-class-name/resolve-class-names/resolve-class-names.mjs\",\n    \"resolveClassNames\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,oBAAoB,2RAC7B;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,kIACA"}},
    {"offset": {"line": 2569, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2574, "column": 0}, "map": {"version":3,"sources":["../../../../../../src/core/styles-api/use-styles/get-class-name/resolve-class-names/resolve-class-names.ts"],"sourcesContent":["import cx from 'clsx';\nimport { MantineTheme } from '../../../../MantineProvider';\nimport type { _ClassNames } from '../get-class-name';\n\nexport interface ResolveClassNamesInput {\n  theme: MantineTheme;\n  classNames: _ClassNames;\n  props: Record<string, any>;\n  stylesCtx: Record<string, any> | undefined;\n}\n\nconst EMPTY_CLASS_NAMES: Partial<Record<string, string>> = {};\n\nfunction mergeClassNames(objects: Partial<Record<string, string>>[]) {\n  const merged: Partial<Record<string, string>> = {};\n\n  objects.forEach((obj) => {\n    Object.entries(obj).forEach(([key, value]) => {\n      if (merged[key]) {\n        merged[key] = cx(merged[key], value);\n      } else {\n        merged[key] = value;\n      }\n    });\n  });\n\n  return merged;\n}\n\nexport function resolveClassNames({ theme, classNames, props, stylesCtx }: ResolveClassNamesInput) {\n  const arrayClassNames = Array.isArray(classNames) ? classNames : [classNames];\n  const resolvedClassNames = arrayClassNames.map((item) =>\n    typeof item === 'function' ? item(theme, props, stylesCtx) : item || EMPTY_CLASS_NAMES\n  );\n\n  return mergeClassNames(resolvedClassNames);\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 2579, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2584, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/styles-api/use-styles/get-style/resolve-styles/resolve-styles.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const resolveStyles = registerClientReference(\n    function() { throw new Error(\"Attempted to call resolveStyles() from the server but resolveStyles is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/styles-api/use-styles/get-style/resolve-styles/resolve-styles.mjs\",\n    \"resolveStyles\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,gBAAgB,2RACzB;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,mHACA"}},
    {"offset": {"line": 2593, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2598, "column": 0}, "map": {"version":3,"sources":["../../../../../../src/core/styles-api/use-styles/get-style/resolve-styles/resolve-styles.ts"],"sourcesContent":["import type { MantineTheme } from '../../../../MantineProvider';\nimport type { _Styles } from '../get-style';\n\nexport interface ResolveStylesInput {\n  theme: MantineTheme;\n  styles: _Styles | _Styles[];\n  props: Record<string, any>;\n  stylesCtx: Record<string, any> | undefined;\n}\n\nexport function resolveStyles({ theme, styles, props, stylesCtx }: ResolveStylesInput) {\n  const arrayStyles = Array.isArray(styles) ? styles : [styles];\n\n  return arrayStyles.reduce<Record<string, any>>((acc, style) => {\n    if (typeof style === 'function') {\n      return { ...acc, ...style(theme, props, stylesCtx) };\n    }\n\n    return { ...acc, ...style };\n  }, {});\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 2603, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2608, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/styles-api/use-resolved-styles-api/use-resolved-styles-api.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const useResolvedStylesApi = registerClientReference(\n    function() { throw new Error(\"Attempted to call useResolvedStylesApi() from the server but useResolvedStylesApi is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/styles-api/use-resolved-styles-api/use-resolved-styles-api.mjs\",\n    \"useResolvedStylesApi\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,uBAAuB,2RAChC;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,gHACA"}},
    {"offset": {"line": 2617, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2622, "column": 0}, "map": {"version":3,"sources":["../../../../src/core/styles-api/use-resolved-styles-api/use-resolved-styles-api.ts"],"sourcesContent":["import { FactoryPayload } from '../../factory';\nimport { useMantineTheme } from '../../MantineProvider';\nimport { ClassNames, Styles } from '../styles-api.types';\nimport { resolveClassNames } from '../use-styles/get-class-name/resolve-class-names/resolve-class-names';\nimport { resolveStyles } from '../use-styles/get-style/resolve-styles/resolve-styles';\n\nexport interface UseResolvedStylesApiInput<Payload extends FactoryPayload> {\n  classNames: ClassNames<Payload> | undefined;\n  styles: Styles<Payload> | undefined;\n  props: Record<string, any>;\n  stylesCtx?: Record<string, any>;\n}\n\nexport function useResolvedStylesApi<Payload extends FactoryPayload>({\n  classNames,\n  styles,\n  props,\n  stylesCtx,\n}: UseResolvedStylesApiInput<Payload>) {\n  const theme = useMantineTheme();\n\n  return {\n    resolvedClassNames: resolveClassNames({\n      theme,\n      classNames,\n      props,\n      stylesCtx: stylesCtx || undefined,\n    }),\n\n    resolvedStyles: resolveStyles({\n      theme,\n      styles,\n      props,\n      stylesCtx: stylesCtx || undefined,\n    }),\n  };\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 2627, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2632, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/styles-api/use-styles/get-class-name/get-global-class-names/get-global-class-names.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const FOCUS_CLASS_NAMES = registerClientReference(\n    function() { throw new Error(\"Attempted to call FOCUS_CLASS_NAMES() from the server but FOCUS_CLASS_NAMES is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/styles-api/use-styles/get-class-name/get-global-class-names/get-global-class-names.mjs\",\n    \"FOCUS_CLASS_NAMES\",\n);\nexport const getGlobalClassNames = registerClientReference(\n    function() { throw new Error(\"Attempted to call getGlobalClassNames() from the server but getGlobalClassNames is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/styles-api/use-styles/get-class-name/get-global-class-names/get-global-class-names.mjs\",\n    \"getGlobalClassNames\",\n);\n"],"names":[],"mappings":";;;;;;;AACO,MAAM,oBAAoB,2RAC7B;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,wIACA;AAEG,MAAM,sBAAsB,2RAC/B;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,wIACA"}},
    {"offset": {"line": 2645, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2650, "column": 0}, "map": {"version":3,"sources":["../../../../../../src/core/styles-api/use-styles/get-class-name/get-global-class-names/get-global-class-names.ts"],"sourcesContent":["import cx from 'clsx';\nimport { MantineTheme } from '../../../../MantineProvider';\nimport { GetStylesApiOptions } from '../../../styles-api.types';\n\ninterface GetGlobalClassNamesOptions {\n  theme: MantineTheme;\n  unstyled: boolean | undefined;\n  options: GetStylesApiOptions | undefined;\n}\n\nexport const FOCUS_CLASS_NAMES = {\n  always: 'mantine-focus-always',\n  auto: 'mantine-focus-auto',\n  never: 'mantine-focus-never',\n} as const;\n\n/** Returns classes that are defined globally (focus and active styles) based on options */\nexport function getGlobalClassNames({ theme, options, unstyled }: GetGlobalClassNamesOptions) {\n  return cx(\n    options?.focusable && !unstyled && (theme.focusClassName || FOCUS_CLASS_NAMES[theme.focusRing]),\n    options?.active && !unstyled && theme.activeClassName\n  );\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 2655, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2660, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/styles-api/use-styles/use-styles.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const useStyles = registerClientReference(\n    function() { throw new Error(\"Attempted to call useStyles() from the server but useStyles is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/styles-api/use-styles/use-styles.mjs\",\n    \"useStyles\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,YAAY,2RACrB;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,sFACA"}},
    {"offset": {"line": 2669, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2674, "column": 0}, "map": {"version":3,"sources":["../../../../src/core/styles-api/use-styles/use-styles.ts"],"sourcesContent":["import { CSSProperties } from 'react';\nimport type { MantineStyleProp } from '../../Box';\nimport { FactoryPayload } from '../../factory';\nimport {\n  useMantineClassNamesPrefix,\n  useMantineIsHeadless,\n  useMantineTheme,\n  useMantineWithStaticClasses,\n} from '../../MantineProvider';\nimport { PartialVarsResolver, VarsResolver } from '../create-vars-resolver/create-vars-resolver';\nimport { ClassNames, ClassNamesArray, GetStylesApiOptions, Styles } from '../styles-api.types';\nimport { getClassName } from './get-class-name/get-class-name';\nimport { getStyle } from './get-style/get-style';\n\nexport interface UseStylesInput<Payload extends FactoryPayload> {\n  name: string | (string | undefined)[];\n  classes: Payload['stylesNames'] extends string ? Record<string, string> : never;\n  props: Payload['props'];\n  stylesCtx?: Payload['ctx'];\n  className?: string;\n  style?: MantineStyleProp;\n  rootSelector?: Payload['stylesNames'];\n  unstyled?: boolean;\n  classNames?: ClassNames<Payload> | ClassNamesArray<Payload>;\n  styles?: Styles<Payload>;\n  vars?: PartialVarsResolver<Payload>;\n  varsResolver?: VarsResolver<Payload>;\n}\n\nexport type GetStylesApi<Payload extends FactoryPayload> = (\n  selector: NonNullable<Payload['stylesNames']>,\n  options?: GetStylesApiOptions\n) => {\n  className: string;\n  style: CSSProperties;\n};\n\nexport function useStyles<Payload extends FactoryPayload>({\n  name,\n  classes,\n  props,\n  stylesCtx,\n  className,\n  style,\n  rootSelector = 'root' as NonNullable<Payload['stylesNames']>,\n  unstyled,\n  classNames,\n  styles,\n  vars,\n  varsResolver,\n}: UseStylesInput<Payload>): GetStylesApi<Payload> {\n  const theme = useMantineTheme();\n  const classNamesPrefix = useMantineClassNamesPrefix();\n  const withStaticClasses = useMantineWithStaticClasses();\n  const headless = useMantineIsHeadless();\n  const themeName = (Array.isArray(name) ? name : [name]).filter((n) => n) as string[];\n\n  return (selector, options) => ({\n    className: getClassName({\n      theme,\n      options,\n      themeName,\n      selector,\n      classNamesPrefix,\n      classNames,\n      classes,\n      unstyled,\n      className,\n      rootSelector,\n      props,\n      stylesCtx,\n      withStaticClasses,\n      headless,\n    }),\n\n    style: getStyle({\n      theme,\n      themeName,\n      selector,\n      options,\n      props,\n      stylesCtx,\n      rootSelector,\n      styles,\n      style,\n      vars,\n      varsResolver,\n      headless,\n    }),\n  });\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 2679, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2684, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/MantineProvider/color-scheme-managers/local-storage-manager.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const localStorageColorSchemeManager = registerClientReference(\n    function() { throw new Error(\"Attempted to call localStorageColorSchemeManager() from the server but localStorageColorSchemeManager is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/MantineProvider/color-scheme-managers/local-storage-manager.mjs\",\n    \"localStorageColorSchemeManager\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,iCAAiC,2RAC1C;IAAa,MAAM,IAAI,MAAM;AAA4Q,GACzS,iHACA"}},
    {"offset": {"line": 2693, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2698, "column": 0}, "map": {"version":3,"sources":["../../../../src/core/MantineProvider/color-scheme-managers/local-storage-manager.ts"],"sourcesContent":["import { isMantineColorScheme } from './is-mantine-color-scheme';\nimport type { MantineColorSchemeManager } from './types';\n\nexport interface LocalStorageColorSchemeManagerOptions {\n  /** Local storage key used to retrieve value with `localStorage.getItem(key)`, `mantine-color-scheme-value` by default */\n  key?: string;\n}\n\nexport function localStorageColorSchemeManager({\n  key = 'mantine-color-scheme-value',\n}: LocalStorageColorSchemeManagerOptions = {}): MantineColorSchemeManager {\n  let handleStorageEvent: (event: StorageEvent) => void;\n\n  return {\n    get: (defaultValue) => {\n      if (typeof window === 'undefined') {\n        return defaultValue;\n      }\n\n      try {\n        const storedColorScheme = window.localStorage.getItem(key);\n        return isMantineColorScheme(storedColorScheme) ? storedColorScheme : defaultValue;\n      } catch {\n        return defaultValue;\n      }\n    },\n\n    set: (value) => {\n      try {\n        window.localStorage.setItem(key, value);\n      } catch (error) {\n        // eslint-disable-next-line no-console\n        console.warn(\n          '[@mantine/core] Local storage color scheme manager was unable to save color scheme.',\n          error\n        );\n      }\n    },\n\n    subscribe: (onUpdate) => {\n      handleStorageEvent = (event) => {\n        if (event.storageArea === window.localStorage && event.key === key) {\n          isMantineColorScheme(event.newValue) && onUpdate(event.newValue);\n        }\n      };\n\n      window.addEventListener('storage', handleStorageEvent);\n    },\n\n    unsubscribe: () => {\n      window.removeEventListener('storage', handleStorageEvent);\n    },\n\n    clear: () => {\n      window.localStorage.removeItem(key);\n    },\n  };\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 2703, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2708, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/MantineProvider/color-scheme-managers/is-mantine-color-scheme.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const isMantineColorScheme = registerClientReference(\n    function() { throw new Error(\"Attempted to call isMantineColorScheme() from the server but isMantineColorScheme is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/MantineProvider/color-scheme-managers/is-mantine-color-scheme.mjs\",\n    \"isMantineColorScheme\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,uBAAuB,2RAChC;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,mHACA"}},
    {"offset": {"line": 2717, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2722, "column": 0}, "map": {"version":3,"sources":["../../../../src/core/MantineProvider/color-scheme-managers/is-mantine-color-scheme.ts"],"sourcesContent":["import type { MantineColorScheme } from '../theme.types';\n\nexport function isMantineColorScheme(value: unknown): value is MantineColorScheme {\n  return value === 'auto' || value === 'dark' || value === 'light';\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 2727, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2732, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/MantineProvider/color-functions/get-primary-shade/get-primary-shade.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const getPrimaryShade = registerClientReference(\n    function() { throw new Error(\"Attempted to call getPrimaryShade() from the server but getPrimaryShade is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/MantineProvider/color-functions/get-primary-shade/get-primary-shade.mjs\",\n    \"getPrimaryShade\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,kBAAkB,2RAC3B;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,yHACA"}},
    {"offset": {"line": 2741, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2746, "column": 0}, "map": {"version":3,"sources":["../../../../../src/core/MantineProvider/color-functions/get-primary-shade/get-primary-shade.ts"],"sourcesContent":["import type { MantineColorScheme, MantineTheme } from '../../theme.types';\n\nexport function getPrimaryShade(theme: MantineTheme, colorScheme: MantineColorScheme) {\n  if (typeof theme.primaryShade === 'number') {\n    return theme.primaryShade;\n  }\n\n  if (colorScheme === 'dark') {\n    return theme.primaryShade.dark;\n  }\n\n  return theme.primaryShade.light;\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 2751, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2756, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/MantineProvider/color-functions/parse-theme-color/parse-theme-color.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const parseThemeColor = registerClientReference(\n    function() { throw new Error(\"Attempted to call parseThemeColor() from the server but parseThemeColor is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/MantineProvider/color-functions/parse-theme-color/parse-theme-color.mjs\",\n    \"parseThemeColor\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,kBAAkB,2RAC3B;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,yHACA"}},
    {"offset": {"line": 2765, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2770, "column": 0}, "map": {"version":3,"sources":["../../../../../src/core/MantineProvider/color-functions/parse-theme-color/parse-theme-color.ts"],"sourcesContent":["import type { CssVariable } from '../../../Box';\nimport type { MantineColorScheme, MantineColorShade, MantineTheme } from '../../theme.types';\nimport { getPrimaryShade } from '../get-primary-shade/get-primary-shade';\nimport { isLightColor } from '../luminance/luminance';\n\ninterface ParseThemeColorOptions {\n  color: unknown;\n  theme: MantineTheme;\n  colorScheme?: MantineColorScheme;\n}\n\ninterface ParseThemeColorResult {\n  color: string;\n  value: string;\n  shade: MantineColorShade | undefined;\n  variable: CssVariable | undefined;\n  isThemeColor: boolean;\n  isLight: boolean;\n}\n\nexport function parseThemeColor({\n  color,\n  theme,\n  colorScheme,\n}: ParseThemeColorOptions): ParseThemeColorResult {\n  if (typeof color !== 'string') {\n    throw new Error(\n      `[@mantine/core] Failed to parse color. Expected color to be a string, instead got ${typeof color}`\n    );\n  }\n\n  if (color === 'bright') {\n    return {\n      color,\n      value: colorScheme === 'dark' ? theme.white : theme.black,\n      shade: undefined,\n      isThemeColor: false,\n      isLight: isLightColor(\n        colorScheme === 'dark' ? theme.white : theme.black,\n        theme.luminanceThreshold\n      ),\n      variable: '--mantine-color-bright',\n    };\n  }\n\n  if (color === 'dimmed') {\n    return {\n      color,\n      value: colorScheme === 'dark' ? theme.colors.dark[2] : theme.colors.gray[7],\n      shade: undefined,\n      isThemeColor: false,\n      isLight: isLightColor(\n        colorScheme === 'dark' ? theme.colors.dark[2] : theme.colors.gray[6],\n        theme.luminanceThreshold\n      ),\n      variable: '--mantine-color-dimmed',\n    };\n  }\n\n  if (color === 'white' || color === 'black') {\n    return {\n      color,\n      value: color === 'white' ? theme.white : theme.black,\n      shade: undefined,\n      isThemeColor: false,\n      isLight: isLightColor(\n        color === 'white' ? theme.white : theme.black,\n        theme.luminanceThreshold\n      ),\n      variable: `--mantine-color-${color}`,\n    };\n  }\n\n  const [_color, shade] = color.split('.');\n  const colorShade = shade ? (Number(shade) as MantineColorShade) : undefined;\n  const isThemeColor = _color in theme.colors;\n\n  if (isThemeColor) {\n    const colorValue =\n      colorShade !== undefined\n        ? theme.colors[_color][colorShade]\n        : theme.colors[_color][getPrimaryShade(theme, colorScheme || 'light')];\n\n    return {\n      color: _color,\n      value: colorValue,\n      shade: colorShade,\n      isThemeColor,\n      isLight: isLightColor(colorValue, theme.luminanceThreshold),\n      variable: shade\n        ? `--mantine-color-${_color}-${colorShade}`\n        : `--mantine-color-${_color}-filled`,\n    };\n  }\n\n  return {\n    color,\n    value: color,\n    isThemeColor,\n    isLight: isLightColor(color, theme.luminanceThreshold),\n    shade: colorShade,\n    variable: undefined,\n  };\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 2775, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2780, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/MantineProvider/color-functions/get-theme-color/get-theme-color.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const getThemeColor = registerClientReference(\n    function() { throw new Error(\"Attempted to call getThemeColor() from the server but getThemeColor is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/MantineProvider/color-functions/get-theme-color/get-theme-color.mjs\",\n    \"getThemeColor\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,gBAAgB,2RACzB;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,qHACA"}},
    {"offset": {"line": 2789, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2794, "column": 0}, "map": {"version":3,"sources":["../../../../../src/core/MantineProvider/color-functions/get-theme-color/get-theme-color.ts"],"sourcesContent":["import type { MantineTheme } from '../../theme.types';\nimport { parseThemeColor } from '../parse-theme-color/parse-theme-color';\n\nexport function getThemeColor(color: string | undefined | null, theme: MantineTheme) {\n  const parsed = parseThemeColor({ color: color || theme.primaryColor, theme });\n  return parsed.variable ? `var(${parsed.variable})` : color!;\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 2799, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2804, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/MantineProvider/color-functions/default-variant-colors-resolver/default-variant-colors-resolver.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const defaultVariantColorsResolver = registerClientReference(\n    function() { throw new Error(\"Attempted to call defaultVariantColorsResolver() from the server but defaultVariantColorsResolver is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/MantineProvider/color-functions/default-variant-colors-resolver/default-variant-colors-resolver.mjs\",\n    \"defaultVariantColorsResolver\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,+BAA+B,2RACxC;IAAa,MAAM,IAAI,MAAM;AAAwQ,GACrS,qJACA"}},
    {"offset": {"line": 2813, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2818, "column": 0}, "map": {"version":3,"sources":["../../../../../src/core/MantineProvider/color-functions/default-variant-colors-resolver/default-variant-colors-resolver.ts"],"sourcesContent":["import { rem } from '../../../utils';\nimport { MantineColor, MantineGradient, MantineTheme } from '../../theme.types';\nimport { darken } from '../darken/darken';\nimport { getGradient } from '../get-gradient/get-gradient';\nimport { parseThemeColor } from '../parse-theme-color/parse-theme-color';\nimport { rgba } from '../rgba/rgba';\n\nexport interface VariantColorsResolverInput {\n  color: MantineColor | undefined;\n  theme: MantineTheme;\n  variant: string;\n  gradient?: MantineGradient;\n  autoContrast?: boolean;\n}\n\nexport interface VariantColorResolverResult {\n  background: string;\n  hover: string;\n  color: string;\n  border: string;\n  hoverColor?: string;\n}\n\nexport type VariantColorsResolver = (\n  input: VariantColorsResolverInput\n) => VariantColorResolverResult;\n\nexport const defaultVariantColorsResolver: VariantColorsResolver = ({\n  color,\n  theme,\n  variant,\n  gradient,\n  autoContrast,\n}) => {\n  const parsed = parseThemeColor({ color, theme });\n\n  const _autoContrast = typeof autoContrast === 'boolean' ? autoContrast : theme.autoContrast;\n\n  if (variant === 'filled') {\n    const textColor = _autoContrast\n      ? parsed.isLight\n        ? 'var(--mantine-color-black)'\n        : 'var(--mantine-color-white)'\n      : 'var(--mantine-color-white)';\n    if (parsed.isThemeColor) {\n      if (parsed.shade === undefined) {\n        return {\n          background: `var(--mantine-color-${color}-filled)`,\n          hover: `var(--mantine-color-${color}-filled-hover)`,\n          color: textColor,\n          border: `${rem(1)} solid transparent`,\n        };\n      }\n\n      return {\n        background: `var(--mantine-color-${parsed.color}-${parsed.shade})`,\n        hover: `var(--mantine-color-${parsed.color}-${parsed.shade === 9 ? 8 : parsed.shade + 1})`,\n        color: textColor,\n        border: `${rem(1)} solid transparent`,\n      };\n    }\n\n    return {\n      background: color!,\n      hover: darken(color!, 0.1),\n      color: textColor,\n      border: `${rem(1)} solid transparent`,\n    };\n  }\n\n  if (variant === 'light') {\n    if (parsed.isThemeColor) {\n      if (parsed.shade === undefined) {\n        return {\n          background: `var(--mantine-color-${color}-light)`,\n          hover: `var(--mantine-color-${color}-light-hover)`,\n          color: `var(--mantine-color-${color}-light-color)`,\n          border: `${rem(1)} solid transparent`,\n        };\n      }\n\n      const parsedColor = theme.colors[parsed.color][parsed.shade];\n\n      return {\n        background: rgba(parsedColor, 0.1),\n        hover: rgba(parsedColor, 0.12),\n        color: `var(--mantine-color-${parsed.color}-${Math.min(parsed.shade, 6)})`,\n        border: `${rem(1)} solid transparent`,\n      };\n    }\n\n    return {\n      background: rgba(color!, 0.1),\n      hover: rgba(color!, 0.12),\n      color: color!,\n      border: `${rem(1)} solid transparent`,\n    };\n  }\n\n  if (variant === 'outline') {\n    if (parsed.isThemeColor) {\n      if (parsed.shade === undefined) {\n        return {\n          background: 'transparent',\n          hover: `var(--mantine-color-${color}-outline-hover)`,\n          color: `var(--mantine-color-${color}-outline)`,\n          border: `${rem(1)} solid var(--mantine-color-${color}-outline)`,\n        };\n      }\n\n      return {\n        background: 'transparent',\n        hover: rgba(theme.colors[parsed.color][parsed.shade], 0.05),\n        color: `var(--mantine-color-${parsed.color}-${parsed.shade})`,\n        border: `${rem(1)} solid var(--mantine-color-${parsed.color}-${parsed.shade})`,\n      };\n    }\n\n    return {\n      background: 'transparent',\n      hover: rgba(color!, 0.05),\n      color: color!,\n      border: `${rem(1)} solid ${color}`,\n    };\n  }\n\n  if (variant === 'subtle') {\n    if (parsed.isThemeColor) {\n      if (parsed.shade === undefined) {\n        return {\n          background: 'transparent',\n          hover: `var(--mantine-color-${color}-light-hover)`,\n          color: `var(--mantine-color-${color}-light-color)`,\n          border: `${rem(1)} solid transparent`,\n        };\n      }\n\n      const parsedColor = theme.colors[parsed.color][parsed.shade];\n\n      return {\n        background: 'transparent',\n        hover: rgba(parsedColor, 0.12),\n        color: `var(--mantine-color-${parsed.color}-${Math.min(parsed.shade, 6)})`,\n        border: `${rem(1)} solid transparent`,\n      };\n    }\n\n    return {\n      background: 'transparent',\n      hover: rgba(color!, 0.12),\n      color: color!,\n      border: `${rem(1)} solid transparent`,\n    };\n  }\n\n  if (variant === 'transparent') {\n    if (parsed.isThemeColor) {\n      if (parsed.shade === undefined) {\n        return {\n          background: 'transparent',\n          hover: 'transparent',\n          color: `var(--mantine-color-${color}-light-color)`,\n          border: `${rem(1)} solid transparent`,\n        };\n      }\n\n      return {\n        background: 'transparent',\n        hover: 'transparent',\n        color: `var(--mantine-color-${parsed.color}-${Math.min(parsed.shade, 6)})`,\n        border: `${rem(1)} solid transparent`,\n      };\n    }\n\n    return {\n      background: 'transparent',\n      hover: 'transparent',\n      color: color!,\n      border: `${rem(1)} solid transparent`,\n    };\n  }\n\n  if (variant === 'white') {\n    if (parsed.isThemeColor) {\n      if (parsed.shade === undefined) {\n        return {\n          background: 'var(--mantine-color-white)',\n          hover: darken(theme.white, 0.01),\n          color: `var(--mantine-color-${color}-filled)`,\n          border: `${rem(1)} solid transparent`,\n        };\n      }\n\n      return {\n        background: 'var(--mantine-color-white)',\n        hover: darken(theme.white, 0.01),\n        color: `var(--mantine-color-${parsed.color}-${parsed.shade})`,\n        border: `${rem(1)} solid transparent`,\n      };\n    }\n\n    return {\n      background: 'var(--mantine-color-white)',\n      hover: darken(theme.white, 0.01),\n      color: color!,\n      border: `${rem(1)} solid transparent`,\n    };\n  }\n\n  if (variant === 'gradient') {\n    return {\n      background: getGradient(gradient, theme),\n      hover: getGradient(gradient, theme),\n      color: 'var(--mantine-color-white)',\n      border: 'none',\n    };\n  }\n\n  if (variant === 'default') {\n    return {\n      background: 'var(--mantine-color-default)',\n      hover: 'var(--mantine-color-default-hover)',\n      color: 'var(--mantine-color-default-color)',\n      border: `${rem(1)} solid var(--mantine-color-default-border)`,\n    };\n  }\n\n  return {} as VariantColorResolverResult;\n};\n"],"names":[],"mappings":""}},
    {"offset": {"line": 2823, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2828, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/MantineProvider/color-functions/get-gradient/get-gradient.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const getGradient = registerClientReference(\n    function() { throw new Error(\"Attempted to call getGradient() from the server but getGradient is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/MantineProvider/color-functions/get-gradient/get-gradient.mjs\",\n    \"getGradient\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,cAAc,2RACvB;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,+GACA"}},
    {"offset": {"line": 2837, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2842, "column": 0}, "map": {"version":3,"sources":["../../../../../src/core/MantineProvider/color-functions/get-gradient/get-gradient.ts"],"sourcesContent":["import { MantineGradient, MantineTheme } from '../../theme.types';\nimport { getThemeColor } from '../get-theme-color/get-theme-color';\n\nexport function getGradient(gradient: MantineGradient | undefined, theme: MantineTheme) {\n  const merged = {\n    from: gradient?.from || theme.defaultGradient.from,\n    to: gradient?.to || theme.defaultGradient.to,\n    deg: gradient?.deg || theme.defaultGradient.deg || 0,\n  };\n\n  const fromColor = getThemeColor(merged.from, theme);\n  const toColor = getThemeColor(merged.to, theme);\n\n  return `linear-gradient(${merged.deg}deg, ${fromColor} 0%, ${toColor} 100%)`;\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 2847, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2852, "column": 0}, "map": {"version":3,"sources":["../../../../../src/core/MantineProvider/color-functions/to-rgba/to-rgba.ts","/turbopack/[project]/node_modules/@mantine/core/esm/core/MantineProvider/color-functions/to-rgba/to-rgba.mjs"],"sourcesContent":["export interface RGBA {\n  r: number;\n  g: number;\n  b: number;\n  a: number;\n}\n\nfunction isHexColor(hex: string): boolean {\n  const HEX_REGEXP = /^#?([0-9A-F]{3}){1,2}([0-9A-F]{2})?$/i;\n\n  return HEX_REGEXP.test(hex);\n}\n\nfunction hexToRgba(color: string): RGBA {\n  let hexString = color.replace('#', '');\n\n  if (hexString.length === 3) {\n    const shorthandHex = hexString.split('');\n    hexString = [\n      shorthandHex[0],\n      shorthandHex[0],\n      shorthandHex[1],\n      shorthandHex[1],\n      shorthandHex[2],\n      shorthandHex[2],\n    ].join('');\n  }\n\n  if (hexString.length === 8) {\n    const alpha = parseInt(hexString.slice(6, 8), 16) / 255;\n\n    return {\n      r: parseInt(hexString.slice(0, 2), 16),\n      g: parseInt(hexString.slice(2, 4), 16),\n      b: parseInt(hexString.slice(4, 6), 16),\n      a: alpha,\n    };\n  }\n\n  const parsed = parseInt(hexString, 16);\n  const r = (parsed >> 16) & 255;\n  const g = (parsed >> 8) & 255;\n  const b = parsed & 255;\n\n  return {\n    r,\n    g,\n    b,\n    a: 1,\n  };\n}\n\nfunction rgbStringToRgba(color: string): RGBA {\n  const [r, g, b, a] = color\n    .replace(/[^0-9,./]/g, '')\n    .split(/[/,]/)\n    .map(Number);\n\n  return { r, g, b, a: a || 1 };\n}\n\nfunction hslStringToRgba(hslaString: string): RGBA {\n  const hslaRegex =\n    /^hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+%)\\s*,\\s*(\\d+%)\\s*(,\\s*(0?\\.\\d+|\\d+(\\.\\d+)?))?\\s*\\)$/i;\n\n  const matches = hslaString.match(hslaRegex);\n  if (!matches) {\n    return {\n      r: 0,\n      g: 0,\n      b: 0,\n      a: 1,\n    };\n  }\n\n  const h = parseInt(matches[1], 10);\n  const s = parseInt(matches[2], 10) / 100;\n  const l = parseInt(matches[3], 10) / 100;\n  const a = matches[5] ? parseFloat(matches[5]) : undefined;\n\n  const chroma = (1 - Math.abs(2 * l - 1)) * s;\n  const huePrime = h / 60;\n  const x = chroma * (1 - Math.abs((huePrime % 2) - 1));\n  const m = l - chroma / 2;\n\n  let r: number;\n  let g: number;\n  let b: number;\n\n  if (huePrime >= 0 && huePrime < 1) {\n    r = chroma;\n    g = x;\n    b = 0;\n  } else if (huePrime >= 1 && huePrime < 2) {\n    r = x;\n    g = chroma;\n    b = 0;\n  } else if (huePrime >= 2 && huePrime < 3) {\n    r = 0;\n    g = chroma;\n    b = x;\n  } else if (huePrime >= 3 && huePrime < 4) {\n    r = 0;\n    g = x;\n    b = chroma;\n  } else if (huePrime >= 4 && huePrime < 5) {\n    r = x;\n    g = 0;\n    b = chroma;\n  } else {\n    r = chroma;\n    g = 0;\n    b = x;\n  }\n\n  return {\n    r: Math.round((r + m) * 255),\n    g: Math.round((g + m) * 255),\n    b: Math.round((b + m) * 255),\n    a: a || 1,\n  };\n}\n\nexport function toRgba(color: string): RGBA {\n  if (isHexColor(color)) {\n    return hexToRgba(color);\n  }\n\n  if (color.startsWith('rgb')) {\n    return rgbStringToRgba(color);\n  }\n\n  if (color.startsWith('hsl')) {\n    return hslStringToRgba(color);\n  }\n\n  return {\n    r: 0,\n    g: 0,\n    b: 0,\n    a: 1,\n  };\n}\n",null],"names":[],"mappings":";;;AACA,SAAS,WAAW,GAAG;IACrB,MAAM,aAAa;IACnB,OAAO,WAAW,IAAI,CAAC;AACzB;AACA,SAAS,UAAU,KAAK;IACtB,IAAI,YAAY,MAAM,OAAO,CAAC,KAAK;IACnC,IAAI,UAAU,MAAM,KAAK,GAAG;QAC1B,MAAM,eAAe,UAAU,KAAK,CAAC;QACrC,YAAY;YACV,YAAY,CAAC,EAAE;YACf,YAAY,CAAC,EAAE;YACf,YAAY,CAAC,EAAE;YACf,YAAY,CAAC,EAAE;YACf,YAAY,CAAC,EAAE;YACf,YAAY,CAAC,EAAE;SAChB,CAAC,IAAI,CAAC;IACX;IACE,IAAI,UAAU,MAAM,KAAK,GAAG;QAC1B,MAAM,QAAQ,SAAS,UAAU,KAAK,CAAC,GAAG,IAAI,MAAM;QACpD,OAAO;YACL,GAAG,SAAS,UAAU,KAAK,CAAC,GAAG,IAAI;YACnC,GAAG,SAAS,UAAU,KAAK,CAAC,GAAG,IAAI;YACnC,GAAG,SAAS,UAAU,KAAK,CAAC,GAAG,IAAI;YACnC,GAAG;QACT;IACA;IACE,MAAM,SAAS,SAAS,WAAW;IACnC,MAAM,IAAI,UAAU,KAAK;IACzB,MAAM,IAAI,UAAU,IAAI;IACxB,MAAM,IAAI,SAAS;IACnB,OAAO;QACL;QACA;QACA;QACA,GAAG;IACP;AACA;AACA,SAAS,gBAAgB,KAAK;IAC5B,MAAM,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,MAAM,OAAO,CAAC,cAAc,IAAI,KAAK,CAAC,QAAQ,GAAG,CAAC;IACvE,OAAO;QAAE;QAAG;QAAG;QAAG,GAAG,KAAK;IAAC;AAC7B;AACA,SAAS,gBAAgB,UAAU;IACjC,MAAM,YAAY;IAClB,MAAM,UAAU,WAAW,KAAK,CAAC;IACjC,IAAI,CAAC,SAAS;QACZ,OAAO;YACL,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;QACT;IACA;IACE,MAAM,IAAI,SAAS,OAAO,CAAC,EAAE,EAAE;IAC/B,MAAM,IAAI,SAAS,OAAO,CAAC,EAAE,EAAE,MAAM;IACrC,MAAM,IAAI,SAAS,OAAO,CAAC,EAAE,EAAE,MAAM;IACrC,MAAM,IAAI,OAAO,CAAC,EAAE,GAAG,WAAW,OAAO,CAAC,EAAE,IAAI,KAAK;IACrD,MAAM,SAAS,CAAC,IAAI,KAAK,GAAG,CAAC,IAAI,IAAI,EAAE,IAAI;IAC3C,MAAM,WAAW,IAAI;IACrB,MAAM,IAAI,SAAM,CAAI,IAAI,KAAK,GAAG,CAAC,WAAW,IAAI,EAAE;IAClD,MAAM,IAAI,IAAI,SAAS;IACvB,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI,YAAY,KAAK,WAAW,GAAG;QACjC,IAAI;QACJ,IAAI;QACJ,IAAI;IACR,OAAS,IAAI,YAAY,KAAK,WAAW,GAAG;QACxC,IAAI;QACJ,IAAI;QACJ,IAAI;IACR,OAAS,IAAI,YAAY,KAAK,WAAW,GAAG;QACxC,IAAI;QACJ,IAAI;QACJ,IAAI;IACR,OAAS,IAAI,YAAY,KAAK,WAAW,GAAG;QACxC,IAAI;QACJ,IAAI;QACJ,IAAI;IACR,OAAS,IAAI,YAAY,KAAK,WAAW,GAAG;QACxC,IAAI;QACJ,IAAI;QACJ,IAAI;IACR,OAAS;QACL,IAAI;QACJ,IAAI;QACJ,IAAI;IACR;IACE,OAAO;QACL,GAAG,KAAK,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI;QACxB,GAAG,KAAK,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI;QACxB,GAAG,KAAK,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI;QACxB,GAAG,KAAK;IACZ;AACA;AACO,SAAS,OAAO,KAAK;IAC1B,IAAI,WAAW,QAAQ;QACrB,OAAO,UAAU;IACrB;IACE,IAAI,MAAM,UAAU,CAAC,QAAQ;QAC3B,OAAO,gBAAgB;IAC3B;IACE,IAAI,MAAM,UAAU,CAAC,QAAQ;QAC3B,OAAO,gBAAgB;IAC3B;IACE,OAAO;QACL,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;IACP;AACA"}},
    {"offset": {"line": 2974, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2979, "column": 0}, "map": {"version":3,"sources":["../../../../../src/core/MantineProvider/color-functions/rgba/rgba.ts","/turbopack/[project]/node_modules/@mantine/core/esm/core/MantineProvider/color-functions/rgba/rgba.mjs"],"sourcesContent":["import { toRgba } from '../to-rgba/to-rgba';\n\nexport function rgba(color: string, alpha: number) {\n  if (typeof color !== 'string' || alpha > 1 || alpha < 0) {\n    return 'rgba(0, 0, 0, 1)';\n  }\n\n  if (color.startsWith('var(')) {\n    const mixPercentage = (1 - alpha) * 100;\n    return `color-mix(in srgb, ${color}, transparent ${mixPercentage}%)`;\n  }\n\n  if (color.startsWith('oklch')) {\n    if (color.includes('/')) {\n      return color.replace(/\\/\\s*[\\d.]+\\s*\\)/, `/ ${alpha})`);\n    }\n\n    return color.replace(')', ` / ${alpha})`);\n  }\n\n  const { r, g, b } = toRgba(color);\n  return `rgba(${r}, ${g}, ${b}, ${alpha})`;\n}\n\nexport const alpha = rgba;\n",null],"names":[],"mappings":";;;;;;;AAEO,SAAS,KAAK,KAAK,EAAE,MAAM;IAChC,IAAI,OAAO,UAAU,YAAY,SAAS,KAAK,SAAS,GAAG;QACzD,OAAO;IACX;IACE,IAAI,MAAM,UAAU,CAAC,SAAS;QAC5B,MAAM,gBAAgB,CAAC,IAAI,MAAM,IAAI;QACrC,OAAO,CAAC,mBAAmB,EAAE,MAAM,cAAc,EAAE,cAAc,EAAE,CAAC;IACxE;IACE,IAAI,MAAM,UAAU,CAAC,UAAU;QAC7B,IAAI,MAAM,QAAQ,CAAC,MAAM;YACvB,OAAO,MAAM,OAAO,CAAC,oBAAoB,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;QAC7D;QACI,OAAO,MAAM,OAAO,CAAC,KAAK,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;IAC7C;IACE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,iOAAO;IAC3B,OAAO,CAAC,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,OAAO,CAAC,CAAC;AAC5C;AACY,MAAC,QAAQ"}},
    {"offset": {"line": 3006, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3011, "column": 0}, "map": {"version":3,"sources":["../../../../../src/core/MantineProvider/color-functions/darken/darken.ts","/turbopack/[project]/node_modules/@mantine/core/esm/core/MantineProvider/color-functions/darken/darken.mjs"],"sourcesContent":["import { toRgba } from '../to-rgba/to-rgba';\n\nexport function darken(color: string, alpha: number) {\n  if (color.startsWith('var(')) {\n    return `color-mix(in srgb, ${color}, black ${alpha * 100}%)`;\n  }\n\n  const { r, g, b, a } = toRgba(color);\n  const f = 1 - alpha;\n\n  const dark = (input: number) => Math.round(input * f);\n\n  return `rgba(${dark(r)}, ${dark(g)}, ${dark(b)}, ${a})`;\n}\n",null],"names":[],"mappings":";;;;;;AAEO,SAAS,OAAO,KAAK,EAAE,KAAK;IACjC,IAAI,MAAM,UAAU,CAAC,SAAS;QAC5B,OAAO,CAAC,mBAAmB,EAAE,MAAM,QAAQ,EAAE,QAAQ,IAAI,EAAE,CAAC;IAChE;IACE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,iOAAO;IAC9B,MAAM,IAAI,IAAI;IACd,MAAM,OAAO,CAAC,QAAU,KAAK,KAAK,CAAC,QAAQ;IAC3C,OAAO,CAAC,KAAK,EAAE,KAAK,GAAG,EAAE,EAAE,KAAK,GAAG,EAAE,EAAE,KAAK,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC;AACzD"}},
    {"offset": {"line": 3028, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3033, "column": 0}, "map": {"version":3,"sources":["../../../../../src/core/MantineProvider/color-functions/lighten/lighten.ts","/turbopack/[project]/node_modules/@mantine/core/esm/core/MantineProvider/color-functions/lighten/lighten.mjs"],"sourcesContent":["import { toRgba } from '../to-rgba/to-rgba';\n\nexport function lighten(color: string, alpha: number) {\n  if (color.startsWith('var(')) {\n    return `color-mix(in srgb, ${color}, white ${alpha * 100}%)`;\n  }\n\n  const { r, g, b, a } = toRgba(color);\n\n  const light = (input: number) => Math.round(input + (255 - input) * alpha);\n\n  return `rgba(${light(r)}, ${light(g)}, ${light(b)}, ${a})`;\n}\n",null],"names":[],"mappings":";;;;;;AAEO,SAAS,QAAQ,KAAK,EAAE,KAAK;IAClC,IAAI,MAAM,UAAU,CAAC,SAAS;QAC5B,OAAO,CAAC,mBAAmB,EAAE,MAAM,QAAQ,EAAE,QAAQ,IAAI,EAAE,CAAC;IAChE;IACE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,iOAAO;IAC9B,MAAM,QAAQ,CAAC,QAAU,KAAK,KAAK,CAAC,QAAQ,CAAC,MAAM,KAAK,IAAI;IAC5D,OAAO,CAAC,KAAK,EAAE,MAAM,GAAG,EAAE,EAAE,MAAM,GAAG,EAAE,EAAE,MAAM,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC;AAC5D"}},
    {"offset": {"line": 3049, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3054, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/MantineProvider/color-functions/luminance/luminance.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const isLightColor = registerClientReference(\n    function() { throw new Error(\"Attempted to call isLightColor() from the server but isLightColor is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/MantineProvider/color-functions/luminance/luminance.mjs\",\n    \"isLightColor\",\n);\nexport const luminance = registerClientReference(\n    function() { throw new Error(\"Attempted to call luminance() from the server but luminance is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/MantineProvider/color-functions/luminance/luminance.mjs\",\n    \"luminance\",\n);\n"],"names":[],"mappings":";;;;;;;AACO,MAAM,eAAe,2RACxB;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,yGACA;AAEG,MAAM,YAAY,2RACrB;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,yGACA"}},
    {"offset": {"line": 3067, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3072, "column": 0}, "map": {"version":3,"sources":["../../../../../src/core/MantineProvider/color-functions/luminance/luminance.ts"],"sourcesContent":["import { toRgba } from '../to-rgba/to-rgba';\n\nfunction gammaCorrect(c: number) {\n  return c <= 0.03928 ? c / 12.92 : ((c + 0.055) / 1.055) ** 2.4;\n}\n\nfunction getLightnessFromOklch(oklchColor: string) {\n  const match = oklchColor.match(/oklch\\((.*?)%\\s/);\n  return match ? parseFloat(match[1]) : null;\n}\n\nexport function luminance(color: string): number {\n  if (color.startsWith('oklch(')) {\n    return (getLightnessFromOklch(color) || 0) / 100;\n  }\n\n  const { r, g, b } = toRgba(color);\n\n  const sR = r / 255;\n  const sG = g / 255;\n  const sB = b / 255;\n\n  const rLinear = gammaCorrect(sR);\n  const gLinear = gammaCorrect(sG);\n  const bLinear = gammaCorrect(sB);\n\n  return 0.2126 * rLinear + 0.7152 * gLinear + 0.0722 * bLinear;\n}\n\nexport function isLightColor(color: string, luminanceThreshold = 0.179) {\n  if (color.startsWith('var(')) {\n    return false;\n  }\n\n  return luminance(color) > luminanceThreshold;\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 3077, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3082, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/MantineProvider/color-functions/get-contrast-color/get-contrast-color.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const getContrastColor = registerClientReference(\n    function() { throw new Error(\"Attempted to call getContrastColor() from the server but getContrastColor is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/MantineProvider/color-functions/get-contrast-color/get-contrast-color.mjs\",\n    \"getContrastColor\",\n);\nexport const getPrimaryContrastColor = registerClientReference(\n    function() { throw new Error(\"Attempted to call getPrimaryContrastColor() from the server but getPrimaryContrastColor is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/MantineProvider/color-functions/get-contrast-color/get-contrast-color.mjs\",\n    \"getPrimaryContrastColor\",\n);\n"],"names":[],"mappings":";;;;;;;AACO,MAAM,mBAAmB,2RAC5B;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,2HACA;AAEG,MAAM,0BAA0B,2RACnC;IAAa,MAAM,IAAI,MAAM;AAA8P,GAC3R,2HACA"}},
    {"offset": {"line": 3095, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3100, "column": 0}, "map": {"version":3,"sources":["../../../../../src/core/MantineProvider/color-functions/get-contrast-color/get-contrast-color.ts"],"sourcesContent":["import type { MantineTheme } from '../../theme.types';\nimport { getPrimaryShade } from '../get-primary-shade/get-primary-shade';\nimport { parseThemeColor } from '../parse-theme-color/parse-theme-color';\n\ninterface GetContrastColorInput {\n  color: string | null | undefined;\n  theme: MantineTheme;\n  autoContrast?: boolean | undefined | null;\n}\n\nexport function getContrastColor({ color, theme, autoContrast }: GetContrastColorInput) {\n  const _autoContrast = typeof autoContrast === 'boolean' ? autoContrast : theme.autoContrast;\n\n  if (!_autoContrast) {\n    return 'var(--mantine-color-white)';\n  }\n\n  const parsed = parseThemeColor({ color: color || theme.primaryColor, theme });\n  return parsed.isLight ? 'var(--mantine-color-black)' : 'var(--mantine-color-white)';\n}\n\nexport function getPrimaryContrastColor(theme: MantineTheme, colorScheme: 'light' | 'dark') {\n  return getContrastColor({\n    color: theme.colors[theme.primaryColor][getPrimaryShade(theme, colorScheme)],\n    theme,\n    autoContrast: null,\n  });\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 3105, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3110, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/MantineProvider/color-functions/get-auto-contrast-value/get-auto-contrast-value.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const getAutoContrastValue = registerClientReference(\n    function() { throw new Error(\"Attempted to call getAutoContrastValue() from the server but getAutoContrastValue is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/MantineProvider/color-functions/get-auto-contrast-value/get-auto-contrast-value.mjs\",\n    \"getAutoContrastValue\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,uBAAuB,2RAChC;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,qIACA"}},
    {"offset": {"line": 3119, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3124, "column": 0}, "map": {"version":3,"sources":["../../../../../src/core/MantineProvider/color-functions/get-auto-contrast-value/get-auto-contrast-value.ts"],"sourcesContent":["import type { MantineTheme } from '../../theme.types';\n\nexport function getAutoContrastValue(autoContrast: boolean | undefined, theme: MantineTheme) {\n  return typeof autoContrast === 'boolean' ? autoContrast : theme.autoContrast;\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 3129, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3134, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/MantineProvider/color-functions/colors-tuple/colors-tuple.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const colorsTuple = registerClientReference(\n    function() { throw new Error(\"Attempted to call colorsTuple() from the server but colorsTuple is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/MantineProvider/color-functions/colors-tuple/colors-tuple.mjs\",\n    \"colorsTuple\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,cAAc,2RACvB;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,+GACA"}},
    {"offset": {"line": 3143, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3148, "column": 0}, "map": {"version":3,"sources":["../../../../../src/core/MantineProvider/color-functions/colors-tuple/colors-tuple.ts"],"sourcesContent":["import { MantineColorsTuple } from '../../theme.types';\n\nexport function colorsTuple(input: string | string[]): MantineColorsTuple {\n  if (Array.isArray(input)) {\n    return input as unknown as MantineColorsTuple;\n  }\n\n  return Array(10).fill(input) as unknown as MantineColorsTuple;\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 3153, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3158, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/MantineProvider/use-mantine-color-scheme/use-mantine-color-scheme.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const useMantineColorScheme = registerClientReference(\n    function() { throw new Error(\"Attempted to call useMantineColorScheme() from the server but useMantineColorScheme is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/MantineProvider/use-mantine-color-scheme/use-mantine-color-scheme.mjs\",\n    \"useMantineColorScheme\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,wBAAwB,2RACjC;IAAa,MAAM,IAAI,MAAM;AAA0P,GACvR,uHACA"}},
    {"offset": {"line": 3167, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3172, "column": 0}, "map": {"version":3,"sources":["../../../../src/core/MantineProvider/use-mantine-color-scheme/use-mantine-color-scheme.ts"],"sourcesContent":["import { useCallback, useContext, useEffect, useRef } from 'react';\nimport { useColorScheme } from '@mantine/hooks';\nimport { MantineContext } from '../Mantine.context';\nimport { MantineColorScheme } from '../theme.types';\n\nfunction disableTransition() {\n  const style = document.createElement('style');\n  style.innerHTML = '*, *::before, *::after {transition: none !important;}';\n  style.setAttribute('data-mantine-disable-transition', 'true');\n  document.head.appendChild(style);\n  const clear = () =>\n    document\n      .querySelectorAll('[data-mantine-disable-transition]')\n      .forEach((element) => element.remove());\n  return clear;\n}\n\nexport function useMantineColorScheme({ keepTransitions }: { keepTransitions?: boolean } = {}) {\n  const clearStylesRef = useRef<() => void>();\n  const timeoutRef = useRef<number>();\n  const ctx = useContext(MantineContext);\n\n  if (!ctx) {\n    throw new Error('[@mantine/core] MantineProvider was not found in tree');\n  }\n\n  const setColorScheme = (value: MantineColorScheme) => {\n    ctx.setColorScheme(value);\n    clearStylesRef.current = keepTransitions ? () => {} : disableTransition();\n    window.clearTimeout(timeoutRef.current);\n    timeoutRef.current = window.setTimeout(() => {\n      clearStylesRef.current?.();\n    }, 10);\n  };\n\n  const clearColorScheme = () => {\n    ctx.clearColorScheme();\n    clearStylesRef.current = keepTransitions ? () => {} : disableTransition();\n    window.clearTimeout(timeoutRef.current);\n    timeoutRef.current = window.setTimeout(() => {\n      clearStylesRef.current?.();\n    }, 10);\n  };\n\n  const osColorScheme = useColorScheme('light', { getInitialValueInEffect: false });\n  const computedColorScheme = ctx.colorScheme === 'auto' ? osColorScheme : ctx.colorScheme;\n\n  const toggleColorScheme = useCallback(\n    () => setColorScheme(computedColorScheme === 'light' ? 'dark' : 'light'),\n    [setColorScheme, computedColorScheme]\n  );\n\n  useEffect(\n    () => () => {\n      clearStylesRef.current?.();\n      window.clearTimeout(timeoutRef.current);\n    },\n    []\n  );\n\n  return {\n    colorScheme: ctx.colorScheme,\n    setColorScheme,\n    clearColorScheme,\n    toggleColorScheme,\n  };\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 3177, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3182, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/MantineProvider/use-mantine-color-scheme/use-provider-color-scheme.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const useProviderColorScheme = registerClientReference(\n    function() { throw new Error(\"Attempted to call useProviderColorScheme() from the server but useProviderColorScheme is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/MantineProvider/use-mantine-color-scheme/use-provider-color-scheme.mjs\",\n    \"useProviderColorScheme\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,yBAAyB,2RAClC;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,wHACA"}},
    {"offset": {"line": 3191, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3196, "column": 0}, "map": {"version":3,"sources":["../../../../src/core/MantineProvider/use-mantine-color-scheme/use-provider-color-scheme.ts"],"sourcesContent":["import { useCallback, useEffect, useRef, useState } from 'react';\nimport { useIsomorphicEffect } from '@mantine/hooks';\nimport type { MantineColorSchemeManager } from '../color-scheme-managers';\nimport type { MantineColorScheme } from '../theme.types';\n\nfunction setColorSchemeAttribute(\n  colorScheme: MantineColorScheme,\n  getRootElement: () => HTMLElement | undefined\n) {\n  const computedColorScheme =\n    colorScheme !== 'auto'\n      ? colorScheme\n      : window.matchMedia('(prefers-color-scheme: dark)').matches\n        ? 'dark'\n        : 'light';\n  getRootElement()?.setAttribute('data-mantine-color-scheme', computedColorScheme);\n}\n\ntype MediaQueryCallback = (event: { matches: boolean; media: string }) => void;\n\ninterface UseProviderColorSchemeOptions {\n  manager: MantineColorSchemeManager;\n  defaultColorScheme: MantineColorScheme;\n  forceColorScheme: 'light' | 'dark' | undefined;\n  getRootElement: () => HTMLElement | undefined;\n}\n\nexport function useProviderColorScheme({\n  manager,\n  defaultColorScheme,\n  getRootElement,\n  forceColorScheme,\n}: UseProviderColorSchemeOptions) {\n  const media = useRef<MediaQueryList>();\n  const [value, setValue] = useState(() => manager.get(defaultColorScheme));\n  const colorSchemeValue = forceColorScheme || value;\n\n  const setColorScheme = useCallback(\n    (colorScheme: MantineColorScheme) => {\n      if (!forceColorScheme) {\n        setColorSchemeAttribute(colorScheme, getRootElement);\n        setValue(colorScheme);\n        manager.set(colorScheme);\n      }\n    },\n    [manager.set, colorSchemeValue, forceColorScheme]\n  );\n\n  const clearColorScheme = useCallback(() => {\n    setValue(defaultColorScheme);\n    setColorSchemeAttribute(defaultColorScheme, getRootElement);\n    manager.clear();\n  }, [manager.clear, defaultColorScheme]);\n\n  useEffect(() => {\n    manager.subscribe(setColorScheme);\n    return manager.unsubscribe;\n  }, [manager.subscribe, manager.unsubscribe]);\n\n  useIsomorphicEffect(() => {\n    setColorSchemeAttribute(manager.get(defaultColorScheme), getRootElement);\n  }, []);\n\n  useEffect(() => {\n    if (forceColorScheme) {\n      setColorSchemeAttribute(forceColorScheme, getRootElement);\n      return () => {};\n    }\n\n    if (forceColorScheme === undefined) {\n      setColorSchemeAttribute(value, getRootElement);\n    }\n\n    media.current = window.matchMedia('(prefers-color-scheme: dark)');\n    const listener: MediaQueryCallback = (event) => {\n      if (value === 'auto') {\n        setColorSchemeAttribute(event.matches ? 'dark' : 'light', getRootElement);\n      }\n    };\n\n    media.current?.addEventListener('change', listener);\n    return () => media.current?.removeEventListener('change', listener);\n  }, [value, forceColorScheme]);\n\n  return { colorScheme: colorSchemeValue, setColorScheme, clearColorScheme };\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 3201, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3206, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/MantineProvider/use-mantine-color-scheme/use-computed-color-scheme.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const useComputedColorScheme = registerClientReference(\n    function() { throw new Error(\"Attempted to call useComputedColorScheme() from the server but useComputedColorScheme is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/MantineProvider/use-mantine-color-scheme/use-computed-color-scheme.mjs\",\n    \"useComputedColorScheme\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,yBAAyB,2RAClC;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,wHACA"}},
    {"offset": {"line": 3215, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3220, "column": 0}, "map": {"version":3,"sources":["../../../../src/core/MantineProvider/use-mantine-color-scheme/use-computed-color-scheme.ts"],"sourcesContent":["import { useColorScheme, UseMediaQueryOptions } from '@mantine/hooks';\nimport { useMantineColorScheme } from './use-mantine-color-scheme';\n\nexport function useComputedColorScheme(\n  defaultValue?: 'light' | 'dark',\n  options: UseMediaQueryOptions = { getInitialValueInEffect: true }\n) {\n  const osColorScheme = useColorScheme(defaultValue, options);\n  const { colorScheme } = useMantineColorScheme();\n  return colorScheme === 'auto' ? osColorScheme : colorScheme;\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 3225, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3230, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/MantineProvider/ColorSchemeScript/ColorSchemeScript.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ColorSchemeScript = registerClientReference(\n    function() { throw new Error(\"Attempted to call ColorSchemeScript() from the server but ColorSchemeScript is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/MantineProvider/ColorSchemeScript/ColorSchemeScript.mjs\",\n    \"ColorSchemeScript\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,oBAAoB,2RAC7B;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,yGACA"}},
    {"offset": {"line": 3239, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3244, "column": 0}, "map": {"version":3,"sources":["../../../../src/core/MantineProvider/ColorSchemeScript/ColorSchemeScript.tsx"],"sourcesContent":["import React from 'react';\nimport type { MantineColorScheme } from '../theme.types';\n\nexport interface ColorSchemeScriptProps extends React.ComponentPropsWithoutRef<'script'> {\n  forceColorScheme?: 'light' | 'dark';\n  defaultColorScheme?: MantineColorScheme;\n  localStorageKey?: string;\n}\n\nconst getScript = ({\n  defaultColorScheme,\n  localStorageKey,\n  forceColorScheme,\n}: Pick<ColorSchemeScriptProps, 'defaultColorScheme' | 'localStorageKey' | 'forceColorScheme'>) =>\n  forceColorScheme\n    ? `document.documentElement.setAttribute(\"data-mantine-color-scheme\", '${forceColorScheme}');`\n    : `try {\n  var _colorScheme = window.localStorage.getItem(\"${localStorageKey}\");\n  var colorScheme = _colorScheme === \"light\" || _colorScheme === \"dark\" || _colorScheme === \"auto\" ? _colorScheme : \"${defaultColorScheme}\";\n  var computedColorScheme = colorScheme !== \"auto\" ? colorScheme : window.matchMedia(\"(prefers-color-scheme: dark)\").matches ? \"dark\" : \"light\";\n  document.documentElement.setAttribute(\"data-mantine-color-scheme\", computedColorScheme);\n} catch (e) {}\n`;\n\nexport function ColorSchemeScript({\n  defaultColorScheme = 'light',\n  localStorageKey = 'mantine-color-scheme-value',\n  forceColorScheme,\n  ...others\n}: ColorSchemeScriptProps) {\n  const _defaultColorScheme = ['light', 'dark', 'auto'].includes(defaultColorScheme)\n    ? defaultColorScheme\n    : 'light';\n  return (\n    <script\n      {...others}\n      data-mantine-script\n      dangerouslySetInnerHTML={{\n        __html: getScript({\n          defaultColorScheme: _defaultColorScheme,\n          localStorageKey,\n          forceColorScheme,\n        }),\n      }}\n    />\n  );\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 3249, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3254, "column": 0}, "map": {"version":3,"sources":["../../../src/core/MantineProvider/default-colors.ts","/turbopack/[project]/node_modules/@mantine/core/esm/core/MantineProvider/default-colors.mjs"],"sourcesContent":["import type { MantineThemeColors } from './theme.types';\n\nexport const DEFAULT_COLORS: MantineThemeColors = {\n  dark: [\n    '#C9C9C9',\n    '#b8b8b8',\n    '#828282',\n    '#696969',\n    '#424242',\n    '#3b3b3b',\n    '#2e2e2e',\n    '#242424',\n    '#1f1f1f',\n    '#141414',\n  ],\n\n  gray: [\n    '#f8f9fa',\n    '#f1f3f5',\n    '#e9ecef',\n    '#dee2e6',\n    '#ced4da',\n    '#adb5bd',\n    '#868e96',\n    '#495057',\n    '#343a40',\n    '#212529',\n  ],\n\n  red: [\n    '#fff5f5',\n    '#ffe3e3',\n    '#ffc9c9',\n    '#ffa8a8',\n    '#ff8787',\n    '#ff6b6b',\n    '#fa5252',\n    '#f03e3e',\n    '#e03131',\n    '#c92a2a',\n  ],\n\n  pink: [\n    '#fff0f6',\n    '#ffdeeb',\n    '#fcc2d7',\n    '#faa2c1',\n    '#f783ac',\n    '#f06595',\n    '#e64980',\n    '#d6336c',\n    '#c2255c',\n    '#a61e4d',\n  ],\n\n  grape: [\n    '#f8f0fc',\n    '#f3d9fa',\n    '#eebefa',\n    '#e599f7',\n    '#da77f2',\n    '#cc5de8',\n    '#be4bdb',\n    '#ae3ec9',\n    '#9c36b5',\n    '#862e9c',\n  ],\n\n  violet: [\n    '#f3f0ff',\n    '#e5dbff',\n    '#d0bfff',\n    '#b197fc',\n    '#9775fa',\n    '#845ef7',\n    '#7950f2',\n    '#7048e8',\n    '#6741d9',\n    '#5f3dc4',\n  ],\n\n  indigo: [\n    '#edf2ff',\n    '#dbe4ff',\n    '#bac8ff',\n    '#91a7ff',\n    '#748ffc',\n    '#5c7cfa',\n    '#4c6ef5',\n    '#4263eb',\n    '#3b5bdb',\n    '#364fc7',\n  ],\n\n  blue: [\n    '#e7f5ff',\n    '#d0ebff',\n    '#a5d8ff',\n    '#74c0fc',\n    '#4dabf7',\n    '#339af0',\n    '#228be6',\n    '#1c7ed6',\n    '#1971c2',\n    '#1864ab',\n  ],\n\n  cyan: [\n    '#e3fafc',\n    '#c5f6fa',\n    '#99e9f2',\n    '#66d9e8',\n    '#3bc9db',\n    '#22b8cf',\n    '#15aabf',\n    '#1098ad',\n    '#0c8599',\n    '#0b7285',\n  ],\n\n  teal: [\n    '#e6fcf5',\n    '#c3fae8',\n    '#96f2d7',\n    '#63e6be',\n    '#38d9a9',\n    '#20c997',\n    '#12b886',\n    '#0ca678',\n    '#099268',\n    '#087f5b',\n  ],\n\n  green: [\n    '#ebfbee',\n    '#d3f9d8',\n    '#b2f2bb',\n    '#8ce99a',\n    '#69db7c',\n    '#51cf66',\n    '#40c057',\n    '#37b24d',\n    '#2f9e44',\n    '#2b8a3e',\n  ],\n\n  lime: [\n    '#f4fce3',\n    '#e9fac8',\n    '#d8f5a2',\n    '#c0eb75',\n    '#a9e34b',\n    '#94d82d',\n    '#82c91e',\n    '#74b816',\n    '#66a80f',\n    '#5c940d',\n  ],\n\n  yellow: [\n    '#fff9db',\n    '#fff3bf',\n    '#ffec99',\n    '#ffe066',\n    '#ffd43b',\n    '#fcc419',\n    '#fab005',\n    '#f59f00',\n    '#f08c00',\n    '#e67700',\n  ],\n\n  orange: [\n    '#fff4e6',\n    '#ffe8cc',\n    '#ffd8a8',\n    '#ffc078',\n    '#ffa94d',\n    '#ff922b',\n    '#fd7e14',\n    '#f76707',\n    '#e8590c',\n    '#d9480f',\n  ],\n};\n",null],"names":[],"mappings":";;;AACY,MAAC,iBAAiB;IAC5B,MAAM;QACJ;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IACD,MAAM;QACJ;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IACD,KAAK;QACH;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IACD,MAAM;QACJ;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IACD,OAAO;QACL;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IACD,QAAQ;QACN;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IACD,QAAQ;QACN;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IACD,MAAM;QACJ;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IACD,MAAM;QACJ;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IACD,MAAM;QACJ;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IACD,OAAO;QACL;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IACD,MAAM;QACJ;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IACD,QAAQ;QACN;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IACD,QAAQ;QACN;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;AACH"}},
    {"offset": {"line": 3429, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3434, "column": 0}, "map": {"version":3,"sources":["../../../src/core/MantineProvider/default-theme.ts","/turbopack/[project]/node_modules/@mantine/core/esm/core/MantineProvider/default-theme.mjs"],"sourcesContent":["import { rem } from '../utils';\nimport { defaultVariantColorsResolver } from './color-functions';\nimport { DEFAULT_COLORS } from './default-colors';\nimport type { MantineTheme } from './theme.types';\n\nconst DEFAULT_FONT_FAMILY =\n  '-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica, Arial, sans-serif, Apple Color Emoji, Segoe UI Emoji';\n\nexport const DEFAULT_THEME: MantineTheme = {\n  scale: 1,\n  fontSmoothing: true,\n  focusRing: 'auto',\n  white: '#fff',\n  black: '#000',\n  colors: DEFAULT_COLORS,\n  primaryShade: { light: 6, dark: 8 },\n  primaryColor: 'blue',\n  variantColorResolver: defaultVariantColorsResolver,\n  autoContrast: false,\n  luminanceThreshold: 0.3,\n  fontFamily: DEFAULT_FONT_FAMILY,\n  fontFamilyMonospace:\n    'ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, Liberation Mono, Courier New, monospace',\n  respectReducedMotion: false,\n  cursorType: 'default',\n  defaultGradient: { from: 'blue', to: 'cyan', deg: 45 },\n  defaultRadius: 'sm',\n  activeClassName: 'mantine-active',\n  focusClassName: '',\n\n  headings: {\n    fontFamily: DEFAULT_FONT_FAMILY,\n    fontWeight: '700',\n    textWrap: 'wrap',\n    sizes: {\n      h1: { fontSize: rem(34), lineHeight: '1.3' },\n      h2: { fontSize: rem(26), lineHeight: '1.35' },\n      h3: { fontSize: rem(22), lineHeight: '1.4' },\n      h4: { fontSize: rem(18), lineHeight: '1.45' },\n      h5: { fontSize: rem(16), lineHeight: '1.5' },\n      h6: { fontSize: rem(14), lineHeight: '1.5' },\n    },\n  },\n\n  fontSizes: {\n    xs: rem(12),\n    sm: rem(14),\n    md: rem(16),\n    lg: rem(18),\n    xl: rem(20),\n  },\n\n  lineHeights: {\n    xs: '1.4',\n    sm: '1.45',\n    md: '1.55',\n    lg: '1.6',\n    xl: '1.65',\n  },\n\n  radius: {\n    xs: rem(2),\n    sm: rem(4),\n    md: rem(8),\n    lg: rem(16),\n    xl: rem(32),\n  },\n\n  spacing: {\n    xs: rem(10),\n    sm: rem(12),\n    md: rem(16),\n    lg: rem(20),\n    xl: rem(32),\n  },\n\n  breakpoints: {\n    xs: '36em',\n    sm: '48em',\n    md: '62em',\n    lg: '75em',\n    xl: '88em',\n  },\n\n  shadows: {\n    xs: `0 ${rem(1)} ${rem(3)} rgba(0, 0, 0, 0.05), 0 ${rem(1)} ${rem(2)} rgba(0, 0, 0, 0.1)`,\n    sm: `0 ${rem(1)} ${rem(3)} rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05) 0 ${rem(10)} ${rem(\n      15\n    )} ${rem(-5)}, rgba(0, 0, 0, 0.04) 0 ${rem(7)} ${rem(7)} ${rem(-5)}`,\n    md: `0 ${rem(1)} ${rem(3)} rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05) 0 ${rem(20)} ${rem(\n      25\n    )} ${rem(-5)}, rgba(0, 0, 0, 0.04) 0 ${rem(10)} ${rem(10)} ${rem(-5)}`,\n    lg: `0 ${rem(1)} ${rem(3)} rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05) 0 ${rem(28)} ${rem(\n      23\n    )} ${rem(-7)}, rgba(0, 0, 0, 0.04) 0 ${rem(12)} ${rem(12)} ${rem(-7)}`,\n    xl: `0 ${rem(1)} ${rem(3)} rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05) 0 ${rem(36)} ${rem(\n      28\n    )} ${rem(-7)}, rgba(0, 0, 0, 0.04) 0 ${rem(17)} ${rem(17)} ${rem(-7)}`,\n  },\n\n  other: {},\n  components: {},\n};\n",null],"names":[],"mappings":"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"}},
    {"offset": {"line": 3553, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3558, "column": 0}, "map": {"version":3,"sources":["../../../../src/core/MantineProvider/merge-mantine-theme/merge-mantine-theme.ts","/turbopack/[project]/node_modules/@mantine/core/esm/core/MantineProvider/merge-mantine-theme/merge-mantine-theme.mjs"],"sourcesContent":["import { deepMerge } from '../../utils';\nimport type { MantineTheme, MantineThemeOverride } from '../theme.types';\n\nexport const INVALID_PRIMARY_COLOR_ERROR =\n  '[@mantine/core] MantineProvider: Invalid theme.primaryColor, it accepts only key of theme.colors, learn more – https://mantine.dev/theming/colors/#primary-color';\n\nexport const INVALID_PRIMARY_SHADE_ERROR =\n  '[@mantine/core] MantineProvider: Invalid theme.primaryShade, it accepts only 0-9 integers or an object { light: 0-9, dark: 0-9 }';\n\nfunction isValidPrimaryShade(shade: number) {\n  if (shade < 0 || shade > 9) {\n    return false;\n  }\n\n  return parseInt(shade.toString(), 10) === shade;\n}\n\nexport function validateMantineTheme(theme: MantineTheme): asserts theme is MantineTheme {\n  if (!(theme.primaryColor in theme.colors)) {\n    throw new Error(INVALID_PRIMARY_COLOR_ERROR);\n  }\n\n  if (typeof theme.primaryShade === 'object') {\n    if (\n      !isValidPrimaryShade(theme.primaryShade.dark) ||\n      !isValidPrimaryShade(theme.primaryShade.light)\n    ) {\n      throw new Error(INVALID_PRIMARY_SHADE_ERROR);\n    }\n  }\n\n  if (typeof theme.primaryShade === 'number' && !isValidPrimaryShade(theme.primaryShade)) {\n    throw new Error(INVALID_PRIMARY_SHADE_ERROR);\n  }\n}\n\nexport function mergeMantineTheme(\n  currentTheme: MantineTheme,\n  themeOverride?: MantineThemeOverride\n) {\n  if (!themeOverride) {\n    validateMantineTheme(currentTheme);\n    return currentTheme;\n  }\n\n  const result = deepMerge(currentTheme, themeOverride);\n\n  if (themeOverride.fontFamily && !themeOverride.headings?.fontFamily) {\n    result.headings.fontFamily = themeOverride.fontFamily;\n  }\n\n  validateMantineTheme(result);\n  return result;\n}\n",null],"names":[],"mappings":";;;;;;;;;;;;AAEY,MAAC,8BAA8B;AAC/B,MAAC,8BAA8B;AAC3C,SAAS,oBAAoB,KAAK;IAChC,IAAI,QAAQ,KAAK,QAAQ,GAAG;QAC1B,OAAO;IACX;IACE,OAAO,SAAS,MAAM,QAAQ,IAAI,QAAQ;AAC5C;AACO,SAAS,qBAAqB,KAAK;IACxC,IAAI,CAAA,CAAE,MAAM,YAAY,IAAI,MAAM,MAAM,GAAG;QACzC,MAAM,IAAI,MAAM;IACpB;IACE,IAAI,OAAO,MAAM,YAAY,KAAK,UAAU;QAC1C,IAAI,CAAC,oBAAoB,MAAM,YAAY,CAAC,IAAI,KAAK,CAAC,oBAAoB,MAAM,YAAY,CAAC,KAAK,GAAG;YACnG,MAAM,IAAI,MAAM;QACtB;IACA;IACE,IAAI,OAAO,MAAM,YAAY,KAAK,YAAY,CAAC,oBAAoB,MAAM,YAAY,GAAG;QACtF,MAAM,IAAI,MAAM;IACpB;AACA;AACO,SAAS,kBAAkB,YAAY,EAAE,aAAa;IAC3D,IAAI,CAAC,eAAe;QAClB,qBAAqB;QACrB,OAAO;IACX;IACE,MAAM,SAAS,0MAAU,cAAc;IACvC,IAAI,cAAc,UAAU,IAAI,CAAC,cAAc,QAAQ,EAAE,YAAY;QACnE,OAAO,QAAQ,CAAC,UAAU,GAAG,cAAc,UAAU;IACzD;IACE,qBAAqB;IACrB,OAAO;AACT"}},
    {"offset": {"line": 3605, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3610, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/MantineProvider/MantineProvider.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const HeadlessMantineProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call HeadlessMantineProvider() from the server but HeadlessMantineProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/MantineProvider/MantineProvider.mjs\",\n    \"HeadlessMantineProvider\",\n);\nexport const MantineProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call MantineProvider() from the server but MantineProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/MantineProvider/MantineProvider.mjs\",\n    \"MantineProvider\",\n);\n"],"names":[],"mappings":";;;;;;;AACO,MAAM,0BAA0B,2RACnC;IAAa,MAAM,IAAI,MAAM;AAA8P,GAC3R,qFACA;AAEG,MAAM,kBAAkB,2RAC3B;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,qFACA"}},
    {"offset": {"line": 3623, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3628, "column": 0}, "map": {"version":3,"sources":["../../../src/core/MantineProvider/MantineProvider.tsx"],"sourcesContent":["import './global.css';\n\nimport React from 'react';\nimport { localStorageColorSchemeManager, MantineColorSchemeManager } from './color-scheme-managers';\nimport { MantineContext } from './Mantine.context';\nimport { MantineClasses } from './MantineClasses';\nimport { CSSVariablesResolver, MantineCssVariables } from './MantineCssVariables';\nimport { MantineThemeProvider } from './MantineThemeProvider';\nimport { suppressNextjsWarning } from './suppress-nextjs-warning';\nimport type { MantineColorScheme, MantineThemeOverride } from './theme.types';\nimport { useProviderColorScheme } from './use-mantine-color-scheme';\nimport { useRespectReduceMotion } from './use-respect-reduce-motion';\n\nsuppressNextjsWarning();\n\nexport interface MantineProviderProps {\n  /** Theme override object */\n  theme?: MantineThemeOverride;\n\n  /** Used to retrieve/set color scheme value in external storage, by default uses `window.localStorage` */\n  colorSchemeManager?: MantineColorSchemeManager;\n\n  /** Default color scheme value used when `colorSchemeManager` cannot retrieve value from external storage, `light` by default */\n  defaultColorScheme?: MantineColorScheme;\n\n  /** Forces color scheme value, if set, MantineProvider ignores `colorSchemeManager` and `defaultColorScheme` */\n  forceColorScheme?: 'light' | 'dark';\n\n  /** CSS selector to which CSS variables should be added, `:root` by default */\n  cssVariablesSelector?: string;\n\n  /** Determines whether theme CSS variables should be added to given `cssVariablesSelector`, `true` by default */\n  withCssVariables?: boolean;\n\n  /** Determines whether CSS variables should be deduplicated: if CSS variable has the same value as in default theme, it is not added in the runtime. `true` by default. */\n  deduplicateCssVariables?: boolean;\n\n  /** Function to resolve root element to set `data-mantine-color-scheme` attribute, must return undefined on server, `() => document.documentElement` by default */\n  getRootElement?: () => HTMLElement | undefined;\n\n  /** A prefix for components static classes (for example {selector}-Text-root), `mantine` by default */\n  classNamesPrefix?: string;\n\n  /** Function to generate nonce attribute added to all generated `<style />` tags */\n  getStyleNonce?: () => string;\n\n  /** Function to generate CSS variables based on theme object */\n  cssVariablesResolver?: CSSVariablesResolver;\n\n  /** Determines whether components should have static classes, for example, `mantine-Button-root`. `true` by default */\n  withStaticClasses?: boolean;\n\n  /** Determines whether global classes should be added with `<style />` tag. Global classes are required for `hiddenFrom`/`visibleFrom` and `lightHidden`/`darkHidden` props to work. `true` by default. */\n  withGlobalClasses?: boolean;\n\n  /** Your application */\n  children?: React.ReactNode;\n}\n\nexport function MantineProvider({\n  theme,\n  children,\n  getStyleNonce,\n  withStaticClasses = true,\n  withGlobalClasses = true,\n  deduplicateCssVariables = true,\n  withCssVariables = true,\n  cssVariablesSelector = ':root',\n  classNamesPrefix = 'mantine',\n  colorSchemeManager = localStorageColorSchemeManager(),\n  defaultColorScheme = 'light',\n  getRootElement = () => document.documentElement,\n  cssVariablesResolver,\n  forceColorScheme,\n}: MantineProviderProps) {\n  const { colorScheme, setColorScheme, clearColorScheme } = useProviderColorScheme({\n    defaultColorScheme,\n    forceColorScheme,\n    manager: colorSchemeManager,\n    getRootElement,\n  });\n\n  useRespectReduceMotion({\n    respectReducedMotion: theme?.respectReducedMotion || false,\n    getRootElement,\n  });\n\n  return (\n    <MantineContext.Provider\n      value={{\n        colorScheme,\n        setColorScheme,\n        clearColorScheme,\n        getRootElement,\n        classNamesPrefix,\n        getStyleNonce,\n        cssVariablesResolver,\n        cssVariablesSelector,\n        withStaticClasses,\n      }}\n    >\n      <MantineThemeProvider theme={theme}>\n        {withCssVariables && (\n          <MantineCssVariables\n            cssVariablesSelector={cssVariablesSelector}\n            deduplicateCssVariables={deduplicateCssVariables}\n          />\n        )}\n        {withGlobalClasses && <MantineClasses />}\n        {children}\n      </MantineThemeProvider>\n    </MantineContext.Provider>\n  );\n}\n\nMantineProvider.displayName = '@mantine/core/MantineProvider';\n\nexport interface HeadlessMantineProviderProps {\n  /** Theme override object */\n  theme?: MantineThemeOverride;\n\n  /** Your application */\n  children?: React.ReactNode;\n}\n\nexport function HeadlessMantineProvider({ children, theme }: HeadlessMantineProviderProps) {\n  return (\n    <MantineContext.Provider\n      value={{\n        colorScheme: 'auto',\n        setColorScheme: () => {},\n        clearColorScheme: () => {},\n        getRootElement: () => document.documentElement,\n        classNamesPrefix: 'mantine',\n        cssVariablesSelector: ':root',\n        withStaticClasses: false,\n        headless: true,\n      }}\n    >\n      <MantineThemeProvider theme={theme}>{children}</MantineThemeProvider>\n    </MantineContext.Provider>\n  );\n}\n\nHeadlessMantineProvider.displayName = '@mantine/core/HeadlessMantineProvider';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 3633, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3638, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/MantineProvider/Mantine.context.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const MantineContext = registerClientReference(\n    function() { throw new Error(\"Attempted to call MantineContext() from the server but MantineContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/MantineProvider/Mantine.context.mjs\",\n    \"MantineContext\",\n);\nexport const useMantineClassNamesPrefix = registerClientReference(\n    function() { throw new Error(\"Attempted to call useMantineClassNamesPrefix() from the server but useMantineClassNamesPrefix is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/MantineProvider/Mantine.context.mjs\",\n    \"useMantineClassNamesPrefix\",\n);\nexport const useMantineContext = registerClientReference(\n    function() { throw new Error(\"Attempted to call useMantineContext() from the server but useMantineContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/MantineProvider/Mantine.context.mjs\",\n    \"useMantineContext\",\n);\nexport const useMantineCssVariablesResolver = registerClientReference(\n    function() { throw new Error(\"Attempted to call useMantineCssVariablesResolver() from the server but useMantineCssVariablesResolver is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/MantineProvider/Mantine.context.mjs\",\n    \"useMantineCssVariablesResolver\",\n);\nexport const useMantineIsHeadless = registerClientReference(\n    function() { throw new Error(\"Attempted to call useMantineIsHeadless() from the server but useMantineIsHeadless is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/MantineProvider/Mantine.context.mjs\",\n    \"useMantineIsHeadless\",\n);\nexport const useMantineStyleNonce = registerClientReference(\n    function() { throw new Error(\"Attempted to call useMantineStyleNonce() from the server but useMantineStyleNonce is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/MantineProvider/Mantine.context.mjs\",\n    \"useMantineStyleNonce\",\n);\nexport const useMantineWithStaticClasses = registerClientReference(\n    function() { throw new Error(\"Attempted to call useMantineWithStaticClasses() from the server but useMantineWithStaticClasses is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/MantineProvider/Mantine.context.mjs\",\n    \"useMantineWithStaticClasses\",\n);\n"],"names":[],"mappings":";;;;;;;;;;;;AACO,MAAM,iBAAiB,2RAC1B;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,qFACA;AAEG,MAAM,6BAA6B,2RACtC;IAAa,MAAM,IAAI,MAAM;AAAoQ,GACjS,qFACA;AAEG,MAAM,oBAAoB,2RAC7B;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,qFACA;AAEG,MAAM,iCAAiC,2RAC1C;IAAa,MAAM,IAAI,MAAM;AAA4Q,GACzS,qFACA;AAEG,MAAM,uBAAuB,2RAChC;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,qFACA;AAEG,MAAM,uBAAuB,2RAChC;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,qFACA;AAEG,MAAM,8BAA8B,2RACvC;IAAa,MAAM,IAAI,MAAM;AAAsQ,GACnS,qFACA"}},
    {"offset": {"line": 3671, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3676, "column": 0}, "map": {"version":3,"sources":["../../../src/core/MantineProvider/Mantine.context.ts"],"sourcesContent":["import { createContext, useContext } from 'react';\nimport { ConvertCSSVariablesInput } from './convert-css-variables';\nimport type { MantineColorScheme, MantineTheme } from './theme.types';\n\ninterface MantineContextValue {\n  colorScheme: MantineColorScheme;\n  setColorScheme: (colorScheme: MantineColorScheme) => void;\n  clearColorScheme: () => void;\n  getRootElement: () => HTMLElement | undefined;\n  classNamesPrefix: string;\n  getStyleNonce?: () => string | undefined;\n  cssVariablesResolver?: (theme: MantineTheme) => ConvertCSSVariablesInput;\n  cssVariablesSelector: string;\n  withStaticClasses: boolean;\n  headless?: boolean;\n}\n\nexport const MantineContext = createContext<MantineContextValue | null>(null);\n\nexport function useMantineContext() {\n  const ctx = useContext(MantineContext);\n\n  if (!ctx) {\n    throw new Error('[@mantine/core] MantineProvider was not found in tree');\n  }\n\n  return ctx;\n}\n\nexport function useMantineCssVariablesResolver() {\n  return useMantineContext().cssVariablesResolver;\n}\n\nexport function useMantineClassNamesPrefix() {\n  return useMantineContext().classNamesPrefix;\n}\n\nexport function useMantineStyleNonce() {\n  return useMantineContext().getStyleNonce;\n}\n\nexport function useMantineWithStaticClasses() {\n  return useMantineContext().withStaticClasses;\n}\n\nexport function useMantineIsHeadless() {\n  return useMantineContext().headless;\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 3681, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3686, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const MantineThemeContext = registerClientReference(\n    function() { throw new Error(\"Attempted to call MantineThemeContext() from the server but MantineThemeContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs\",\n    \"MantineThemeContext\",\n);\nexport const MantineThemeProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call MantineThemeProvider() from the server but MantineThemeProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs\",\n    \"MantineThemeProvider\",\n);\nexport const useMantineTheme = registerClientReference(\n    function() { throw new Error(\"Attempted to call useMantineTheme() from the server but useMantineTheme is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs\",\n    \"useMantineTheme\",\n);\nexport const useSafeMantineTheme = registerClientReference(\n    function() { throw new Error(\"Attempted to call useSafeMantineTheme() from the server but useSafeMantineTheme is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs\",\n    \"useSafeMantineTheme\",\n);\n"],"names":[],"mappings":";;;;;;;;;AACO,MAAM,sBAAsB,2RAC/B;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,+GACA;AAEG,MAAM,uBAAuB,2RAChC;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,+GACA;AAEG,MAAM,kBAAkB,2RAC3B;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,+GACA;AAEG,MAAM,sBAAsB,2RAC/B;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,+GACA"}},
    {"offset": {"line": 3707, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3712, "column": 0}, "map": {"version":3,"sources":["../../../../src/core/MantineProvider/MantineThemeProvider/MantineThemeProvider.tsx"],"sourcesContent":["import React, { createContext, useContext, useMemo } from 'react';\nimport { DEFAULT_THEME } from '../default-theme';\nimport { mergeMantineTheme } from '../merge-mantine-theme';\nimport { MantineTheme, MantineThemeOverride } from '../theme.types';\n\nexport const MantineThemeContext = createContext<MantineTheme | null>(null);\n\nexport const useSafeMantineTheme = () => useContext(MantineThemeContext) || DEFAULT_THEME;\n\nexport function useMantineTheme() {\n  const ctx = useContext(MantineThemeContext);\n  if (!ctx) {\n    throw new Error(\n      '@mantine/core: MantineProvider was not found in component tree, make sure you have it in your app'\n    );\n  }\n\n  return ctx;\n}\n\nexport interface MantineThemeProviderProps {\n  /** Determines whether theme should be inherited from parent MantineProvider, `true` by default */\n  inherit?: boolean;\n\n  /** Theme override object */\n  theme?: MantineThemeOverride;\n\n  /** Your application or part of the application that requires different theme */\n  children?: React.ReactNode;\n}\n\nexport function MantineThemeProvider({\n  theme,\n  children,\n  inherit = true,\n}: MantineThemeProviderProps) {\n  const parentTheme = useSafeMantineTheme();\n  const mergedTheme = useMemo(\n    () => mergeMantineTheme(inherit ? parentTheme : DEFAULT_THEME, theme),\n    [theme, parentTheme, inherit]\n  );\n\n  return (\n    <MantineThemeContext.Provider value={mergedTheme}>{children}</MantineThemeContext.Provider>\n  );\n}\n\nMantineThemeProvider.displayName = '@mantine/core/MantineThemeProvider';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 3717, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3722, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/MantineProvider/use-props/use-props.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const useProps = registerClientReference(\n    function() { throw new Error(\"Attempted to call useProps() from the server but useProps is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/MantineProvider/use-props/use-props.mjs\",\n    \"useProps\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,WAAW,2RACpB;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,yFACA"}},
    {"offset": {"line": 3731, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3736, "column": 0}, "map": {"version":3,"sources":["../../../../src/core/MantineProvider/use-props/use-props.ts"],"sourcesContent":["import { filterProps } from '../../utils';\nimport { useMantineTheme } from '../MantineThemeProvider';\n\nexport function useProps<T extends Record<string, any>, U extends Partial<T> = {}>(\n  component: string,\n  defaultProps: U,\n  props: T\n): T & {\n  [Key in Extract<keyof T, keyof U>]-?: U[Key] | NonNullable<T[Key]>;\n} {\n  const theme = useMantineTheme();\n  const contextPropsPayload = theme.components[component]?.defaultProps;\n  const contextProps =\n    typeof contextPropsPayload === 'function' ? contextPropsPayload(theme) : contextPropsPayload;\n\n  return { ...defaultProps, ...contextProps, ...filterProps(props) };\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 3741, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3746, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/MantineProvider/convert-css-variables/convert-css-variables.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const convertCssVariables = registerClientReference(\n    function() { throw new Error(\"Attempted to call convertCssVariables() from the server but convertCssVariables is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/MantineProvider/convert-css-variables/convert-css-variables.mjs\",\n    \"convertCssVariables\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,sBAAsB,2RAC/B;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,iHACA"}},
    {"offset": {"line": 3755, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3760, "column": 0}, "map": {"version":3,"sources":["../../../../src/core/MantineProvider/convert-css-variables/convert-css-variables.ts"],"sourcesContent":["import { CSSVariables, cssVariablesObjectToString } from './css-variables-object-to-string';\nimport { wrapWithSelector } from './wrap-with-selector';\n\nexport interface ConvertCSSVariablesInput {\n  /** Shared CSS variables that should be accessible independent from color scheme */\n  variables: CSSVariables;\n\n  /** CSS variables available only in dark color scheme */\n  dark: CSSVariables;\n\n  /** CSS variables available only in light color scheme */\n  light: CSSVariables;\n}\n\nexport function convertCssVariables(input: ConvertCSSVariablesInput, selector: string) {\n  const sharedVariables = cssVariablesObjectToString(input.variables);\n  const shared = sharedVariables ? wrapWithSelector(selector, sharedVariables) : '';\n\n  const dark = cssVariablesObjectToString(input.dark);\n  const darkForced = dark\n    ? wrapWithSelector(`${selector}[data-mantine-color-scheme=\"dark\"]`, dark)\n    : '';\n\n  const light = cssVariablesObjectToString(input.light);\n  const lightForced = light\n    ? wrapWithSelector(`${selector}[data-mantine-color-scheme=\"light\"]`, light)\n    : '';\n\n  return `${shared}${darkForced}${lightForced}`;\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 3765, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3770, "column": 0}, "map": {"version":3,"sources":["../../../../src/core/MantineProvider/create-theme/create-theme.ts","/turbopack/[project]/node_modules/@mantine/core/esm/core/MantineProvider/create-theme/create-theme.mjs"],"sourcesContent":["import { MantineThemeOverride } from '../theme.types';\n\nexport function createTheme(theme: MantineThemeOverride): MantineThemeOverride {\n  return theme;\n}\n",null],"names":[],"mappings":";;;AACO,SAAS,YAAY,KAAK;IAC/B,OAAO;AACT"}},
    {"offset": {"line": 3778, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3783, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/MantineProvider/merge-theme-overrides/merge-theme-overrides.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const mergeThemeOverrides = registerClientReference(\n    function() { throw new Error(\"Attempted to call mergeThemeOverrides() from the server but mergeThemeOverrides is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/MantineProvider/merge-theme-overrides/merge-theme-overrides.mjs\",\n    \"mergeThemeOverrides\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,sBAAsB,2RAC/B;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,iHACA"}},
    {"offset": {"line": 3792, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3797, "column": 0}, "map": {"version":3,"sources":["../../../../src/core/MantineProvider/merge-theme-overrides/merge-theme-overrides.ts"],"sourcesContent":["import { deepMerge } from '../../utils';\nimport { MantineThemeOverride } from '../theme.types';\n\nexport function mergeThemeOverrides(...overrides: MantineThemeOverride[]): MantineThemeOverride {\n  return overrides.reduce((acc, override) => deepMerge(acc, override), {});\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 3802, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3807, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/MantineProvider/MantineCssVariables/default-css-variables-resolver.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const defaultCssVariablesResolver = registerClientReference(\n    function() { throw new Error(\"Attempted to call defaultCssVariablesResolver() from the server but defaultCssVariablesResolver is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/MantineProvider/MantineCssVariables/default-css-variables-resolver.mjs\",\n    \"defaultCssVariablesResolver\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,8BAA8B,2RACvC;IAAa,MAAM,IAAI,MAAM;AAAsQ,GACnS,wHACA"}},
    {"offset": {"line": 3816, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3821, "column": 0}, "map": {"version":3,"sources":["../../../../src/core/MantineProvider/MantineCssVariables/default-css-variables-resolver.ts"],"sourcesContent":["/* eslint-disable prefer-destructuring */\nimport { keys, rem } from '../../utils';\nimport { getPrimaryContrastColor, getPrimaryShade } from '../color-functions';\nimport { ConvertCSSVariablesInput } from '../convert-css-variables';\nimport { MantineTheme } from '../theme.types';\nimport { getCSSColorVariables } from './get-css-color-variables';\nimport { isVirtualColor } from './virtual-color/virtual-color';\n\nexport type CSSVariablesResolver = (theme: MantineTheme) => ConvertCSSVariablesInput;\n\nfunction assignSizeVariables(\n  variables: Record<string, string>,\n  sizes: Record<string, string>,\n  name: string\n) {\n  keys(sizes).forEach((size) =>\n    Object.assign(variables, { [`--mantine-${name}-${size}`]: sizes[size] })\n  );\n}\n\nexport const defaultCssVariablesResolver: CSSVariablesResolver = (theme) => {\n  const lightPrimaryShade = getPrimaryShade(theme, 'light');\n  const defaultRadius =\n    theme.defaultRadius in theme.radius\n      ? theme.radius[theme.defaultRadius as 'xs']\n      : rem(theme.defaultRadius);\n\n  const result: ConvertCSSVariablesInput = {\n    variables: {\n      '--mantine-scale': theme.scale.toString(),\n      '--mantine-cursor-type': theme.cursorType,\n      '--mantine-color-scheme': 'light dark',\n      '--mantine-webkit-font-smoothing': theme.fontSmoothing ? 'antialiased' : 'unset',\n      '--mantine-moz-font-smoothing': theme.fontSmoothing ? 'grayscale' : 'unset',\n      '--mantine-color-white': theme.white,\n      '--mantine-color-black': theme.black,\n      '--mantine-line-height': theme.lineHeights.md,\n      '--mantine-font-family': theme.fontFamily,\n      '--mantine-font-family-monospace': theme.fontFamilyMonospace,\n      '--mantine-font-family-headings': theme.headings.fontFamily,\n      '--mantine-heading-font-weight': theme.headings.fontWeight,\n      '--mantine-heading-text-wrap': theme.headings.textWrap,\n      '--mantine-radius-default': defaultRadius,\n\n      // Primary colors\n      '--mantine-primary-color-filled': `var(--mantine-color-${theme.primaryColor}-filled)`,\n      '--mantine-primary-color-filled-hover': `var(--mantine-color-${theme.primaryColor}-filled-hover)`,\n      '--mantine-primary-color-light': `var(--mantine-color-${theme.primaryColor}-light)`,\n      '--mantine-primary-color-light-hover': `var(--mantine-color-${theme.primaryColor}-light-hover)`,\n      '--mantine-primary-color-light-color': `var(--mantine-color-${theme.primaryColor}-light-color)`,\n    },\n    light: {\n      '--mantine-primary-color-contrast': getPrimaryContrastColor(theme, 'light'),\n      '--mantine-color-bright': 'var(--mantine-color-black)',\n      '--mantine-color-text': theme.black,\n      '--mantine-color-body': theme.white,\n      '--mantine-color-error': 'var(--mantine-color-red-6)',\n      '--mantine-color-placeholder': 'var(--mantine-color-gray-5)',\n      '--mantine-color-anchor': `var(--mantine-color-${theme.primaryColor}-${lightPrimaryShade})`,\n      '--mantine-color-default': 'var(--mantine-color-white)',\n      '--mantine-color-default-hover': 'var(--mantine-color-gray-0)',\n      '--mantine-color-default-color': 'var(--mantine-color-black)',\n      '--mantine-color-default-border': 'var(--mantine-color-gray-4)',\n      '--mantine-color-dimmed': 'var(--mantine-color-gray-6)',\n    },\n    dark: {\n      '--mantine-primary-color-contrast': getPrimaryContrastColor(theme, 'dark'),\n      '--mantine-color-bright': 'var(--mantine-color-white)',\n      '--mantine-color-text': 'var(--mantine-color-dark-0)',\n      '--mantine-color-body': 'var(--mantine-color-dark-7)',\n      '--mantine-color-error': 'var(--mantine-color-red-8)',\n      '--mantine-color-placeholder': 'var(--mantine-color-dark-3)',\n      '--mantine-color-anchor': `var(--mantine-color-${theme.primaryColor}-4)`,\n      '--mantine-color-default': 'var(--mantine-color-dark-6)',\n      '--mantine-color-default-hover': 'var(--mantine-color-dark-5)',\n      '--mantine-color-default-color': 'var(--mantine-color-white)',\n      '--mantine-color-default-border': 'var(--mantine-color-dark-4)',\n      '--mantine-color-dimmed': 'var(--mantine-color-dark-2)',\n    },\n  };\n\n  assignSizeVariables(result.variables, theme.breakpoints, 'breakpoint');\n  assignSizeVariables(result.variables, theme.spacing, 'spacing');\n  assignSizeVariables(result.variables, theme.fontSizes, 'font-size');\n  assignSizeVariables(result.variables, theme.lineHeights, 'line-height');\n  assignSizeVariables(result.variables, theme.shadows, 'shadow');\n  assignSizeVariables(result.variables, theme.radius, 'radius');\n\n  theme.colors[theme.primaryColor].forEach((_, index) => {\n    result.variables[`--mantine-primary-color-${index}`] =\n      `var(--mantine-color-${theme.primaryColor}-${index})`;\n  });\n\n  keys(theme.colors).forEach((color) => {\n    const value = theme.colors[color];\n\n    if (isVirtualColor(value)) {\n      Object.assign(\n        result.light,\n        getCSSColorVariables({\n          theme,\n          name: value.name,\n          color: value.light,\n          colorScheme: 'light',\n          withColorValues: true,\n        })\n      );\n\n      Object.assign(\n        result.dark,\n        getCSSColorVariables({\n          theme,\n          name: value.name,\n          color: value.dark,\n          colorScheme: 'dark',\n          withColorValues: true,\n        })\n      );\n\n      return;\n    }\n\n    value.forEach((shade, index) => {\n      result.variables[`--mantine-color-${color}-${index}`] = shade;\n    });\n\n    Object.assign(\n      result.light,\n      getCSSColorVariables({\n        theme,\n        color,\n        colorScheme: 'light',\n        withColorValues: false,\n      })\n    );\n\n    Object.assign(\n      result.dark,\n      getCSSColorVariables({\n        theme,\n        color,\n        colorScheme: 'dark',\n        withColorValues: false,\n      })\n    );\n  });\n\n  const headings = theme.headings.sizes;\n\n  keys(headings).forEach((heading) => {\n    result.variables[`--mantine-${heading}-font-size`] = headings[heading].fontSize;\n    result.variables[`--mantine-${heading}-line-height`] = headings[heading].lineHeight;\n    result.variables[`--mantine-${heading}-font-weight`] =\n      headings[heading].fontWeight || theme.headings.fontWeight;\n  });\n\n  return result;\n};\n"],"names":[],"mappings":""}},
    {"offset": {"line": 3826, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3831, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const MantineCssVariables = registerClientReference(\n    function() { throw new Error(\"Attempted to call MantineCssVariables() from the server but MantineCssVariables is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs\",\n    \"MantineCssVariables\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,sBAAsB,2RAC/B;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,6GACA"}},
    {"offset": {"line": 3840, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3845, "column": 0}, "map": {"version":3,"sources":["../../../../src/core/MantineProvider/MantineCssVariables/MantineCssVariables.tsx"],"sourcesContent":["import React from 'react';\nimport { convertCssVariables } from '../convert-css-variables/convert-css-variables';\nimport { useMantineCssVariablesResolver, useMantineStyleNonce } from '../Mantine.context';\nimport { useMantineTheme } from '../MantineThemeProvider';\nimport { getMergedVariables } from './get-merged-variables';\nimport { removeDefaultVariables } from './remove-default-variables';\n\ninterface MantineCssVariablesProps {\n  cssVariablesSelector: string;\n  deduplicateCssVariables: boolean;\n}\n\nfunction getColorSchemeCssVariables(selector: string) {\n  return `\n  ${selector}[data-mantine-color-scheme=\"dark\"] { --mantine-color-scheme: dark; }\n  ${selector}[data-mantine-color-scheme=\"light\"] { --mantine-color-scheme: light; }\n`;\n}\n\nexport function MantineCssVariables({\n  cssVariablesSelector,\n  deduplicateCssVariables,\n}: MantineCssVariablesProps) {\n  const theme = useMantineTheme();\n  const nonce = useMantineStyleNonce();\n  const generator = useMantineCssVariablesResolver();\n  const mergedVariables = getMergedVariables({ theme, generator });\n  const shouldCleanVariables = cssVariablesSelector === ':root' && deduplicateCssVariables;\n  const cleanedVariables = shouldCleanVariables\n    ? removeDefaultVariables(mergedVariables)\n    : mergedVariables;\n  const css = convertCssVariables(cleanedVariables, cssVariablesSelector);\n\n  if (css) {\n    return (\n      <style\n        data-mantine-styles\n        nonce={nonce?.()}\n        dangerouslySetInnerHTML={{\n          __html: `${css}${\n            shouldCleanVariables ? '' : getColorSchemeCssVariables(cssVariablesSelector)\n          }`,\n        }}\n      />\n    );\n  }\n\n  return null;\n}\n\nMantineCssVariables.displayName = '@mantine/CssVariables';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 3850, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3855, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/MantineProvider/MantineCssVariables/get-css-color-variables.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const getCSSColorVariables = registerClientReference(\n    function() { throw new Error(\"Attempted to call getCSSColorVariables() from the server but getCSSColorVariables is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/MantineProvider/MantineCssVariables/get-css-color-variables.mjs\",\n    \"getCSSColorVariables\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,uBAAuB,2RAChC;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,iHACA"}},
    {"offset": {"line": 3864, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3869, "column": 0}, "map": {"version":3,"sources":["../../../../src/core/MantineProvider/MantineCssVariables/get-css-color-variables.ts"],"sourcesContent":["import { alpha, getPrimaryShade } from '../color-functions';\nimport { MantineColor, MantineTheme } from '../theme.types';\n\ninterface GetColorVariablesInput {\n  theme: MantineTheme;\n  color: MantineColor;\n  colorScheme: 'light' | 'dark';\n  name?: string;\n  withColorValues?: boolean;\n}\n\nexport function getCSSColorVariables({\n  theme,\n  color,\n  colorScheme,\n  name = color,\n  withColorValues = true,\n}: GetColorVariablesInput) {\n  if (!theme.colors[color]) {\n    return {};\n  }\n\n  if (colorScheme === 'light') {\n    const primaryShade = getPrimaryShade(theme, 'light');\n\n    const dynamicVariables = {\n      [`--mantine-color-${name}-text`]: `var(--mantine-color-${name}-filled)`,\n      [`--mantine-color-${name}-filled`]: `var(--mantine-color-${name}-${primaryShade})`,\n      [`--mantine-color-${name}-filled-hover`]: `var(--mantine-color-${name}-${\n        primaryShade === 9 ? 8 : primaryShade + 1\n      })`,\n      [`--mantine-color-${name}-light`]: alpha(theme.colors[color][primaryShade], 0.1),\n      [`--mantine-color-${name}-light-hover`]: alpha(theme.colors[color][primaryShade], 0.12),\n      [`--mantine-color-${name}-light-color`]: `var(--mantine-color-${name}-${primaryShade})`,\n      [`--mantine-color-${name}-outline`]: `var(--mantine-color-${name}-${primaryShade})`,\n      [`--mantine-color-${name}-outline-hover`]: alpha(theme.colors[color][primaryShade], 0.05),\n    };\n\n    if (!withColorValues) {\n      return dynamicVariables;\n    }\n\n    return {\n      [`--mantine-color-${name}-0`]: theme.colors[color][0],\n      [`--mantine-color-${name}-1`]: theme.colors[color][1],\n      [`--mantine-color-${name}-2`]: theme.colors[color][2],\n      [`--mantine-color-${name}-3`]: theme.colors[color][3],\n      [`--mantine-color-${name}-4`]: theme.colors[color][4],\n      [`--mantine-color-${name}-5`]: theme.colors[color][5],\n      [`--mantine-color-${name}-6`]: theme.colors[color][6],\n      [`--mantine-color-${name}-7`]: theme.colors[color][7],\n      [`--mantine-color-${name}-8`]: theme.colors[color][8],\n      [`--mantine-color-${name}-9`]: theme.colors[color][9],\n      ...dynamicVariables,\n    };\n  }\n\n  const primaryShade = getPrimaryShade(theme, 'dark');\n  const dynamicVariables = {\n    [`--mantine-color-${name}-text`]: `var(--mantine-color-${name}-4)`,\n    [`--mantine-color-${name}-filled`]: `var(--mantine-color-${name}-${primaryShade})`,\n    [`--mantine-color-${name}-filled-hover`]: `var(--mantine-color-${name}-${\n      primaryShade === 9 ? 8 : primaryShade + 1\n    })`,\n    [`--mantine-color-${name}-light`]: alpha(\n      theme.colors[color][Math.max(0, primaryShade - 2)],\n      0.15\n    ),\n    [`--mantine-color-${name}-light-hover`]: alpha(\n      theme.colors[color][Math.max(0, primaryShade - 2)],\n      0.2\n    ),\n    [`--mantine-color-${name}-light-color`]: `var(--mantine-color-${name}-${Math.max(primaryShade - 5, 0)})`,\n    [`--mantine-color-${name}-outline`]: `var(--mantine-color-${name}-${Math.max(primaryShade - 4, 0)})`,\n    [`--mantine-color-${name}-outline-hover`]: alpha(\n      theme.colors[color][Math.max(primaryShade - 4, 0)],\n      0.05\n    ),\n  };\n\n  if (!withColorValues) {\n    return dynamicVariables;\n  }\n\n  return {\n    [`--mantine-color-${name}-0`]: theme.colors[color][0],\n    [`--mantine-color-${name}-1`]: theme.colors[color][1],\n    [`--mantine-color-${name}-2`]: theme.colors[color][2],\n    [`--mantine-color-${name}-3`]: theme.colors[color][3],\n    [`--mantine-color-${name}-4`]: theme.colors[color][4],\n    [`--mantine-color-${name}-5`]: theme.colors[color][5],\n    [`--mantine-color-${name}-6`]: theme.colors[color][6],\n    [`--mantine-color-${name}-7`]: theme.colors[color][7],\n    [`--mantine-color-${name}-8`]: theme.colors[color][8],\n    [`--mantine-color-${name}-9`]: theme.colors[color][9],\n    ...dynamicVariables,\n  };\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 3874, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3879, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/MantineProvider/MantineCssVariables/virtual-color/virtual-color.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const isVirtualColor = registerClientReference(\n    function() { throw new Error(\"Attempted to call isVirtualColor() from the server but isVirtualColor is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/MantineProvider/MantineCssVariables/virtual-color/virtual-color.mjs\",\n    \"isVirtualColor\",\n);\nexport const virtualColor = registerClientReference(\n    function() { throw new Error(\"Attempted to call virtualColor() from the server but virtualColor is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/MantineProvider/MantineCssVariables/virtual-color/virtual-color.mjs\",\n    \"virtualColor\",\n);\n"],"names":[],"mappings":";;;;;;;AACO,MAAM,iBAAiB,2RAC1B;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,qHACA;AAEG,MAAM,eAAe,2RACxB;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,qHACA"}},
    {"offset": {"line": 3892, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3897, "column": 0}, "map": {"version":3,"sources":["../../../../../src/core/MantineProvider/MantineCssVariables/virtual-color/virtual-color.ts"],"sourcesContent":["import { colorsTuple } from '../../color-functions';\nimport { MantineColor, MantineColorsTuple } from '../../theme.types';\n\ninterface VirtualColorInput {\n  dark: MantineColor;\n  light: MantineColor;\n  name: string;\n}\n\ntype VirtualColor = MantineColorsTuple & {\n  'mantine-virtual-color': true;\n  name: string;\n  dark: MantineColor;\n  light: MantineColor;\n};\n\nexport function virtualColor(input: VirtualColorInput): MantineColorsTuple {\n  const result = colorsTuple(\n    Array.from({ length: 10 }).map((_, i) => `var(--mantine-color-${input.name}-${i})`)\n  );\n\n  Object.defineProperty(result, 'mantine-virtual-color', {\n    enumerable: false,\n    writable: false,\n    configurable: false,\n    value: true,\n  });\n\n  Object.defineProperty(result, 'dark', {\n    enumerable: false,\n    writable: false,\n    configurable: false,\n    value: input.dark,\n  });\n\n  Object.defineProperty(result, 'light', {\n    enumerable: false,\n    writable: false,\n    configurable: false,\n    value: input.light,\n  });\n\n  Object.defineProperty(result, 'name', {\n    enumerable: false,\n    writable: false,\n    configurable: false,\n    value: input.name,\n  });\n\n  return result;\n}\n\nexport function isVirtualColor(value: unknown): value is VirtualColor {\n  return !!value && typeof value === 'object' && 'mantine-virtual-color' in value;\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 3902, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3907, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/InlineStyles/InlineStyles.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const InlineStyles = registerClientReference(\n    function() { throw new Error(\"Attempted to call InlineStyles() from the server but InlineStyles is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/InlineStyles/InlineStyles.mjs\",\n    \"InlineStyles\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,eAAe,2RACxB;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,+EACA"}},
    {"offset": {"line": 3916, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3921, "column": 0}, "map": {"version":3,"sources":["../../../src/core/InlineStyles/InlineStyles.tsx"],"sourcesContent":["import React from 'react';\nimport { useMantineStyleNonce } from '../MantineProvider';\nimport { InlineStylesInput, stylesToString } from './styles-to-string/styles-to-string';\n\nexport interface InlineStylesProps\n  extends InlineStylesInput,\n    Omit<React.ComponentPropsWithoutRef<'style'>, keyof InlineStylesInput> {}\n\nexport function InlineStyles({ selector, styles, media }: InlineStylesInput) {\n  const nonce = useMantineStyleNonce();\n  return (\n    <style\n      data-mantine-styles=\"inline\"\n      nonce={nonce?.()}\n      dangerouslySetInnerHTML={{ __html: stylesToString({ selector, styles, media }) }}\n    />\n  );\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 3926, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3931, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/InlineStyles/styles-to-string/styles-to-string.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const stylesToString = registerClientReference(\n    function() { throw new Error(\"Attempted to call stylesToString() from the server but stylesToString is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/InlineStyles/styles-to-string/styles-to-string.mjs\",\n    \"stylesToString\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,iBAAiB,2RAC1B;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,oGACA"}},
    {"offset": {"line": 3940, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3945, "column": 0}, "map": {"version":3,"sources":["../../../../src/core/InlineStyles/styles-to-string/styles-to-string.ts"],"sourcesContent":["import { cssObjectToString } from '../css-object-to-string/css-object-to-string';\n\nexport interface InlineStylesMediaQuery {\n  query: string;\n  styles: React.CSSProperties;\n}\n\nexport interface InlineStylesInput {\n  selector: string;\n  styles?: React.CSSProperties;\n  media?: InlineStylesMediaQuery[];\n}\n\nexport function stylesToString({ selector, styles, media }: InlineStylesInput) {\n  const baseStyles = styles ? cssObjectToString(styles) : '';\n  const mediaQueryStyles = !Array.isArray(media)\n    ? []\n    : media.map((item) => `@media${item.query}{${selector}{${cssObjectToString(item.styles)}}}`);\n\n  return `${baseStyles ? `${selector}{${baseStyles}}` : ''}${mediaQueryStyles.join('')}`.trim();\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 3950, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3955, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/Box/style-props/extract-style-props/extract-style-props.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const extractStyleProps = registerClientReference(\n    function() { throw new Error(\"Attempted to call extractStyleProps() from the server but extractStyleProps is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/Box/style-props/extract-style-props/extract-style-props.mjs\",\n    \"extractStyleProps\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,oBAAoB,2RAC7B;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,6GACA"}},
    {"offset": {"line": 3964, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3969, "column": 0}, "map": {"version":3,"sources":["../../../../../src/core/Box/style-props/extract-style-props/extract-style-props.ts"],"sourcesContent":["import { filterProps } from '../../../utils';\nimport type { MantineStyleProps } from '../style-props.types';\n\nexport function extractStyleProps<T extends Record<string, any>>(\n  others: MantineStyleProps & T\n): { styleProps: MantineStyleProps; rest: T } {\n  const {\n    m,\n    mx,\n    my,\n    mt,\n    mb,\n    ml,\n    mr,\n    me,\n    ms,\n    p,\n    px,\n    py,\n    pt,\n    pb,\n    pl,\n    pr,\n    pe,\n    ps,\n    bg,\n    c,\n    opacity,\n    ff,\n    fz,\n    fw,\n    lts,\n    ta,\n    lh,\n    fs,\n    tt,\n    td,\n    w,\n    miw,\n    maw,\n    h,\n    mih,\n    mah,\n    bgsz,\n    bgp,\n    bgr,\n    bga,\n    pos,\n    top,\n    left,\n    bottom,\n    right,\n    inset,\n    display,\n    flex,\n    hiddenFrom,\n    visibleFrom,\n    lightHidden,\n    darkHidden,\n    ...rest\n  } = others;\n\n  const styleProps = filterProps({\n    m,\n    mx,\n    my,\n    mt,\n    mb,\n    ml,\n    mr,\n    me,\n    ms,\n    p,\n    px,\n    py,\n    pt,\n    pb,\n    pl,\n    pr,\n    pe,\n    ps,\n    bg,\n    c,\n    opacity,\n    ff,\n    fz,\n    fw,\n    lts,\n    ta,\n    lh,\n    fs,\n    tt,\n    td,\n    w,\n    miw,\n    maw,\n    h,\n    mih,\n    mah,\n    bgsz,\n    bgp,\n    bgr,\n    bga,\n    pos,\n    top,\n    left,\n    bottom,\n    right,\n    inset,\n    display,\n    flex,\n    hiddenFrom,\n    visibleFrom,\n    lightHidden,\n    darkHidden,\n  });\n\n  return { styleProps, rest: rest as unknown as T };\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 3974, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3979, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/Box/style-props/style-props-data.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const STYlE_PROPS_DATA = registerClientReference(\n    function() { throw new Error(\"Attempted to call STYlE_PROPS_DATA() from the server but STYlE_PROPS_DATA is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/Box/style-props/style-props-data.mjs\",\n    \"STYlE_PROPS_DATA\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,mBAAmB,2RAC5B;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,sFACA"}},
    {"offset": {"line": 3988, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3993, "column": 0}, "map": {"version":3,"sources":["../../../../src/core/Box/style-props/style-props-data.ts"],"sourcesContent":["import type { StylePropType } from './resolvers';\nimport type { MantineStyleProps } from './style-props.types';\n\nexport interface SystemPropData {\n  type: StylePropType;\n  property: string | string[];\n}\n\nexport const STYlE_PROPS_DATA: Record<keyof MantineStyleProps, SystemPropData> = {\n  m: { type: 'spacing', property: 'margin' },\n  mt: { type: 'spacing', property: 'marginTop' },\n  mb: { type: 'spacing', property: 'marginBottom' },\n  ml: { type: 'spacing', property: 'marginLeft' },\n  mr: { type: 'spacing', property: 'marginRight' },\n  ms: { type: 'spacing', property: 'marginInlineStart' },\n  me: { type: 'spacing', property: 'marginInlineEnd' },\n  mx: { type: 'spacing', property: 'marginInline' },\n  my: { type: 'spacing', property: 'marginBlock' },\n\n  p: { type: 'spacing', property: 'padding' },\n  pt: { type: 'spacing', property: 'paddingTop' },\n  pb: { type: 'spacing', property: 'paddingBottom' },\n  pl: { type: 'spacing', property: 'paddingLeft' },\n  pr: { type: 'spacing', property: 'paddingRight' },\n  ps: { type: 'spacing', property: 'paddingInlineStart' },\n  pe: { type: 'spacing', property: 'paddingInlineEnd' },\n  px: { type: 'spacing', property: 'paddingInline' },\n  py: { type: 'spacing', property: 'paddingBlock' },\n\n  bg: { type: 'color', property: 'background' },\n  c: { type: 'textColor', property: 'color' },\n  opacity: { type: 'identity', property: 'opacity' },\n\n  ff: { type: 'fontFamily', property: 'fontFamily' },\n  fz: { type: 'fontSize', property: 'fontSize' },\n  fw: { type: 'identity', property: 'fontWeight' },\n  lts: { type: 'size', property: 'letterSpacing' },\n  ta: { type: 'identity', property: 'textAlign' },\n  lh: { type: 'lineHeight', property: 'lineHeight' },\n  fs: { type: 'identity', property: 'fontStyle' },\n  tt: { type: 'identity', property: 'textTransform' },\n  td: { type: 'identity', property: 'textDecoration' },\n\n  w: { type: 'spacing', property: 'width' },\n  miw: { type: 'spacing', property: 'minWidth' },\n  maw: { type: 'spacing', property: 'maxWidth' },\n  h: { type: 'spacing', property: 'height' },\n  mih: { type: 'spacing', property: 'minHeight' },\n  mah: { type: 'spacing', property: 'maxHeight' },\n\n  bgsz: { type: 'size', property: 'backgroundSize' },\n  bgp: { type: 'identity', property: 'backgroundPosition' },\n  bgr: { type: 'identity', property: 'backgroundRepeat' },\n  bga: { type: 'identity', property: 'backgroundAttachment' },\n\n  pos: { type: 'identity', property: 'position' },\n  top: { type: 'identity', property: 'top' },\n  left: { type: 'size', property: 'left' },\n  bottom: { type: 'size', property: 'bottom' },\n  right: { type: 'size', property: 'right' },\n  inset: { type: 'size', property: 'inset' },\n\n  display: { type: 'identity', property: 'display' },\n  flex: { type: 'identity', property: 'flex' },\n};\n"],"names":[],"mappings":""}},
    {"offset": {"line": 3998, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4003, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/Box/style-props/parse-style-props/parse-style-props.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const parseStyleProps = registerClientReference(\n    function() { throw new Error(\"Attempted to call parseStyleProps() from the server but parseStyleProps is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/Box/style-props/parse-style-props/parse-style-props.mjs\",\n    \"parseStyleProps\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,kBAAkB,2RAC3B;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,yGACA"}},
    {"offset": {"line": 4012, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4017, "column": 0}, "map": {"version":3,"sources":["../../../../../src/core/Box/style-props/parse-style-props/parse-style-props.ts"],"sourcesContent":["import { MantineTheme } from '../../../MantineProvider';\nimport { keys } from '../../../utils';\nimport { resolvers } from '../resolvers';\nimport type { SystemPropData } from '../style-props-data';\nimport type { StyleProp } from '../style-props.types';\nimport type { SortMediaQueriesResult } from './sort-media-queries';\nimport { sortMediaQueries } from './sort-media-queries';\n\nfunction hasResponsiveStyles(styleProp: StyleProp<unknown>) {\n  if (typeof styleProp !== 'object' || styleProp === null) {\n    return false;\n  }\n\n  const breakpoints = Object.keys(styleProp);\n\n  if (breakpoints.length === 1 && breakpoints[0] === 'base') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction getBaseValue(value: StyleProp<unknown>) {\n  if (typeof value === 'object' && value !== null) {\n    if ('base' in value) {\n      return value.base;\n    }\n\n    return undefined;\n  }\n\n  return value;\n}\n\nfunction getBreakpointKeys(value: StyleProp<unknown>) {\n  if (typeof value === 'object' && value !== null) {\n    return keys(value).filter((key) => key !== 'base');\n  }\n\n  return [];\n}\n\nfunction getBreakpointValue(value: StyleProp<unknown>, breakpoint: string) {\n  if (typeof value === 'object' && value !== null && breakpoint in value) {\n    return value[breakpoint as keyof typeof value];\n  }\n\n  return value;\n}\n\ninterface ParseStylePropsOptions {\n  styleProps: Record<string, StyleProp<any>>;\n  theme: MantineTheme;\n  data: Record<string, SystemPropData>;\n}\n\nexport interface ParseStylePropsResult {\n  hasResponsiveStyles: boolean;\n  inlineStyles: React.CSSProperties;\n  styles: React.CSSProperties;\n  media: Record<string, React.CSSProperties>;\n}\n\nexport function parseStyleProps({\n  styleProps,\n  data,\n  theme,\n}: ParseStylePropsOptions): SortMediaQueriesResult {\n  return sortMediaQueries(\n    keys(styleProps).reduce<{\n      hasResponsiveStyles: boolean;\n      inlineStyles: Record<string, unknown>;\n      styles: Record<string, unknown>;\n      media: Record<string, Record<string, unknown>>;\n    }>(\n      (acc, styleProp) => {\n        if ((styleProp as string) === 'hiddenFrom' || (styleProp as string) === 'visibleFrom') {\n          return acc;\n        }\n\n        const propertyData = data[styleProp];\n        const properties = Array.isArray(propertyData.property)\n          ? propertyData.property\n          : [propertyData.property];\n        const baseValue = getBaseValue(styleProps[styleProp]);\n\n        if (!hasResponsiveStyles(styleProps[styleProp])) {\n          properties.forEach((property) => {\n            acc.inlineStyles[property] = resolvers[propertyData.type](baseValue, theme);\n          });\n\n          return acc;\n        }\n\n        acc.hasResponsiveStyles = true;\n\n        const breakpoints = getBreakpointKeys(styleProps[styleProp]);\n\n        properties.forEach((property) => {\n          if (baseValue) {\n            acc.styles[property] = resolvers[propertyData.type](baseValue, theme);\n          }\n\n          breakpoints.forEach((breakpoint) => {\n            const bp = `(min-width: ${theme.breakpoints[breakpoint]})`;\n            acc.media[bp] = {\n              ...acc.media[bp],\n              [property]: resolvers[propertyData.type](\n                getBreakpointValue(styleProps[styleProp], breakpoint),\n                theme\n              ),\n            };\n          });\n        });\n\n        return acc;\n      },\n      {\n        hasResponsiveStyles: false,\n        styles: {},\n        inlineStyles: {},\n        media: {},\n      }\n    )\n  );\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 4022, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4027, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/Box/use-random-classname/use-random-classname.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const useRandomClassName = registerClientReference(\n    function() { throw new Error(\"Attempted to call useRandomClassName() from the server but useRandomClassName is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/Box/use-random-classname/use-random-classname.mjs\",\n    \"useRandomClassName\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,qBAAqB,2RAC9B;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,mGACA"}},
    {"offset": {"line": 4036, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4041, "column": 0}, "map": {"version":3,"sources":["../../../../src/core/Box/use-random-classname/use-random-classname.ts"],"sourcesContent":["import { useId } from 'react';\n\nexport function useRandomClassName() {\n  const id = useId().replace(/:/g, '');\n  return `__m__-${id}`;\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 4046, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4051, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/Box/get-style-object/get-style-object.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const getStyleObject = registerClientReference(\n    function() { throw new Error(\"Attempted to call getStyleObject() from the server but getStyleObject is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/Box/get-style-object/get-style-object.mjs\",\n    \"getStyleObject\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,iBAAiB,2RAC1B;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,2FACA"}},
    {"offset": {"line": 4060, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4065, "column": 0}, "map": {"version":3,"sources":["../../../../src/core/Box/get-style-object/get-style-object.ts"],"sourcesContent":["import type { MantineTheme } from '../../MantineProvider';\nimport type { MantineStyleProp } from '../Box.types';\n\nexport function getStyleObject(\n  style: MantineStyleProp | undefined,\n  theme: MantineTheme\n): React.CSSProperties {\n  if (Array.isArray(style)) {\n    return [...style].reduce<Record<string, any>>(\n      (acc, item) => ({ ...acc, ...getStyleObject(item, theme) }),\n      {}\n    );\n  }\n\n  if (typeof style === 'function') {\n    return style(theme);\n  }\n\n  if (style == null) {\n    return {};\n  }\n\n  return style;\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 4070, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4075, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/Box/Box.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Box = registerClientReference(\n    function() { throw new Error(\"Attempted to call Box() from the server but Box is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/Box/Box.mjs\",\n    \"Box\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,MAAM,2RACf;IAAa,MAAM,IAAI,MAAM;AAAsN,GACnP,6DACA"}},
    {"offset": {"line": 4084, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4089, "column": 0}, "map": {"version":3,"sources":["../../../src/core/Box/Box.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport cx from 'clsx';\nimport { createPolymorphicComponent } from '../factory';\nimport { InlineStyles } from '../InlineStyles';\nimport { MantineBreakpoint, useMantineTheme } from '../MantineProvider';\nimport { isNumberLike } from '../utils';\nimport type { CssVarsProp, MantineStyleProp } from './Box.types';\nimport { getBoxMod } from './get-box-mod/get-box-mod';\nimport { getBoxStyle } from './get-box-style/get-box-style';\nimport {\n  extractStyleProps,\n  MantineStyleProps,\n  parseStyleProps,\n  STYlE_PROPS_DATA,\n} from './style-props';\nimport { useRandomClassName } from './use-random-classname/use-random-classname';\n\nexport type Mod = Record<string, any> | string;\nexport type BoxMod = Mod | Mod[] | BoxMod[];\n\nexport interface BoxProps extends MantineStyleProps {\n  /** Class added to the root element, if applicable */\n  className?: string;\n\n  /** Inline style added to root component element, can subscribe to theme defined on MantineProvider */\n  style?: MantineStyleProp;\n\n  /** CSS variables defined on root component element */\n  __vars?: CssVarsProp;\n\n  /** Breakpoint above which the component is hidden with `display: none` */\n  hiddenFrom?: MantineBreakpoint;\n\n  /** Breakpoint below which the component is hidden with `display: none` */\n  visibleFrom?: MantineBreakpoint;\n\n  /** Determines whether component should be hidden in light color scheme with `display: none` */\n  lightHidden?: boolean;\n\n  /** Determines whether component should be hidden in dark color scheme with `display: none` */\n  darkHidden?: boolean;\n\n  /** Element modifiers transformed into `data-` attributes, for example, `{ 'data-size': 'xl' }`, falsy values are removed */\n  mod?: BoxMod;\n}\n\nexport type ElementProps<\n  ElementType extends React.ElementType,\n  PropsToOmit extends string = never,\n> = Omit<React.ComponentPropsWithoutRef<ElementType>, 'style' | PropsToOmit>;\n\nexport interface BoxComponentProps extends BoxProps {\n  /** Variant passed from parent component, sets `data-variant` */\n  variant?: string;\n\n  /** Size passed from parent component, sets `data-size` if value is not number like */\n  size?: string | number;\n}\n\nconst _Box = forwardRef<\n  HTMLDivElement,\n  BoxComponentProps & { component: any; className: string; renderRoot: any }\n>(\n  (\n    {\n      component,\n      style,\n      __vars,\n      className,\n      variant,\n      mod,\n      size,\n      hiddenFrom,\n      visibleFrom,\n      lightHidden,\n      darkHidden,\n      renderRoot,\n      ...others\n    },\n    ref\n  ) => {\n    const theme = useMantineTheme();\n    const Element = component || 'div';\n    const { styleProps, rest } = extractStyleProps(others);\n    const responsiveClassName = useRandomClassName();\n    const parsedStyleProps = parseStyleProps({\n      styleProps,\n      theme,\n      data: STYlE_PROPS_DATA,\n    });\n\n    const props = {\n      ref,\n      style: getBoxStyle({\n        theme,\n        style,\n        vars: __vars,\n        styleProps: parsedStyleProps.inlineStyles,\n      }),\n      className: cx(className, {\n        [responsiveClassName]: parsedStyleProps.hasResponsiveStyles,\n        'mantine-light-hidden': lightHidden,\n        'mantine-dark-hidden': darkHidden,\n        [`mantine-hidden-from-${hiddenFrom}`]: hiddenFrom,\n        [`mantine-visible-from-${visibleFrom}`]: visibleFrom,\n      }),\n      'data-variant': variant,\n      'data-size': isNumberLike(size) ? undefined : size || undefined,\n      ...getBoxMod(mod),\n      ...rest,\n    };\n\n    return (\n      <>\n        {parsedStyleProps.hasResponsiveStyles && (\n          <InlineStyles\n            selector={`.${responsiveClassName}`}\n            styles={parsedStyleProps.styles}\n            media={parsedStyleProps.media}\n          />\n        )}\n\n        {typeof renderRoot === 'function' ? renderRoot(props) : <Element {...props} />}\n      </>\n    );\n  }\n);\n\n_Box.displayName = '@mantine/core/Box';\n\nexport const Box = createPolymorphicComponent<'div', BoxComponentProps>(_Box);\n"],"names":[],"mappings":""}},
    {"offset": {"line": 4094, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4099, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/factory/factory.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const factory = registerClientReference(\n    function() { throw new Error(\"Attempted to call factory() from the server but factory is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/factory/factory.mjs\",\n    \"factory\",\n);\nexport const identity = registerClientReference(\n    function() { throw new Error(\"Attempted to call identity() from the server but identity is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/factory/factory.mjs\",\n    \"identity\",\n);\n"],"names":[],"mappings":";;;;;;;AACO,MAAM,UAAU,2RACnB;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,qEACA;AAEG,MAAM,WAAW,2RACpB;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,qEACA"}},
    {"offset": {"line": 4112, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4117, "column": 0}, "map": {"version":3,"sources":["../../../src/core/factory/factory.ts"],"sourcesContent":["import { forwardRef } from 'react';\nimport type { MantineThemeComponent } from '../MantineProvider';\nimport type { ClassNames, PartialVarsResolver, Styles } from '../styles-api';\n\nexport type DataAttributes = Record<`data-${string}`, any>;\n\nexport interface FactoryPayload {\n  props: Record<string, any>;\n  ctx?: any;\n  ref?: any;\n  stylesNames?: string;\n  vars?: any;\n  variant?: string;\n  staticComponents?: Record<string, any>;\n  // Compound components cannot have classNames, styles and vars on MantineProvider\n  compound?: boolean;\n}\n\nexport interface ExtendCompoundComponent<Payload extends FactoryPayload> {\n  defaultProps?: Partial<Payload['props']> & DataAttributes;\n}\n\nexport interface ExtendsRootComponent<Payload extends FactoryPayload> {\n  defaultProps?: Partial<Payload['props']> & DataAttributes;\n  classNames?: ClassNames<Payload>;\n  styles?: Styles<Payload>;\n  vars?: PartialVarsResolver<Payload>;\n}\n\nexport type ExtendComponent<Payload extends FactoryPayload> = Payload['compound'] extends true\n  ? ExtendCompoundComponent<Payload>\n  : ExtendsRootComponent<Payload>;\n\nexport type StaticComponents<Input> =\n  Input extends Record<string, any> ? Input : Record<string, never>;\n\nexport interface ThemeExtend<Payload extends FactoryPayload> {\n  extend: (input: ExtendComponent<Payload>) => MantineThemeComponent;\n}\n\nexport type ComponentClasses<Payload extends FactoryPayload> = {\n  classes: Payload['stylesNames'] extends string ? Record<string, string> : never;\n};\n\nexport type MantineComponentStaticProperties<Payload extends FactoryPayload> =\n  ThemeExtend<Payload> & ComponentClasses<Payload> & StaticComponents<Payload['staticComponents']>;\n\nexport type MantineComponent<Payload extends FactoryPayload> = React.ForwardRefExoticComponent<\n  Payload['props'] &\n    React.RefAttributes<Payload['ref']> & {\n      component?: any;\n      renderRoot?: (props: Record<string, any>) => React.ReactNode;\n    }\n> &\n  MantineComponentStaticProperties<Payload>;\n\nexport function identity<T>(value: T): T {\n  return value;\n}\n\nexport function factory<Payload extends FactoryPayload>(\n  ui: React.ForwardRefRenderFunction<Payload['ref'], Payload['props']>\n) {\n  const Component = forwardRef(ui) as MantineComponent<Payload>;\n\n  Component.extend = identity as any;\n\n  return Component as MantineComponent<Payload>;\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 4122, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4127, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/factory/polymorphic-factory.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const polymorphicFactory = registerClientReference(\n    function() { throw new Error(\"Attempted to call polymorphicFactory() from the server but polymorphicFactory is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/factory/polymorphic-factory.mjs\",\n    \"polymorphicFactory\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,qBAAqB,2RAC9B;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,iFACA"}},
    {"offset": {"line": 4136, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4141, "column": 0}, "map": {"version":3,"sources":["../../../src/core/factory/polymorphic-factory.ts"],"sourcesContent":["import { forwardRef } from 'react';\nimport { PolymorphicComponentProps } from './create-polymorphic-component';\nimport {\n  ComponentClasses,\n  FactoryPayload,\n  identity,\n  StaticComponents,\n  ThemeExtend,\n} from './factory';\n\nexport interface PolymorphicFactoryPayload extends FactoryPayload {\n  defaultComponent: any;\n  defaultRef: any;\n}\n\nexport function polymorphicFactory<Payload extends PolymorphicFactoryPayload>(\n  ui: React.ForwardRefRenderFunction<Payload['defaultRef'], Payload['props']>\n) {\n  type ComponentProps<C> = PolymorphicComponentProps<C, Payload['props']>;\n\n  type _PolymorphicComponent = <C = Payload['defaultComponent']>(\n    props: ComponentProps<C>\n  ) => React.ReactElement;\n\n  type ComponentProperties = Omit<React.FunctionComponent<ComponentProps<any>>, never>;\n\n  type PolymorphicComponent = _PolymorphicComponent &\n    ComponentProperties &\n    ThemeExtend<Payload> &\n    ComponentClasses<Payload> &\n    StaticComponents<Payload['staticComponents']>;\n\n  const Component = forwardRef(ui) as unknown as PolymorphicComponent;\n\n  Component.extend = identity as any;\n\n  return Component as PolymorphicComponent;\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 4146, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4151, "column": 0}, "map": {"version":3,"sources":["../../../src/core/factory/create-polymorphic-component.ts","/turbopack/[project]/node_modules/@mantine/core/esm/core/factory/create-polymorphic-component.mjs"],"sourcesContent":["import React from 'react';\n\ntype ExtendedProps<Props = {}, OverrideProps = {}> = OverrideProps &\n  Omit<Props, keyof OverrideProps>;\n\ntype ElementType = keyof JSX.IntrinsicElements | React.JSXElementConstructor<any>;\n\ntype PropsOf<C extends ElementType> = JSX.LibraryManagedAttributes<\n  C,\n  React.ComponentPropsWithoutRef<C>\n>;\n\ntype ComponentProp<C> = {\n  component?: C;\n};\n\ntype InheritedProps<C extends ElementType, Props = {}> = ExtendedProps<PropsOf<C>, Props>;\n\nexport type PolymorphicRef<C> = C extends React.ElementType\n  ? React.ComponentPropsWithRef<C>['ref']\n  : never;\n\nexport type PolymorphicComponentProps<C, Props = {}> = C extends React.ElementType\n  ? InheritedProps<C, Props & ComponentProp<C>> & {\n      ref?: PolymorphicRef<C>;\n      renderRoot?: (props: any) => any;\n    }\n  : Props & { component: React.ElementType; renderRoot?: (props: Record<string, any>) => any };\n\nexport function createPolymorphicComponent<\n  ComponentDefaultType,\n  Props,\n  StaticComponents = Record<string, never>,\n>(component: any) {\n  type ComponentProps<C> = PolymorphicComponentProps<C, Props>;\n\n  type _PolymorphicComponent = <C = ComponentDefaultType>(\n    props: ComponentProps<C>\n  ) => React.ReactElement;\n\n  type ComponentProperties = Omit<React.FunctionComponent<ComponentProps<any>>, never>;\n\n  type PolymorphicComponent = _PolymorphicComponent & ComponentProperties & StaticComponents;\n\n  return component as PolymorphicComponent;\n}\n",null],"names":[],"mappings":";;;AACO,SAAS,2BAA2B,SAAS;IAClD,OAAO;AACT"}},
    {"offset": {"line": 4159, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4164, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/core/DirectionProvider/DirectionProvider.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const DirectionContext = registerClientReference(\n    function() { throw new Error(\"Attempted to call DirectionContext() from the server but DirectionContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/DirectionProvider/DirectionProvider.mjs\",\n    \"DirectionContext\",\n);\nexport const DirectionProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call DirectionProvider() from the server but DirectionProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/DirectionProvider/DirectionProvider.mjs\",\n    \"DirectionProvider\",\n);\nexport const useDirection = registerClientReference(\n    function() { throw new Error(\"Attempted to call useDirection() from the server but useDirection is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/core/DirectionProvider/DirectionProvider.mjs\",\n    \"useDirection\",\n);\n"],"names":[],"mappings":";;;;;;;;AACO,MAAM,mBAAmB,2RAC5B;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,yFACA;AAEG,MAAM,oBAAoB,2RAC7B;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,yFACA;AAEG,MAAM,eAAe,2RACxB;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,yFACA"}},
    {"offset": {"line": 4181, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4186, "column": 0}, "map": {"version":3,"sources":["../../../src/core/DirectionProvider/DirectionProvider.tsx"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\nimport { useIsomorphicEffect } from '@mantine/hooks';\n\nexport type Direction = 'ltr' | 'rtl';\n\nexport interface DirectionContextValue {\n  dir: Direction;\n  toggleDirection: () => void;\n  setDirection: (dir: Direction) => void;\n}\n\nexport const DirectionContext = createContext<DirectionContextValue>({\n  dir: 'ltr',\n  toggleDirection: () => {},\n  setDirection: () => {},\n});\n\nexport function useDirection() {\n  return useContext(DirectionContext);\n}\n\nexport interface DirectionProviderProps {\n  /** Your application */\n  children: React.ReactNode;\n\n  /** Direction set as a default value, `ltr` by default */\n  initialDirection?: Direction;\n\n  /** Determines whether direction should be updated on mount based on `dir` attribute set on root element (usually html element), `true` by default  */\n  detectDirection?: boolean;\n}\n\nexport function DirectionProvider({\n  children,\n  initialDirection = 'ltr',\n  detectDirection = true,\n}: DirectionProviderProps) {\n  const [dir, setDir] = useState<Direction>(initialDirection);\n\n  const setDirection = (direction: Direction) => {\n    setDir(direction);\n    document.documentElement.setAttribute('dir', direction);\n  };\n\n  const toggleDirection = () => setDirection(dir === 'ltr' ? 'rtl' : 'ltr');\n\n  useIsomorphicEffect(() => {\n    if (detectDirection) {\n      const direction = document.documentElement.getAttribute('dir');\n      if (direction === 'rtl' || direction === 'ltr') {\n        setDirection(direction);\n      }\n    }\n  }, []);\n\n  return (\n    <DirectionContext.Provider value={{ dir, toggleDirection, setDirection }}>\n      {children}\n    </DirectionContext.Provider>\n  );\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 4191, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4196, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Collapse/Collapse.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Collapse = registerClientReference(\n    function() { throw new Error(\"Attempted to call Collapse() from the server but Collapse is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Collapse/Collapse.mjs\",\n    \"Collapse\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,WAAW,2RACpB;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,6EACA"}},
    {"offset": {"line": 4205, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4210, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Collapse/Collapse.tsx"],"sourcesContent":["import React from 'react';\nimport { useReducedMotion } from '@mantine/hooks';\nimport {\n  Box,\n  BoxProps,\n  Factory,\n  factory,\n  getStyleObject,\n  useMantineTheme,\n  useProps,\n} from '../../core';\nimport { useCollapse } from './use-collapse';\n\nexport interface CollapseProps\n  extends BoxProps,\n    Omit<React.ComponentPropsWithoutRef<'div'>, keyof BoxProps> {\n  /** Opened state */\n  in: boolean;\n\n  /** Called each time transition ends */\n  onTransitionEnd?: () => void;\n\n  /** Transition duration in ms, `200` by default */\n  transitionDuration?: number;\n\n  /** Transition timing function, default value is `ease` */\n  transitionTimingFunction?: string;\n\n  /** Determines whether opacity should be animated, `true` by default */\n  animateOpacity?: boolean;\n}\n\nexport type CollapseFactory = Factory<{\n  props: CollapseProps;\n  ref: HTMLDivElement;\n}>;\n\nconst defaultProps: Partial<CollapseProps> = {\n  transitionDuration: 200,\n  transitionTimingFunction: 'ease',\n  animateOpacity: true,\n};\n\nexport const Collapse = factory<CollapseFactory>((props, ref) => {\n  const {\n    children,\n    in: opened,\n    transitionDuration,\n    transitionTimingFunction,\n    style,\n    onTransitionEnd,\n    animateOpacity,\n    ...others\n  } = useProps('Collapse', defaultProps, props);\n\n  const theme = useMantineTheme();\n  const shouldReduceMotion = useReducedMotion();\n  const reduceMotion = theme.respectReducedMotion ? shouldReduceMotion : false;\n  const duration = reduceMotion ? 0 : transitionDuration;\n\n  const getCollapseProps = useCollapse({\n    opened,\n    transitionDuration: duration,\n    transitionTimingFunction,\n    onTransitionEnd,\n  });\n\n  if (duration === 0) {\n    return opened ? <Box {...others}>{children}</Box> : null;\n  }\n\n  return (\n    <Box\n      {...getCollapseProps({\n        style: {\n          opacity: opened || !animateOpacity ? 1 : 0,\n          transition: animateOpacity ? `opacity ${duration}ms ${transitionTimingFunction}` : 'none',\n          ...getStyleObject(style, theme),\n        },\n        ref,\n        ...others,\n      })}\n    >\n      {children}\n    </Box>\n  );\n});\n\nCollapse.displayName = '@mantine/core/Collapse';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 4215, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4220, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/ScrollArea/ScrollArea.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ScrollArea = registerClientReference(\n    function() { throw new Error(\"Attempted to call ScrollArea() from the server but ScrollArea is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/ScrollArea/ScrollArea.mjs\",\n    \"ScrollArea\",\n);\nexport const ScrollAreaAutosize = registerClientReference(\n    function() { throw new Error(\"Attempted to call ScrollAreaAutosize() from the server but ScrollAreaAutosize is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/ScrollArea/ScrollArea.mjs\",\n    \"ScrollAreaAutosize\",\n);\n"],"names":[],"mappings":";;;;;;;AACO,MAAM,aAAa,2RACtB;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,iFACA;AAEG,MAAM,qBAAqB,2RAC9B;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,iFACA"}},
    {"offset": {"line": 4233, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4238, "column": 0}, "map": {"version":3,"sources":["../../../src/components/ScrollArea/ScrollArea.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  rem,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { ScrollAreaCorner } from './ScrollAreaCorner/ScrollAreaCorner';\nimport { ScrollAreaRoot } from './ScrollAreaRoot/ScrollAreaRoot';\nimport { ScrollAreaScrollbar } from './ScrollAreaScrollbar/ScrollAreaScrollbar';\nimport { ScrollAreaThumb } from './ScrollAreaThumb/ScrollAreaThumb';\nimport { ScrollAreaViewport } from './ScrollAreaViewport/ScrollAreaViewport';\nimport classes from './ScrollArea.module.css';\n\nexport type ScrollAreaStylesNames = 'root' | 'viewport' | 'scrollbar' | 'thumb' | 'corner';\nexport type ScrollAreaCssVariables = {\n  root: '--scrollarea-scrollbar-size';\n};\n\nexport interface ScrollAreaProps\n  extends BoxProps,\n    StylesApiProps<ScrollAreaFactory>,\n    ElementProps<'div'> {\n  /** Scrollbar size, any valid CSS value for width/height, numbers are converted to rem, default value is 0.75rem */\n  scrollbarSize?: number | string;\n\n  /**\n   * Defines scrollbars behavior, `hover` by default\n   * - `hover` – scrollbars are visible when mouse is over the scroll area\n   * - `scroll` – scrollbars are visible when the scroll area is scrolled\n   * - `always` – scrollbars are always visible\n   * - `never` – scrollbars are always hidden\n   * - `auto` – similar to `overflow: auto` – scrollbars are always visible when the content is overflowing\n   * */\n  type?: 'auto' | 'always' | 'scroll' | 'hover' | 'never';\n\n  /** Scroll hide delay in ms, applicable only when type is set to `hover` or `scroll`, `1000` by default */\n  scrollHideDelay?: number;\n\n  /** Axis at which scrollbars must be rendered, `'xy'` by default */\n  scrollbars?: 'x' | 'y' | 'xy' | false;\n\n  /** Determines whether scrollbars should be offset with padding on given axis, `false` by default */\n  offsetScrollbars?: boolean | 'x' | 'y';\n\n  /** Assigns viewport element (scrollable container) ref */\n  viewportRef?: React.ForwardedRef<HTMLDivElement>;\n\n  /** Props passed down to the viewport element */\n  viewportProps?: React.ComponentPropsWithRef<'div'>;\n\n  /** Called with current position (`x` and `y` coordinates) when viewport is scrolled */\n  onScrollPositionChange?: (position: { x: number; y: number }) => void;\n}\n\nexport interface ScrollAreaAutosizeProps extends ScrollAreaProps {}\n\nexport type ScrollAreaFactory = Factory<{\n  props: ScrollAreaProps;\n  ref: HTMLDivElement;\n  stylesNames: ScrollAreaStylesNames;\n  vars: ScrollAreaCssVariables;\n  staticComponents: {\n    Autosize: typeof ScrollAreaAutosize;\n  };\n}>;\n\nconst defaultProps: Partial<ScrollAreaProps> = {\n  scrollHideDelay: 1000,\n  type: 'hover',\n  scrollbars: 'xy',\n};\n\nconst varsResolver = createVarsResolver<ScrollAreaFactory>((_, { scrollbarSize }) => ({\n  root: {\n    '--scrollarea-scrollbar-size': rem(scrollbarSize),\n  },\n}));\n\nexport const ScrollArea = factory<ScrollAreaFactory>((_props, ref) => {\n  const props = useProps('ScrollArea', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    scrollbarSize,\n    vars,\n    type,\n    scrollHideDelay,\n    viewportProps,\n    viewportRef,\n    onScrollPositionChange,\n    children,\n    offsetScrollbars,\n    scrollbars,\n    ...others\n  } = props;\n\n  const [scrollbarHovered, setScrollbarHovered] = useState(false);\n\n  const getStyles = useStyles<ScrollAreaFactory>({\n    name: 'ScrollArea',\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <ScrollAreaRoot\n      type={type === 'never' ? 'always' : type}\n      scrollHideDelay={scrollHideDelay}\n      ref={ref}\n      scrollbars={scrollbars}\n      {...getStyles('root')}\n      {...others}\n    >\n      <ScrollAreaViewport\n        {...viewportProps}\n        {...getStyles('viewport', { style: viewportProps?.style })}\n        ref={viewportRef}\n        data-offset-scrollbars={offsetScrollbars === true ? 'xy' : offsetScrollbars || undefined}\n        data-scrollbars={scrollbars || undefined}\n        onScroll={(e) => {\n          viewportProps?.onScroll?.(e);\n          onScrollPositionChange?.({ x: e.currentTarget.scrollLeft, y: e.currentTarget.scrollTop });\n        }}\n      >\n        {children}\n      </ScrollAreaViewport>\n\n      {(scrollbars === 'xy' || scrollbars === 'x') && (\n        <ScrollAreaScrollbar\n          {...getStyles('scrollbar')}\n          orientation=\"horizontal\"\n          data-hidden={type === 'never' || undefined}\n          forceMount\n          onMouseEnter={() => setScrollbarHovered(true)}\n          onMouseLeave={() => setScrollbarHovered(false)}\n        >\n          <ScrollAreaThumb {...getStyles('thumb')} />\n        </ScrollAreaScrollbar>\n      )}\n\n      {(scrollbars === 'xy' || scrollbars === 'y') && (\n        <ScrollAreaScrollbar\n          {...getStyles('scrollbar')}\n          orientation=\"vertical\"\n          data-hidden={type === 'never' || undefined}\n          forceMount\n          onMouseEnter={() => setScrollbarHovered(true)}\n          onMouseLeave={() => setScrollbarHovered(false)}\n        >\n          <ScrollAreaThumb {...getStyles('thumb')} />\n        </ScrollAreaScrollbar>\n      )}\n\n      <ScrollAreaCorner\n        {...getStyles('corner')}\n        data-hovered={scrollbarHovered || undefined}\n        data-hidden={type === 'never' || undefined}\n      />\n    </ScrollAreaRoot>\n  );\n});\n\nScrollArea.displayName = '@mantine/core/ScrollArea';\n\nexport const ScrollAreaAutosize = factory<ScrollAreaFactory>((props, ref) => {\n  const {\n    children,\n    classNames,\n    styles,\n    scrollbarSize,\n    scrollHideDelay,\n    type,\n    dir,\n    offsetScrollbars,\n    viewportRef,\n    onScrollPositionChange,\n    unstyled,\n    variant,\n    viewportProps,\n    scrollbars,\n    style,\n    vars,\n    ...others\n  } = useProps('ScrollAreaAutosize', defaultProps, props);\n\n  return (\n    <Box {...others} ref={ref} style={[{ display: 'flex', overflow: 'auto' }, style]}>\n      <Box style={{ display: 'flex', flexDirection: 'column', flex: 1 }}>\n        <ScrollArea\n          classNames={classNames}\n          styles={styles}\n          scrollHideDelay={scrollHideDelay}\n          scrollbarSize={scrollbarSize}\n          type={type}\n          dir={dir}\n          offsetScrollbars={offsetScrollbars}\n          viewportRef={viewportRef}\n          onScrollPositionChange={onScrollPositionChange}\n          unstyled={unstyled}\n          variant={variant}\n          viewportProps={viewportProps}\n          vars={vars}\n          scrollbars={scrollbars}\n        >\n          {children}\n        </ScrollArea>\n      </Box>\n    </Box>\n  );\n});\n\nScrollArea.classes = classes;\nScrollAreaAutosize.displayName = '@mantine/core/ScrollAreaAutosize';\nScrollAreaAutosize.classes = classes;\nScrollArea.Autosize = ScrollAreaAutosize;\n"],"names":[],"mappings":""}},
    {"offset": {"line": 4243, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4248, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/UnstyledButton/UnstyledButton.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const UnstyledButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call UnstyledButton() from the server but UnstyledButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/UnstyledButton/UnstyledButton.mjs\",\n    \"UnstyledButton\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,iBAAiB,2RAC1B;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,yFACA"}},
    {"offset": {"line": 4257, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4262, "column": 0}, "map": {"version":3,"sources":["../../../src/components/UnstyledButton/UnstyledButton.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxComponentProps,\n  polymorphicFactory,\n  PolymorphicFactory,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport classes from './UnstyledButton.module.css';\n\nexport type UnstyledButtonStylesNames = 'root';\n\nexport interface UnstyledButtonProps\n  extends Omit<BoxComponentProps, 'vars' | 'variant'>,\n    StylesApiProps<UnstyledButtonFactory> {\n  __staticSelector?: string;\n}\n\nconst defaultProps: Partial<UnstyledButtonProps> = {\n  __staticSelector: 'UnstyledButton',\n};\n\nexport type UnstyledButtonFactory = PolymorphicFactory<{\n  props: UnstyledButtonProps;\n  stylesNames: UnstyledButtonStylesNames;\n  defaultComponent: 'button';\n  defaultRef: HTMLButtonElement;\n}>;\n\nexport const UnstyledButton = polymorphicFactory<UnstyledButtonFactory>(\n  (_props: UnstyledButtonProps & { component?: any }, ref) => {\n    const props = useProps('UnstyledButton', defaultProps, _props);\n    const {\n      className,\n      component = 'button',\n      __staticSelector,\n      unstyled,\n      classNames,\n      styles,\n      style,\n      ...others\n    } = props;\n\n    const getStyles = useStyles<UnstyledButtonFactory>({\n      name: __staticSelector!,\n      props,\n      classes,\n      className,\n      style,\n      classNames,\n      styles,\n      unstyled,\n    });\n\n    return (\n      <Box\n        {...getStyles('root', { focusable: true })}\n        component={component}\n        ref={ref}\n        type={component === 'button' ? 'button' : undefined}\n        {...others}\n      />\n    );\n  }\n);\n\nUnstyledButton.classes = classes;\nUnstyledButton.displayName = '@mantine/core/UnstyledButton';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 4267, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4272, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/VisuallyHidden/VisuallyHidden.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const VisuallyHidden = registerClientReference(\n    function() { throw new Error(\"Attempted to call VisuallyHidden() from the server but VisuallyHidden is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/VisuallyHidden/VisuallyHidden.mjs\",\n    \"VisuallyHidden\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,iBAAiB,2RAC1B;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,yFACA"}},
    {"offset": {"line": 4281, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4286, "column": 0}, "map": {"version":3,"sources":["../../../src/components/VisuallyHidden/VisuallyHidden.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  ElementProps,\n  factory,\n  Factory,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport classes from './VisuallyHidden.module.css';\n\nexport type VisuallyHiddenStylesNames = 'root';\n\nexport interface VisuallyHiddenProps\n  extends BoxProps,\n    StylesApiProps<VisuallyHiddenFactory>,\n    ElementProps<'div'> {}\n\nexport type VisuallyHiddenFactory = Factory<{\n  props: VisuallyHiddenProps;\n  ref: HTMLDivElement;\n  stylesNames: VisuallyHiddenStylesNames;\n}>;\n\nconst defaultProps: Partial<VisuallyHiddenProps> = {};\n\nexport const VisuallyHidden = factory<VisuallyHiddenFactory>((_props, ref) => {\n  const props = useProps('VisuallyHidden', defaultProps, _props);\n  const { classNames, className, style, styles, unstyled, vars, ...others } = props;\n\n  const getStyles = useStyles<VisuallyHiddenFactory>({\n    name: 'VisuallyHidden',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n  });\n\n  return <Box component=\"span\" ref={ref} {...getStyles('root')} {...others} />;\n});\n\nVisuallyHidden.classes = classes;\nVisuallyHidden.displayName = '@mantine/core/VisuallyHidden';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 4291, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4296, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Paper/Paper.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Paper = registerClientReference(\n    function() { throw new Error(\"Attempted to call Paper() from the server but Paper is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Paper/Paper.mjs\",\n    \"Paper\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,QAAQ,2RACjB;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,uEACA"}},
    {"offset": {"line": 4305, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4310, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Paper/Paper.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  getRadius,\n  getShadow,\n  MantineRadius,\n  MantineShadow,\n  polymorphicFactory,\n  PolymorphicFactory,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport classes from './Paper.module.css';\n\nexport type PaperStylesNames = 'root';\nexport type PaperCssVariables = {\n  root: '--paper-radius' | '--paper-shadow';\n};\n\nexport interface PaperBaseProps {\n  /** Key of `theme.shadows` or any valid CSS value to set `box-shadow`, `none` by default */\n  shadow?: MantineShadow;\n\n  /** Key of `theme.radius` or any valid CSS value to set border-radius, numbers are converted to rem, `theme.defaultRadius` by default */\n  radius?: MantineRadius;\n\n  /** Determines whether the paper should have border, border color depends on color scheme, `false` by default */\n  withBorder?: boolean;\n}\n\nexport interface PaperProps extends BoxProps, PaperBaseProps, StylesApiProps<PaperFactory> {}\n\nexport type PaperFactory = PolymorphicFactory<{\n  props: PaperProps;\n  defaultComponent: 'div';\n  defaultRef: HTMLDivElement;\n  stylesNames: PaperStylesNames;\n  vars: PaperCssVariables;\n}>;\n\nconst defaultProps: Partial<PaperProps> = {};\n\nconst varsResolver = createVarsResolver<PaperFactory>((_, { radius, shadow }) => ({\n  root: {\n    '--paper-radius': radius === undefined ? undefined : getRadius(radius),\n    '--paper-shadow': getShadow(shadow),\n  },\n}));\n\nexport const Paper = polymorphicFactory<PaperFactory>((_props, ref) => {\n  const props = useProps('Paper', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    withBorder,\n    vars,\n    radius,\n    shadow,\n    variant,\n    mod,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<PaperFactory>({\n    name: 'Paper',\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <Box\n      ref={ref}\n      mod={[{ 'data-with-border': withBorder }, mod]}\n      {...getStyles('root')}\n      variant={variant}\n      {...others}\n    />\n  );\n});\n\nPaper.classes = classes;\nPaper.displayName = '@mantine/core/Paper';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 4315, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4320, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Popover/Popover.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Popover = registerClientReference(\n    function() { throw new Error(\"Attempted to call Popover() from the server but Popover is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Popover/Popover.mjs\",\n    \"Popover\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,UAAU,2RACnB;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,2EACA"}},
    {"offset": {"line": 4329, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4334, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Popover/Popover.tsx"],"sourcesContent":["import React, { useCallback, useRef, useState } from 'react';\nimport { useClickOutside, useId } from '@mantine/hooks';\nimport {\n  createVarsResolver,\n  ExtendComponent,\n  Factory,\n  getDefaultZIndex,\n  getRadius,\n  getShadow,\n  MantineRadius,\n  MantineShadow,\n  StylesApiProps,\n  useDirection,\n  useProps,\n  useStyles,\n} from '../../core';\nimport {\n  ArrowPosition,\n  FloatingAxesOffsets,\n  FloatingPosition,\n  FloatingStrategy,\n  getFloatingPosition,\n} from '../Floating';\nimport { PortalProps } from '../Portal';\nimport { TransitionOverride } from '../Transition';\nimport { PopoverContextProvider } from './Popover.context';\nimport { PopoverMiddlewares, PopoverWidth } from './Popover.types';\nimport { PopoverDropdown } from './PopoverDropdown/PopoverDropdown';\nimport { PopoverTarget } from './PopoverTarget/PopoverTarget';\nimport { usePopover } from './use-popover';\nimport classes from './Popover.module.css';\n\nexport type PopoverStylesNames = 'dropdown' | 'arrow';\nexport type PopoverCssVariables = {\n  dropdown: '--popover-radius' | '--popover-shadow';\n};\n\nexport interface __PopoverProps {\n  /** Dropdown position relative to the target element, `'bottom'` by default */\n  position?: FloatingPosition;\n\n  /** Offset of the dropdown element, `8` by default */\n  offset?: number | FloatingAxesOffsets;\n\n  /** Called when dropdown position changes */\n  onPositionChange?: (position: FloatingPosition) => void;\n\n  /** `useEffect` dependencies to force update dropdown position, `[]` by default */\n  positionDependencies?: any[];\n\n  /** Called when dropdown closes */\n  onClose?: () => void;\n\n  /** Called when dropdown opens */\n  onOpen?: () => void;\n\n  /** If set dropdown will not be unmounted from the DOM when it is hidden, `display: none` styles will be added instead */\n  keepMounted?: boolean;\n\n  /** Props passed down to the `Transition` component that used to animate dropdown presence, use to configure duration and animation type, `{ duration: 150, transition: 'fade' }` by default */\n  transitionProps?: TransitionOverride;\n\n  /** Dropdown width, or `'target'` to make dropdown width the same as target element, `'max-content'` by default */\n  width?: PopoverWidth;\n\n  /** Floating ui middlewares to configure position handling, `{ flip: true, shift: true, inline: false }` by default */\n  middlewares?: PopoverMiddlewares;\n\n  /** Determines whether component should have an arrow, `false` by default */\n  withArrow?: boolean;\n\n  /** Arrow size in px, `7` by default */\n  arrowSize?: number;\n\n  /** Arrow offset in px, `5` by default */\n  arrowOffset?: number;\n\n  /** Arrow `border-radius` in px, `0` by default */\n  arrowRadius?: number;\n\n  /** Arrow position */\n  arrowPosition?: ArrowPosition;\n\n  /** Determines whether dropdown should be rendered within the `Portal`, `true` by default */\n  withinPortal?: boolean;\n\n  /** Props to pass down to the `Portal` when `withinPortal` is true */\n  portalProps?: Omit<PortalProps, 'children'>;\n\n  /** Dropdown `z-index`, `300` by default */\n  zIndex?: string | number;\n\n  /** Key of `theme.radius` or any valid CSS value to set border-radius, `theme.defaultRadius` by default */\n  radius?: MantineRadius;\n\n  /** Key of `theme.shadows` or any other valid CSS `box-shadow` value */\n  shadow?: MantineShadow;\n\n  /** If set, popover dropdown will not be rendered */\n  disabled?: boolean;\n\n  /** Determines whether focus should be automatically returned to control when dropdown closes, `false` by default */\n  returnFocus?: boolean;\n\n  /** Changes floating ui [position strategy](https://floating-ui.com/docs/usefloating#strategy), `'absolute'` by default */\n  floatingStrategy?: FloatingStrategy;\n}\n\nexport interface PopoverProps extends __PopoverProps, StylesApiProps<PopoverFactory> {\n  __staticSelector?: string;\n\n  /** `Popover.Target` and `Popover.Dropdown` components */\n  children?: React.ReactNode;\n\n  /** Initial opened state for uncontrolled component */\n  defaultOpened?: boolean;\n\n  /** Controlled dropdown opened state */\n  opened?: boolean;\n\n  /** Called with current state when dropdown opens or closes */\n  onChange?: (opened: boolean) => void;\n\n  /** Determines whether dropdown should be closed on outside clicks, `true` by default */\n  closeOnClickOutside?: boolean;\n\n  /** Events that trigger outside clicks */\n  clickOutsideEvents?: string[];\n\n  /** Determines whether focus should be trapped within dropdown, `false` by default */\n  trapFocus?: boolean;\n\n  /** Determines whether dropdown should be closed when `Escape` key is pressed, `true` by default */\n  closeOnEscape?: boolean;\n\n  /** id base to create accessibility connections */\n  id?: string;\n\n  /** Determines whether dropdown and target elements should have accessible roles, `true` by default */\n  withRoles?: boolean;\n}\n\nexport type PopoverFactory = Factory<{\n  props: PopoverProps;\n  stylesNames: PopoverStylesNames;\n  vars: PopoverCssVariables;\n}>;\n\nconst defaultProps: Partial<PopoverProps> = {\n  position: 'bottom',\n  offset: 8,\n  positionDependencies: [],\n  transitionProps: { transition: 'fade', duration: 150 },\n  middlewares: { flip: true, shift: true, inline: false },\n  arrowSize: 7,\n  arrowOffset: 5,\n  arrowRadius: 0,\n  arrowPosition: 'side',\n  closeOnClickOutside: true,\n  withinPortal: true,\n  closeOnEscape: true,\n  trapFocus: false,\n  withRoles: true,\n  returnFocus: false,\n  clickOutsideEvents: ['mousedown', 'touchstart'],\n  zIndex: getDefaultZIndex('popover'),\n  __staticSelector: 'Popover',\n  width: 'max-content',\n};\n\nconst varsResolver = createVarsResolver<PopoverFactory>((_, { radius, shadow }) => ({\n  dropdown: {\n    '--popover-radius': radius === undefined ? undefined : getRadius(radius),\n    '--popover-shadow': getShadow(shadow),\n  },\n}));\n\nexport function Popover(_props: PopoverProps) {\n  const props = useProps('Popover', defaultProps, _props);\n  const {\n    children,\n    position,\n    offset,\n    onPositionChange,\n    positionDependencies,\n    opened,\n    transitionProps,\n    width,\n    middlewares,\n    withArrow,\n    arrowSize,\n    arrowOffset,\n    arrowRadius,\n    arrowPosition,\n    unstyled,\n    classNames,\n    styles,\n    closeOnClickOutside,\n    withinPortal,\n    portalProps,\n    closeOnEscape,\n    clickOutsideEvents,\n    trapFocus,\n    onClose,\n    onOpen,\n    onChange,\n    zIndex,\n    radius,\n    shadow,\n    id,\n    defaultOpened,\n    __staticSelector,\n    withRoles,\n    disabled,\n    returnFocus,\n    variant,\n    keepMounted,\n    vars,\n    floatingStrategy,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<PopoverFactory>({\n    name: __staticSelector!,\n    props,\n    classes,\n    classNames,\n    styles,\n    unstyled,\n    rootSelector: 'dropdown',\n    vars,\n    varsResolver,\n  });\n\n  const arrowRef = useRef<HTMLDivElement | null>(null);\n  const [targetNode, setTargetNode] = useState<HTMLElement | null>(null);\n  const [dropdownNode, setDropdownNode] = useState<HTMLElement | null>(null);\n  const { dir } = useDirection();\n\n  const uid = useId(id);\n  const popover = usePopover({\n    middlewares,\n    width,\n    position: getFloatingPosition(dir, position!),\n    offset: typeof offset === 'number' ? offset + (withArrow ? arrowSize! / 2 : 0) : offset!,\n    arrowRef,\n    arrowOffset: arrowOffset!,\n    onPositionChange,\n    positionDependencies,\n    opened,\n    defaultOpened,\n    onChange,\n    onOpen,\n    onClose,\n    strategy: floatingStrategy,\n  });\n\n  useClickOutside(() => closeOnClickOutside && popover.onClose(), clickOutsideEvents, [\n    targetNode,\n    dropdownNode,\n  ]);\n\n  const reference = useCallback(\n    (node: HTMLElement) => {\n      setTargetNode(node);\n      popover.floating.refs.setReference(node);\n    },\n    [popover.floating.refs.setReference]\n  );\n\n  const floating = useCallback(\n    (node: HTMLElement) => {\n      setDropdownNode(node);\n      popover.floating.refs.setFloating(node);\n    },\n    [popover.floating.refs.setFloating]\n  );\n\n  return (\n    <PopoverContextProvider\n      value={{\n        returnFocus,\n        disabled,\n        controlled: popover.controlled,\n        reference,\n        floating,\n        x: popover.floating.x!,\n        y: popover.floating.y!,\n        arrowX: popover.floating?.middlewareData?.arrow?.x,\n        arrowY: popover.floating?.middlewareData?.arrow?.y,\n        opened: popover.opened,\n        arrowRef,\n        transitionProps,\n        width,\n        withArrow,\n        arrowSize: arrowSize!,\n        arrowOffset: arrowOffset!,\n        arrowRadius: arrowRadius!,\n        arrowPosition: arrowPosition!,\n        placement: popover.floating.placement,\n        trapFocus,\n        withinPortal,\n        portalProps,\n        zIndex,\n        radius,\n        shadow,\n        closeOnEscape,\n        onClose: popover.onClose,\n        onToggle: popover.onToggle,\n        getTargetId: () => `${uid}-target`,\n        getDropdownId: () => `${uid}-dropdown`,\n        withRoles,\n        targetProps: others,\n        __staticSelector: __staticSelector!,\n        classNames,\n        styles,\n        unstyled,\n        variant,\n        keepMounted,\n        getStyles,\n      }}\n    >\n      {children}\n    </PopoverContextProvider>\n  );\n}\n\nPopover.Target = PopoverTarget;\nPopover.Dropdown = PopoverDropdown;\nPopover.displayName = '@mantine/core/Popover';\nPopover.extend = (input: ExtendComponent<PopoverFactory>) => input;\n"],"names":[],"mappings":""}},
    {"offset": {"line": 4339, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4344, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Popover/PopoverDropdown/PopoverDropdown.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const PopoverDropdown = registerClientReference(\n    function() { throw new Error(\"Attempted to call PopoverDropdown() from the server but PopoverDropdown is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Popover/PopoverDropdown/PopoverDropdown.mjs\",\n    \"PopoverDropdown\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,kBAAkB,2RAC3B;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,mGACA"}},
    {"offset": {"line": 4353, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4358, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Popover/PopoverDropdown/PopoverDropdown.tsx"],"sourcesContent":["import React from 'react';\nimport { useFocusReturn, useMergedRef } from '@mantine/hooks';\nimport {\n  Box,\n  BoxProps,\n  closeOnEscape,\n  CompoundStylesApiProps,\n  ElementProps,\n  factory,\n  Factory,\n  rem,\n  useProps,\n} from '../../../core';\nimport { FloatingArrow } from '../../Floating';\nimport { FocusTrap } from '../../FocusTrap';\nimport { OptionalPortal } from '../../Portal';\nimport { Transition } from '../../Transition';\nimport type { PopoverStylesNames } from '../Popover';\nimport { usePopoverContext } from '../Popover.context';\nimport classes from '../Popover.module.css';\n\nexport interface PopoverDropdownProps\n  extends BoxProps,\n    CompoundStylesApiProps<PopoverDropdownFactory>,\n    ElementProps<'div'> {}\n\nexport type PopoverDropdownFactory = Factory<{\n  props: PopoverDropdownProps;\n  ref: HTMLDivElement;\n  stylesNames: PopoverStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<PopoverDropdownProps> = {};\n\nexport const PopoverDropdown = factory<PopoverDropdownFactory>((_props, ref) => {\n  const props = useProps('PopoverDropdown', defaultProps, _props);\n  const {\n    className,\n    style,\n    vars,\n    children,\n    onKeyDownCapture,\n    variant,\n    classNames,\n    styles,\n    ...others\n  } = props;\n\n  const ctx = usePopoverContext();\n\n  const returnFocus = useFocusReturn({\n    opened: ctx.opened,\n    shouldReturnFocus: ctx.returnFocus,\n  });\n\n  const accessibleProps = ctx.withRoles\n    ? {\n        'aria-labelledby': ctx.getTargetId(),\n        id: ctx.getDropdownId(),\n        role: 'dialog',\n        tabIndex: -1,\n      }\n    : {};\n\n  const mergedRef = useMergedRef(ref, ctx.floating);\n\n  if (ctx.disabled) {\n    return null;\n  }\n\n  return (\n    <OptionalPortal {...ctx.portalProps} withinPortal={ctx.withinPortal}>\n      <Transition\n        mounted={ctx.opened}\n        {...ctx.transitionProps}\n        transition={ctx.transitionProps?.transition || 'fade'}\n        duration={ctx.transitionProps?.duration ?? 150}\n        keepMounted={ctx.keepMounted}\n        exitDuration={\n          typeof ctx.transitionProps?.exitDuration === 'number'\n            ? ctx.transitionProps.exitDuration\n            : ctx.transitionProps?.duration\n        }\n      >\n        {(transitionStyles) => (\n          <FocusTrap active={ctx.trapFocus}>\n            <Box\n              {...accessibleProps}\n              {...others}\n              variant={variant}\n              ref={mergedRef}\n              onKeyDownCapture={closeOnEscape(ctx.onClose, {\n                active: ctx.closeOnEscape,\n                onTrigger: returnFocus,\n                onKeyDown: onKeyDownCapture,\n              })}\n              data-position={ctx.placement}\n              {...ctx.getStyles('dropdown', {\n                className,\n                props,\n                classNames,\n                styles,\n                style: [\n                  {\n                    ...transitionStyles,\n                    zIndex: ctx.zIndex as React.CSSProperties['zIndex'],\n                    top: ctx.y ?? 0,\n                    left: ctx.x ?? 0,\n                    width: ctx.width === 'target' ? undefined : rem(ctx.width),\n                  },\n                  style,\n                ],\n              })}\n            >\n              {children}\n\n              <FloatingArrow\n                ref={ctx.arrowRef}\n                arrowX={ctx.arrowX}\n                arrowY={ctx.arrowY}\n                visible={ctx.withArrow}\n                position={ctx.placement}\n                arrowSize={ctx.arrowSize}\n                arrowRadius={ctx.arrowRadius}\n                arrowOffset={ctx.arrowOffset}\n                arrowPosition={ctx.arrowPosition}\n                {...ctx.getStyles('arrow', {\n                  props,\n                  classNames,\n                  styles,\n                })}\n              />\n            </Box>\n          </FocusTrap>\n        )}\n      </Transition>\n    </OptionalPortal>\n  );\n});\n\nPopoverDropdown.classes = classes;\nPopoverDropdown.displayName = '@mantine/core/PopoverDropdown';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 4363, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4368, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Popover/PopoverTarget/PopoverTarget.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const PopoverTarget = registerClientReference(\n    function() { throw new Error(\"Attempted to call PopoverTarget() from the server but PopoverTarget is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Popover/PopoverTarget/PopoverTarget.mjs\",\n    \"PopoverTarget\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,gBAAgB,2RACzB;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,+FACA"}},
    {"offset": {"line": 4377, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4382, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Popover/PopoverTarget/PopoverTarget.tsx"],"sourcesContent":["import React, { cloneElement } from 'react';\nimport cx from 'clsx';\nimport { useMergedRef } from '@mantine/hooks';\nimport { factory, Factory, isElement, useProps } from '../../../core';\nimport { usePopoverContext } from '../Popover.context';\n\nexport interface PopoverTargetProps {\n  /** Target element */\n  children: React.ReactNode;\n\n  /** Key of the prop that should be used to access element ref */\n  refProp?: string;\n\n  /** Popup accessible type, `'dialog'` by default */\n  popupType?: string;\n}\n\nconst defaultProps: Partial<PopoverTargetProps> = {\n  refProp: 'ref',\n  popupType: 'dialog',\n};\n\nexport type PopoverTargetFactory = Factory<{\n  props: PopoverTargetProps;\n  ref: HTMLElement;\n  compound: true;\n}>;\n\nexport const PopoverTarget = factory<PopoverTargetFactory>((props, ref) => {\n  const { children, refProp, popupType, ...others } = useProps(\n    'PopoverTarget',\n    defaultProps,\n    props\n  );\n\n  if (!isElement(children)) {\n    throw new Error(\n      'Popover.Target component children should be an element or a component that accepts ref. Fragments, strings, numbers and other primitive values are not supported'\n    );\n  }\n\n  const forwardedProps: any = others;\n  const ctx = usePopoverContext();\n  const targetRef = useMergedRef(ctx.reference, (children as any).ref, ref);\n\n  const accessibleProps = ctx.withRoles\n    ? {\n        'aria-haspopup': popupType,\n        'aria-expanded': ctx.opened,\n        'aria-controls': ctx.getDropdownId(),\n        id: ctx.getTargetId(),\n      }\n    : {};\n\n  return cloneElement(children, {\n    ...forwardedProps,\n    ...accessibleProps,\n    ...ctx.targetProps,\n    className: cx(ctx.targetProps.className, forwardedProps.className, children.props.className),\n    [refProp!]: targetRef,\n    ...(!ctx.controlled ? { onClick: ctx.onToggle } : null),\n  });\n});\n\nPopoverTarget.displayName = '@mantine/core/PopoverTarget';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 4387, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4392, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/ActionIcon/ActionIcon.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ActionIcon = registerClientReference(\n    function() { throw new Error(\"Attempted to call ActionIcon() from the server but ActionIcon is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/ActionIcon/ActionIcon.mjs\",\n    \"ActionIcon\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,aAAa,2RACtB;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,iFACA"}},
    {"offset": {"line": 4401, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4406, "column": 0}, "map": {"version":3,"sources":["../../../src/components/ActionIcon/ActionIcon.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  getRadius,\n  getSize,\n  MantineColor,\n  MantineGradient,\n  MantineRadius,\n  MantineSize,\n  polymorphicFactory,\n  PolymorphicFactory,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { Loader, LoaderProps } from '../Loader';\nimport { Transition } from '../Transition';\nimport { UnstyledButton } from '../UnstyledButton';\nimport { ActionIconGroup } from './ActionIconGroup/ActionIconGroup';\nimport classes from './ActionIcon.module.css';\n\nexport type ActionIconVariant =\n  | 'filled'\n  | 'light'\n  | 'outline'\n  | 'transparent'\n  | 'white'\n  | 'subtle'\n  | 'default'\n  | 'gradient';\n\nexport type ActionIconStylesNames = 'root' | 'loader' | 'icon';\nexport type ActionIconCssVariables = {\n  root:\n    | '--ai-radius'\n    | '--ai-size'\n    | '--ai-bg'\n    | '--ai-hover'\n    | '--ai-hover-color'\n    | '--ai-color'\n    | '--ai-bd';\n};\n\nexport interface ActionIconProps extends BoxProps, StylesApiProps<ActionIconFactory> {\n  'data-disabled'?: boolean;\n  __staticSelector?: string;\n\n  /** Determines whether `Loader` component should be displayed instead of the `children`, `false` by default */\n  loading?: boolean;\n\n  /** Props added to the `Loader` component (only visible when `loading` prop is set) */\n  loaderProps?: LoaderProps;\n\n  /** Controls width and height of the button. Numbers are converted to rem. `'md'` by default. */\n  size?: MantineSize | (string & {}) | number;\n\n  /** Key of `theme.colors` or any valid CSS color. Default value is `theme.primaryColor`.  */\n  color?: MantineColor;\n\n  /** Key of `theme.radius` or any valid CSS value to set border-radius. Numbers are converted to rem. `theme.defaultRadius` by default. */\n  radius?: MantineRadius;\n\n  /** Gradient data used when `variant=\"gradient\"`, default value is `theme.defaultGradient` */\n  gradient?: MantineGradient;\n\n  /** Sets `disabled` and `data-disabled` attributes on the button element */\n  disabled?: boolean;\n\n  /** Icon displayed inside the button */\n  children?: React.ReactNode;\n\n  /** Determines whether button text color with filled variant should depend on `background-color`. If luminosity of the `color` prop is less than `theme.luminosityThreshold`, then `theme.white` will be used for text color, otherwise `theme.black`. Overrides `theme.autoContrast`. */\n  autoContrast?: boolean;\n}\n\nexport type ActionIconFactory = PolymorphicFactory<{\n  props: ActionIconProps;\n  defaultComponent: 'button';\n  defaultRef: HTMLButtonElement;\n  stylesNames: ActionIconStylesNames;\n  variant: ActionIconVariant;\n  vars: ActionIconCssVariables;\n  staticComponents: {\n    Group: typeof ActionIconGroup;\n  };\n}>;\n\nconst defaultProps: Partial<ActionIconProps> = {};\n\nconst varsResolver = createVarsResolver<ActionIconFactory>(\n  (theme, { size, radius, variant, gradient, color, autoContrast }) => {\n    const colors = theme.variantColorResolver({\n      color: color || theme.primaryColor,\n      theme,\n      gradient,\n      variant: variant || 'filled',\n      autoContrast,\n    });\n\n    return {\n      root: {\n        '--ai-size': getSize(size, 'ai-size'),\n        '--ai-radius': radius === undefined ? undefined : getRadius(radius),\n        '--ai-bg': color || variant ? colors.background : undefined,\n        '--ai-hover': color || variant ? colors.hover : undefined,\n        '--ai-hover-color': color || variant ? colors.hoverColor : undefined,\n        '--ai-color': colors.color,\n        '--ai-bd': color || variant ? colors.border : undefined,\n      },\n    };\n  }\n);\n\nexport const ActionIcon = polymorphicFactory<ActionIconFactory>((_props, ref) => {\n  const props = useProps('ActionIcon', defaultProps, _props);\n  const {\n    className,\n    unstyled,\n    variant,\n    classNames,\n    styles,\n    style,\n    loading,\n    loaderProps,\n    size,\n    color,\n    radius,\n    __staticSelector,\n    gradient,\n    vars,\n    children,\n    disabled,\n    'data-disabled': dataDisabled,\n    autoContrast,\n    mod,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<ActionIconFactory>({\n    name: ['ActionIcon', __staticSelector],\n    props,\n    className,\n    style,\n    classes,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <UnstyledButton\n      {...getStyles('root', { active: !disabled && !loading && !dataDisabled })}\n      {...others}\n      unstyled={unstyled}\n      variant={variant}\n      size={size}\n      disabled={disabled || loading}\n      ref={ref}\n      mod={[{ loading, disabled: disabled || dataDisabled }, mod]}\n    >\n      <Transition mounted={!!loading} transition=\"slide-down\" duration={150}>\n        {(transitionStyles) => (\n          <Box component=\"span\" {...getStyles('loader', { style: transitionStyles })} aria-hidden>\n            <Loader color=\"var(--ai-color)\" size=\"calc(var(--ai-size) * 0.55)\" {...loaderProps} />\n          </Box>\n        )}\n      </Transition>\n\n      <Box component=\"span\" mod={{ loading }} {...getStyles('icon')}>\n        {children}\n      </Box>\n    </UnstyledButton>\n  );\n});\n\nActionIcon.classes = classes;\nActionIcon.displayName = '@mantine/core/ActionIcon';\nActionIcon.Group = ActionIconGroup;\n"],"names":[],"mappings":""}},
    {"offset": {"line": 4411, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4416, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/ActionIcon/ActionIconGroup/ActionIconGroup.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ActionIconGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call ActionIconGroup() from the server but ActionIconGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/ActionIcon/ActionIconGroup/ActionIconGroup.mjs\",\n    \"ActionIconGroup\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,kBAAkB,2RAC3B;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,sGACA"}},
    {"offset": {"line": 4425, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4430, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/ActionIcon/ActionIconGroup/ActionIconGroup.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  factory,\n  Factory,\n  rem,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../../core';\nimport classes from '../ActionIcon.module.css';\n\nexport type ActionIconGroupStylesNames = 'group';\nexport type ActionIconGroupCssVariables = {\n  group: '--ai-border-width';\n};\n\nexport interface ActionIconGroupProps extends BoxProps, StylesApiProps<ActionIconGroupFactory> {\n  /** `ActionIcon` components only */\n  children?: React.ReactNode;\n\n  /** Controls group orientation, `'horizontal'` by default */\n  orientation?: 'horizontal' | 'vertical';\n\n  /** `border-width` of the child `ActionIcon` components. Default value in `1` */\n  borderWidth?: number | string;\n}\n\nexport type ActionIconGroupFactory = Factory<{\n  props: ActionIconGroupProps;\n  ref: HTMLDivElement;\n  stylesNames: ActionIconGroupStylesNames;\n  vars: ActionIconGroupCssVariables;\n}>;\n\nconst defaultProps: Partial<ActionIconGroupProps> = {\n  orientation: 'horizontal',\n};\n\nconst varsResolver = createVarsResolver<ActionIconGroupFactory>((_, { borderWidth }) => ({\n  group: { '--ai-border-width': rem(borderWidth) },\n}));\n\nexport const ActionIconGroup = factory<ActionIconGroupFactory>((_props, ref) => {\n  const props = useProps('ActionIconGroup', defaultProps, _props);\n  const {\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    orientation,\n    vars,\n    borderWidth,\n    variant,\n    mod,\n    ...others\n  } = useProps('ActionIconGroup', defaultProps, _props);\n\n  const getStyles = useStyles<ActionIconGroupFactory>({\n    name: 'ActionIconGroup',\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n    rootSelector: 'group',\n  });\n\n  return (\n    <Box\n      {...getStyles('group')}\n      ref={ref}\n      variant={variant}\n      mod={[{ 'data-orientation': orientation }, mod]}\n      role=\"group\"\n      {...others}\n    />\n  );\n});\n\nActionIconGroup.classes = classes;\nActionIconGroup.displayName = '@mantine/core/ActionIconGroup';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 4435, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4440, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/CloseButton/CloseIcon.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const CloseIcon = registerClientReference(\n    function() { throw new Error(\"Attempted to call CloseIcon() from the server but CloseIcon is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/CloseButton/CloseIcon.mjs\",\n    \"CloseIcon\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,YAAY,2RACrB;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,iFACA"}},
    {"offset": {"line": 4449, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4454, "column": 0}, "map": {"version":3,"sources":["../../../src/components/CloseButton/CloseIcon.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\n\nexport interface CloseIconProps extends React.ComponentPropsWithoutRef<'svg'> {\n  /** Icon width and height, `var(--icon-size)` by default */\n  size?: string;\n}\n\nexport const CloseIcon = forwardRef<SVGSVGElement, CloseIconProps>(\n  ({ size = 'var(--cb-icon-size, 70%)', style, ...others }, ref) => (\n    <svg\n      viewBox=\"0 0 15 15\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      style={{ ...style, width: size, height: size }}\n      ref={ref}\n      {...others}\n    >\n      <path\n        d=\"M11.7816 4.03157C12.0062 3.80702 12.0062 3.44295 11.7816 3.2184C11.5571 2.99385 11.193 2.99385 10.9685 3.2184L7.50005 6.68682L4.03164 3.2184C3.80708 2.99385 3.44301 2.99385 3.21846 3.2184C2.99391 3.44295 2.99391 3.80702 3.21846 4.03157L6.68688 7.49999L3.21846 10.9684C2.99391 11.193 2.99391 11.557 3.21846 11.7816C3.44301 12.0061 3.80708 12.0061 4.03164 11.7816L7.50005 8.31316L10.9685 11.7816C11.193 12.0061 11.5571 12.0061 11.7816 11.7816C12.0062 11.557 12.0062 11.193 11.7816 10.9684L8.31322 7.49999L11.7816 4.03157Z\"\n        fill=\"currentColor\"\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n      />\n    </svg>\n  )\n);\n\nCloseIcon.displayName = '@mantine/core/CloseIcon';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 4459, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4464, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/CloseButton/CloseButton.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const CloseButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call CloseButton() from the server but CloseButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/CloseButton/CloseButton.mjs\",\n    \"CloseButton\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,cAAc,2RACvB;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,mFACA"}},
    {"offset": {"line": 4473, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4478, "column": 0}, "map": {"version":3,"sources":["../../../src/components/CloseButton/CloseButton.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  BoxProps,\n  createVarsResolver,\n  getRadius,\n  getSize,\n  MantineRadius,\n  MantineSize,\n  polymorphicFactory,\n  PolymorphicFactory,\n  rem,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { UnstyledButton } from '../UnstyledButton';\nimport { CloseIcon } from './CloseIcon';\nimport classes from './CloseButton.module.css';\n\nexport type CloseButtonVariant = 'subtle' | 'transparent';\nexport type CloseButtonStylesNames = 'root';\nexport type CloseButtonCssVariables = {\n  root: '--cb-icon-size' | '--cb-size' | '--cb-radius';\n};\n\nexport interface __CloseButtonProps {\n  'data-disabled'?: boolean;\n\n  /** Controls width and height of the button. Numbers are converted to rem. `'md'` by default. */\n  size?: MantineSize | (string & {}) | number;\n\n  /** Key of `theme.radius` or any valid CSS value to set border-radius. Numbers are converted to rem. `theme.defaultRadius` by default. */\n  radius?: MantineRadius;\n\n  /** Sets `disabled` and `data-disabled` attributes on the button element */\n  disabled?: boolean;\n\n  /** `X` icon `width` and `height`, `80%` by default */\n  iconSize?: number | string;\n\n  /** Content rendered inside the button, for example `VisuallyHidden` with label for screen readers */\n  children?: React.ReactNode;\n\n  /** Replaces default close icon. If set, `iconSize` prop is ignored. */\n  icon?: React.ReactNode;\n}\n\nexport interface CloseButtonProps\n  extends __CloseButtonProps,\n    BoxProps,\n    StylesApiProps<CloseButtonFactory> {}\n\nexport type CloseButtonFactory = PolymorphicFactory<{\n  props: CloseButtonProps;\n  defaultComponent: 'button';\n  defaultRef: HTMLButtonElement;\n  stylesNames: CloseButtonStylesNames;\n  variant: CloseButtonVariant;\n  vars: CloseButtonCssVariables;\n}>;\n\nconst defaultProps: Partial<CloseButtonProps> = {\n  variant: 'subtle',\n};\n\nconst varsResolver = createVarsResolver<CloseButtonFactory>((_, { size, radius, iconSize }) => ({\n  root: {\n    '--cb-size': getSize(size, 'cb-size'),\n    '--cb-radius': radius === undefined ? undefined : getRadius(radius),\n    '--cb-icon-size': rem(iconSize),\n  },\n}));\n\nexport const CloseButton = polymorphicFactory<CloseButtonFactory>((_props, ref) => {\n  const props = useProps('CloseButton', defaultProps, _props);\n  const {\n    iconSize,\n    children,\n    vars,\n    radius,\n    className,\n    classNames,\n    style,\n    styles,\n    unstyled,\n    'data-disabled': dataDisabled,\n    disabled,\n    variant,\n    icon,\n    mod,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<CloseButtonFactory>({\n    name: 'CloseButton',\n    props,\n    className,\n    style,\n    classes,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <UnstyledButton\n      ref={ref}\n      {...others}\n      unstyled={unstyled}\n      variant={variant}\n      disabled={disabled}\n      mod={[{ disabled: disabled || dataDisabled }, mod]}\n      {...getStyles('root', { variant, active: !disabled && !dataDisabled })}\n    >\n      {icon || <CloseIcon />}\n      {children}\n    </UnstyledButton>\n  );\n});\n\nCloseButton.classes = classes;\nCloseButton.displayName = '@mantine/core/CloseButton';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 4483, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4488, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Group/Group.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Group = registerClientReference(\n    function() { throw new Error(\"Attempted to call Group() from the server but Group is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Group/Group.mjs\",\n    \"Group\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,QAAQ,2RACjB;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,uEACA"}},
    {"offset": {"line": 4497, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4502, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Group/Group.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getSpacing,\n  MantineSpacing,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { filterFalsyChildren } from './filter-falsy-children/filter-falsy-children';\nimport classes from './Group.module.css';\n\nexport type GroupStylesNames = 'root';\nexport type GroupCssVariables = {\n  root:\n    | '--group-gap'\n    | '--group-align'\n    | '--group-justify'\n    | '--group-wrap'\n    | '--group-child-width';\n};\n\nexport interface GroupStylesCtx {\n  childWidth: string;\n}\n\nexport interface GroupProps extends BoxProps, StylesApiProps<GroupFactory>, ElementProps<'div'> {\n  __size?: any;\n\n  /** Controls `justify-content` CSS property, `'flex-start'` by default */\n  justify?: React.CSSProperties['justifyContent'];\n\n  /** Controls `align-items` CSS property, `'center'` by default */\n  align?: React.CSSProperties['alignItems'];\n\n  /** Controls `flex-wrap` CSS property, `'wrap'` by default */\n  wrap?: React.CSSProperties['flexWrap'];\n\n  /** Key of `theme.spacing` or any valid CSS value for `gap`, numbers are converted to rem, `'md'` by default */\n  gap?: MantineSpacing;\n\n  /** Determines whether each child element should have `flex-grow: 1` style, `false` by default */\n  grow?: boolean;\n\n  /** Determines whether children should take only dedicated amount of space (`max-width` style is set based on the number of children), `true` by default */\n  preventGrowOverflow?: boolean;\n}\n\nexport type GroupFactory = Factory<{\n  props: GroupProps;\n  ref: HTMLDivElement;\n  stylesNames: GroupStylesNames;\n  vars: GroupCssVariables;\n  ctx: GroupStylesCtx;\n}>;\n\nconst defaultProps: Partial<GroupProps> = {\n  preventGrowOverflow: true,\n  gap: 'md',\n  align: 'center',\n  justify: 'flex-start',\n  wrap: 'wrap',\n};\n\nconst varsResolver = createVarsResolver<GroupFactory>(\n  (_, { grow, preventGrowOverflow, gap, align, justify, wrap }, { childWidth }) => ({\n    root: {\n      '--group-child-width': grow && preventGrowOverflow ? childWidth : undefined,\n      '--group-gap': getSpacing(gap),\n      '--group-align': align,\n      '--group-justify': justify,\n      '--group-wrap': wrap,\n    },\n  })\n);\n\nexport const Group = factory<GroupFactory>((_props, ref) => {\n  const props = useProps('Group', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    children,\n    gap,\n    align,\n    justify,\n    wrap,\n    grow,\n    preventGrowOverflow,\n    vars,\n    variant,\n    __size,\n    mod,\n    ...others\n  } = props;\n\n  const filteredChildren = filterFalsyChildren(children);\n  const childrenCount = filteredChildren.length;\n  const resolvedGap = getSpacing(gap ?? 'md');\n  const childWidth = `calc(${\n    100 / childrenCount\n  }% - (${resolvedGap} - ${resolvedGap} / ${childrenCount}))`;\n\n  const stylesCtx: GroupStylesCtx = { childWidth };\n\n  const getStyles = useStyles<GroupFactory>({\n    name: 'Group',\n    props,\n    stylesCtx,\n    className,\n    style,\n    classes,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <Box\n      {...getStyles('root')}\n      ref={ref}\n      variant={variant}\n      mod={[{ grow }, mod]}\n      size={__size}\n      {...others}\n    >\n      {filteredChildren}\n    </Box>\n  );\n});\n\nGroup.classes = classes;\nGroup.displayName = '@mantine/core/Group';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 4507, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4512, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Loader/Loader.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Loader = registerClientReference(\n    function() { throw new Error(\"Attempted to call Loader() from the server but Loader is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Loader/Loader.mjs\",\n    \"Loader\",\n);\nexport const defaultLoaders = registerClientReference(\n    function() { throw new Error(\"Attempted to call defaultLoaders() from the server but defaultLoaders is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Loader/Loader.mjs\",\n    \"defaultLoaders\",\n);\n"],"names":[],"mappings":";;;;;;;AACO,MAAM,SAAS,2RAClB;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,yEACA;AAEG,MAAM,iBAAiB,2RAC1B;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,yEACA"}},
    {"offset": {"line": 4525, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4530, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Loader/Loader.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  factory,\n  Factory,\n  getSize,\n  getThemeColor,\n  MantineColor,\n  MantineSize,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport type { MantineLoader, MantineLoadersRecord } from './Loader.types';\nimport { Bars } from './loaders/Bars';\nimport { Dots } from './loaders/Dots';\nimport { Oval } from './loaders/Oval';\nimport classes from './Loader.module.css';\n\nexport type LoaderStylesNames = 'root';\nexport type LoaderCssVariables = {\n  root: '--loader-size' | '--loader-color';\n};\n\nexport interface LoaderProps\n  extends BoxProps,\n    StylesApiProps<LoaderFactory>,\n    Omit<React.ComponentPropsWithoutRef<'svg'>, keyof BoxProps> {\n  /** Controls `width` and `height` of the loader. `Loader` has predefined `xs`-`xl` values. Numbers are converted to rem. Default value is `'md'` */\n  size?: MantineSize | (string & {}) | number;\n\n  /** Key of `theme.colors` or any valid CSS color, default value is `theme.primaryColor`  */\n  color?: MantineColor;\n\n  /** Loader type, key of `loaders` prop, default value is `'oval'` */\n  type?: MantineLoader;\n\n  /** Object of loaders components, can be customized via default props or inline. Default value contains `bars`, `oval` and `dots` */\n  loaders?: MantineLoadersRecord;\n\n  /** Overrides default loader with given content */\n  children?: React.ReactNode;\n}\n\nexport type LoaderFactory = Factory<{\n  props: LoaderProps;\n  ref: HTMLSpanElement;\n  stylesNames: LoaderStylesNames;\n  vars: LoaderCssVariables;\n  staticComponents: {\n    defaultLoaders: typeof defaultLoaders;\n  };\n}>;\n\nexport const defaultLoaders: MantineLoadersRecord = {\n  bars: Bars,\n  oval: Oval,\n  dots: Dots,\n};\n\nconst defaultProps: Partial<LoaderProps> = {\n  loaders: defaultLoaders,\n  type: 'oval',\n};\n\nconst varsResolver = createVarsResolver<LoaderFactory>((theme, { size, color }) => ({\n  root: {\n    '--loader-size': getSize(size, 'loader-size'),\n    '--loader-color': color ? getThemeColor(color, theme) : undefined,\n  },\n}));\n\nexport const Loader = factory<LoaderFactory>((_props, ref) => {\n  const props = useProps('Loader', defaultProps, _props);\n  const {\n    size,\n    color,\n    type,\n    vars,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    loaders,\n    variant,\n    children,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<LoaderFactory>({\n    name: 'Loader',\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  if (children) {\n    return (\n      <Box {...getStyles('root')} ref={ref as any} {...(others as any)}>\n        {children}\n      </Box>\n    );\n  }\n\n  return (\n    <Box\n      {...getStyles('root')}\n      ref={ref}\n      component={(loaders as any)[type!]}\n      variant={variant}\n      size={size}\n      {...others}\n    />\n  );\n});\n\nLoader.defaultLoaders = defaultLoaders;\nLoader.classes = classes;\nLoader.displayName = '@mantine/core/Loader';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 4535, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4540, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Overlay/Overlay.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Overlay = registerClientReference(\n    function() { throw new Error(\"Attempted to call Overlay() from the server but Overlay is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Overlay/Overlay.mjs\",\n    \"Overlay\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,UAAU,2RACnB;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,2EACA"}},
    {"offset": {"line": 4549, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4554, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Overlay/Overlay.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  getDefaultZIndex,\n  getRadius,\n  MantineRadius,\n  polymorphicFactory,\n  PolymorphicFactory,\n  rem,\n  rgba,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport classes from './Overlay.module.css';\n\nexport type OverlayStylesNames = 'root';\nexport type OverlayCssVariables = {\n  root: '--overlay-bg' | '--overlay-filter' | '--overlay-radius' | '--overlay-z-index';\n};\n\nexport interface OverlayProps extends BoxProps, StylesApiProps<OverlayFactory> {\n  /** Controls overlay `background-color` opacity 0–1, disregarded when `gradient` prop is set, `0.6` by default */\n  backgroundOpacity?: number;\n\n  /** Overlay `background-color`, `#000` by default */\n  color?: React.CSSProperties['backgroundColor'];\n\n  /** Overlay background blur, `0` by default */\n  blur?: number | string;\n\n  /** Changes overlay to gradient. If set, `color` prop is ignored */\n  gradient?: string;\n\n  /** Overlay z-index, `200` by default */\n  zIndex?: string | number;\n\n  /** Key of `theme.radius` or any valid CSS value to set border-radius, `0` by default */\n  radius?: MantineRadius;\n\n  /** Content inside overlay */\n  children?: React.ReactNode;\n\n  /** Determines whether content inside overlay should be vertically and horizontally centered, `false` by default */\n  center?: boolean;\n\n  /** Determines whether overlay should have fixed position instead of absolute, `false` by default */\n  fixed?: boolean;\n}\n\nexport type OverlayFactory = PolymorphicFactory<{\n  props: OverlayProps;\n  defaultRef: HTMLDivElement;\n  defaultComponent: 'div';\n  stylesNames: OverlayStylesNames;\n  vars: OverlayCssVariables;\n}>;\n\nconst defaultProps: Partial<OverlayProps> = {\n  zIndex: getDefaultZIndex('modal'),\n};\n\nconst varsResolver = createVarsResolver<OverlayFactory>(\n  (_, { gradient, color, backgroundOpacity, blur, radius, zIndex }) => ({\n    root: {\n      '--overlay-bg':\n        gradient ||\n        ((color !== undefined || backgroundOpacity !== undefined) &&\n          rgba(color || '#000', backgroundOpacity ?? 0.6)) ||\n        undefined,\n      '--overlay-filter': blur ? `blur(${rem(blur)})` : undefined,\n      '--overlay-radius': radius === undefined ? undefined : getRadius(radius),\n      '--overlay-z-index': zIndex?.toString(),\n    },\n  })\n);\n\nexport const Overlay = polymorphicFactory<OverlayFactory>((_props, ref) => {\n  const props = useProps('Overlay', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    fixed,\n    center,\n    children,\n    radius,\n    zIndex,\n    gradient,\n    blur,\n    color,\n    backgroundOpacity,\n    mod,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<OverlayFactory>({\n    name: 'Overlay',\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <Box ref={ref} {...getStyles('root')} mod={[{ center, fixed }, mod]} {...others}>\n      {children}\n    </Box>\n  );\n});\n\nOverlay.classes = classes;\nOverlay.displayName = '@mantine/core/Overlay';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 4559, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4564, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/ModalBase/ModalBase.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ModalBase = registerClientReference(\n    function() { throw new Error(\"Attempted to call ModalBase() from the server but ModalBase is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/ModalBase/ModalBase.mjs\",\n    \"ModalBase\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,YAAY,2RACrB;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,+EACA"}},
    {"offset": {"line": 4573, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4578, "column": 0}, "map": {"version":3,"sources":["../../../src/components/ModalBase/ModalBase.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport { RemoveScroll } from 'react-remove-scroll';\nimport {\n  Box,\n  BoxProps,\n  ElementProps,\n  getDefaultZIndex,\n  getShadow,\n  getSpacing,\n  MantineShadow,\n  MantineSize,\n  MantineSpacing,\n} from '../../core';\nimport { OptionalPortal, PortalProps } from '../Portal';\nimport { TransitionOverride } from '../Transition';\nimport { ModalBaseProvider } from './ModalBase.context';\nimport { useModal } from './use-modal';\n\ntype RemoveScrollProps = Omit<React.ComponentProps<typeof RemoveScroll>, 'children'>;\n\nexport interface ModalBaseProps extends BoxProps, ElementProps<'div', 'title'> {\n  unstyled?: boolean;\n\n  /** If set modal/drawer will not be unmounted from the DOM when it is hidden, `display: none` styles will be added instead, `false` by default */\n  keepMounted?: boolean;\n\n  /** Determines whether modal/drawer is opened */\n  opened: boolean;\n\n  /** Called when modal/drawer is closed */\n  onClose: () => void;\n\n  /** Id used to connect modal/drawer with body and title */\n  id?: string;\n\n  /** Determines whether scroll should be locked when `opened={true}`, `true` by default */\n  lockScroll?: boolean;\n\n  /** Determines whether focus should be trapped, `true` by default */\n  trapFocus?: boolean;\n\n  /** Determines whether the component should be rendered inside `Portal`, `true` by default */\n  withinPortal?: boolean;\n\n  /** Props passed down to the Portal component when `withinPortal` is set */\n  portalProps?: Omit<PortalProps, 'children'>;\n\n  /** Modal/drawer content */\n  children?: React.ReactNode;\n\n  /** Determines whether the modal/drawer should be closed when user clicks on the overlay, `true` by default */\n  closeOnClickOutside?: boolean;\n\n  /** Props added to the `Transition` component that used to animate overlay and body, use to configure duration and animation type, `{ duration: 200, transition: 'pop' }` by default */\n  transitionProps?: TransitionOverride;\n\n  /** Determines whether `onClose` should be called when user presses the escape key, `true` by default */\n  closeOnEscape?: boolean;\n\n  /** Determines whether focus should be returned to the last active element when `onClose` is called, `true` by default */\n  returnFocus?: boolean;\n\n  /** `z-index` CSS property of the root element, `200` by default */\n  zIndex?: string | number;\n\n  /** Key of `theme.shadows` or any valid CSS box-shadow value, 'xl' by default */\n  shadow?: MantineShadow;\n\n  /** Key of `theme.spacing` or any valid CSS value to set content, header and footer padding, `'md'` by default */\n  padding?: MantineSpacing;\n\n  /** Controls width of the content area, `'md'` by default */\n  size?: MantineSize | (string & {}) | number;\n\n  /** Props passed down to react-remove-scroll, can be used to customize scroll lock behavior */\n  removeScrollProps?: RemoveScrollProps;\n}\n\nexport const ModalBase = forwardRef<HTMLDivElement, ModalBaseProps>(\n  (\n    {\n      keepMounted,\n      opened,\n      onClose,\n      id,\n      transitionProps,\n      trapFocus,\n      closeOnEscape,\n      returnFocus,\n      closeOnClickOutside,\n      withinPortal,\n      portalProps,\n      lockScroll,\n      children,\n      zIndex,\n      shadow,\n      padding,\n      __vars,\n      unstyled,\n      removeScrollProps,\n      ...others\n    },\n    ref\n  ) => {\n    const { _id, titleMounted, bodyMounted, shouldLockScroll, setTitleMounted, setBodyMounted } =\n      useModal({ id, transitionProps, opened, trapFocus, closeOnEscape, onClose, returnFocus });\n\n    return (\n      <OptionalPortal {...portalProps} withinPortal={withinPortal}>\n        <ModalBaseProvider\n          value={{\n            opened,\n            onClose,\n            closeOnClickOutside,\n            transitionProps: { ...transitionProps, keepMounted },\n            getTitleId: () => `${_id}-title`,\n            getBodyId: () => `${_id}-body`,\n            titleMounted,\n            bodyMounted,\n            setTitleMounted,\n            setBodyMounted,\n            trapFocus,\n            closeOnEscape,\n            zIndex,\n            unstyled,\n          }}\n        >\n          <RemoveScroll enabled={shouldLockScroll && lockScroll} {...removeScrollProps}>\n            <Box\n              ref={ref}\n              {...others}\n              __vars={{\n                ...__vars,\n                '--mb-z-index': (zIndex || getDefaultZIndex('modal')).toString(),\n                '--mb-shadow': getShadow(shadow),\n                '--mb-padding': getSpacing(padding),\n              }}\n            >\n              {children}\n            </Box>\n          </RemoveScroll>\n        </ModalBaseProvider>\n      </OptionalPortal>\n    );\n  }\n);\n"],"names":[],"mappings":""}},
    {"offset": {"line": 4583, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4588, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/ModalBase/ModalBaseBody.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ModalBaseBody = registerClientReference(\n    function() { throw new Error(\"Attempted to call ModalBaseBody() from the server but ModalBaseBody is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/ModalBase/ModalBaseBody.mjs\",\n    \"ModalBaseBody\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,gBAAgB,2RACzB;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,mFACA"}},
    {"offset": {"line": 4597, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4602, "column": 0}, "map": {"version":3,"sources":["../../../src/components/ModalBase/ModalBaseBody.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport cx from 'clsx';\nimport { Box, BoxProps, ElementProps } from '../../core';\nimport { useModalBaseContext } from './ModalBase.context';\nimport { useModalBodyId } from './use-modal-body-id';\nimport classes from './ModalBase.module.css';\n\nexport interface ModalBaseBodyProps extends BoxProps, ElementProps<'div'> {}\n\nexport const ModalBaseBody = forwardRef<HTMLDivElement, ModalBaseBodyProps>(\n  ({ className, ...others }, ref) => {\n    const bodyId = useModalBodyId();\n    const ctx = useModalBaseContext();\n    return (\n      <Box\n        ref={ref}\n        {...others}\n        id={bodyId}\n        className={cx({ [classes.body]: !ctx.unstyled }, className)}\n      />\n    );\n  }\n);\n\nModalBaseBody.displayName = '@mantine/core/ModalBaseBody';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 4607, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4612, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/ModalBase/ModalBaseCloseButton.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ModalBaseCloseButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call ModalBaseCloseButton() from the server but ModalBaseCloseButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/ModalBase/ModalBaseCloseButton.mjs\",\n    \"ModalBaseCloseButton\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,uBAAuB,2RAChC;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,0FACA"}},
    {"offset": {"line": 4621, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4626, "column": 0}, "map": {"version":3,"sources":["../../../src/components/ModalBase/ModalBaseCloseButton.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport cx from 'clsx';\nimport { BoxProps, ElementProps } from '../../core';\nimport { __CloseButtonProps, CloseButton } from '../CloseButton';\nimport { useModalBaseContext } from './ModalBase.context';\nimport classes from './ModalBase.module.css';\n\nexport interface ModalBaseCloseButtonProps\n  extends __CloseButtonProps,\n    BoxProps,\n    ElementProps<'button'> {}\n\nexport const ModalBaseCloseButton = forwardRef<HTMLButtonElement, ModalBaseCloseButtonProps>(\n  ({ className, onClick, ...others }, ref) => {\n    const ctx = useModalBaseContext();\n    return (\n      <CloseButton\n        ref={ref}\n        {...others}\n        onClick={(event) => {\n          ctx.onClose();\n          onClick?.(event);\n        }}\n        className={cx({ [classes.close]: !ctx.unstyled }, className)}\n        unstyled={ctx.unstyled}\n      />\n    );\n  }\n);\n\nModalBaseCloseButton.displayName = '@mantine/core/ModalBaseCloseButton';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 4631, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4636, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/ModalBase/ModalBaseContent.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ModalBaseContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call ModalBaseContent() from the server but ModalBaseContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/ModalBase/ModalBaseContent.mjs\",\n    \"ModalBaseContent\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,mBAAmB,2RAC5B;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,sFACA"}},
    {"offset": {"line": 4645, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4650, "column": 0}, "map": {"version":3,"sources":["../../../src/components/ModalBase/ModalBaseContent.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport cx from 'clsx';\nimport { BoxProps, ElementProps, MantineRadius, MantineShadow } from '../../core';\nimport { FocusTrap } from '../FocusTrap';\nimport { Paper } from '../Paper';\nimport { Transition, TransitionOverride } from '../Transition';\nimport { useModalBaseContext } from './ModalBase.context';\nimport classes from './ModalBase.module.css';\n\nexport interface ModalBaseContentProps extends BoxProps, ElementProps<'div'> {\n  /** Props passed down to the `Transition` component */\n  transitionProps?: TransitionOverride;\n\n  /** Key of `theme.shadows` or any valid CSS value to set `box-shadow`, `none` by default */\n  shadow?: MantineShadow;\n\n  /** Key of `theme.radius` or any valid CSS value to set border-radius, numbers are converted to rem, `theme.defaultRadius` by default */\n  radius?: MantineRadius;\n}\n\ninterface _ModalBaseContentProps extends ModalBaseContentProps {\n  innerProps: React.ComponentPropsWithoutRef<'div'>;\n}\n\nexport const ModalBaseContent = forwardRef<HTMLDivElement, _ModalBaseContentProps>(\n  ({ transitionProps, className, innerProps, onKeyDown, style, ...others }, ref) => {\n    const ctx = useModalBaseContext();\n\n    // const handleKeyDown = (event: React.KeyboardEvent<HTMLDivElement>) => {\n    //   const shouldTrigger =\n    //     (event.target as HTMLElement)?.getAttribute('data-mantine-stop-propagation') !== 'true';\n    //   console.log((event.target as HTMLElement)?.getAttribute('data-mantine-stop-propagation'));\n    //   shouldTrigger && event.key === 'Escape' && ctx.closeOnEscape && ctx.onClose();\n    //   onKeyDown?.(event);\n    // };\n\n    return (\n      <Transition\n        mounted={ctx.opened}\n        transition=\"pop\"\n        {...ctx.transitionProps}\n        {...transitionProps}\n      >\n        {(transitionStyles) => (\n          <div\n            {...innerProps}\n            className={cx({ [classes.inner]: !ctx.unstyled }, innerProps.className)}\n          >\n            <FocusTrap active={ctx.opened && ctx.trapFocus}>\n              <Paper\n                {...others}\n                component=\"section\"\n                role=\"dialog\"\n                tabIndex={-1}\n                aria-modal\n                aria-describedby={ctx.bodyMounted ? ctx.getBodyId() : undefined}\n                aria-labelledby={ctx.titleMounted ? ctx.getTitleId() : undefined}\n                // onKeyDown={handleKeyDown}\n                ref={ref}\n                style={[style, transitionStyles]}\n                className={cx({ [classes.content]: !ctx.unstyled }, className)}\n                unstyled={ctx.unstyled}\n              >\n                {others.children}\n              </Paper>\n            </FocusTrap>\n          </div>\n        )}\n      </Transition>\n    );\n  }\n);\n"],"names":[],"mappings":""}},
    {"offset": {"line": 4655, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4660, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/ModalBase/ModalBaseHeader.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ModalBaseHeader = registerClientReference(\n    function() { throw new Error(\"Attempted to call ModalBaseHeader() from the server but ModalBaseHeader is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/ModalBase/ModalBaseHeader.mjs\",\n    \"ModalBaseHeader\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,kBAAkB,2RAC3B;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,qFACA"}},
    {"offset": {"line": 4669, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4674, "column": 0}, "map": {"version":3,"sources":["../../../src/components/ModalBase/ModalBaseHeader.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport cx from 'clsx';\nimport { Box, BoxProps, ElementProps } from '../../core';\nimport { useModalBaseContext } from './ModalBase.context';\nimport classes from './ModalBase.module.css';\n\nexport interface ModalBaseHeaderProps extends BoxProps, ElementProps<'header'> {}\n\nexport const ModalBaseHeader = forwardRef<HTMLElement, ModalBaseHeaderProps>(\n  ({ className, ...others }, ref) => {\n    const ctx = useModalBaseContext();\n    return (\n      <Box\n        component=\"header\"\n        ref={ref}\n        className={cx({ [classes.header]: !ctx.unstyled }, className)}\n        {...others}\n      />\n    );\n  }\n);\n\nModalBaseHeader.displayName = '@mantine/core/ModalBaseHeader';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 4679, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4684, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/ModalBase/ModalBaseOverlay.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ModalBaseOverlay = registerClientReference(\n    function() { throw new Error(\"Attempted to call ModalBaseOverlay() from the server but ModalBaseOverlay is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/ModalBase/ModalBaseOverlay.mjs\",\n    \"ModalBaseOverlay\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,mBAAmB,2RAC5B;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,sFACA"}},
    {"offset": {"line": 4693, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4698, "column": 0}, "map": {"version":3,"sources":["../../../src/components/ModalBase/ModalBaseOverlay.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport { ElementProps } from '../../core';\nimport { Overlay, OverlayProps } from '../Overlay';\nimport { Transition, TransitionOverride } from '../Transition';\nimport { useModalBaseContext } from './ModalBase.context';\nimport { useModalTransition } from './use-modal-transition';\n\nexport interface ModalBaseOverlayProps\n  extends Omit<OverlayProps, 'styles' | 'classNames' | 'variant' | 'vars'>,\n    ElementProps<'div', 'color'> {\n  /** Props passed down to the `Transition` component */\n  transitionProps?: TransitionOverride;\n}\n\nexport const ModalBaseOverlay = forwardRef<HTMLDivElement, ModalBaseOverlayProps>(\n  ({ onClick, transitionProps, style, ...others }, ref) => {\n    const ctx = useModalBaseContext();\n    const transition = useModalTransition(transitionProps);\n\n    return (\n      <Transition mounted={ctx.opened} {...transition} transition=\"fade\">\n        {(transitionStyles) => (\n          <Overlay\n            ref={ref}\n            fixed\n            style={[style, transitionStyles]}\n            zIndex={ctx.zIndex}\n            unstyled={ctx.unstyled}\n            onClick={(event) => {\n              onClick?.(event);\n              ctx.closeOnClickOutside && ctx.onClose();\n            }}\n            {...others}\n          />\n        )}\n      </Transition>\n    );\n  }\n);\n\nModalBaseOverlay.displayName = '@mantine/core/ModalBaseOverlay';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 4703, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4708, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/ModalBase/ModalBaseTitle.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ModalBaseTitle = registerClientReference(\n    function() { throw new Error(\"Attempted to call ModalBaseTitle() from the server but ModalBaseTitle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/ModalBase/ModalBaseTitle.mjs\",\n    \"ModalBaseTitle\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,iBAAiB,2RAC1B;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,oFACA"}},
    {"offset": {"line": 4717, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4722, "column": 0}, "map": {"version":3,"sources":["../../../src/components/ModalBase/ModalBaseTitle.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport cx from 'clsx';\nimport { Box, BoxProps, ElementProps } from '../../core';\nimport { useModalBaseContext } from './ModalBase.context';\nimport { useModalTitle } from './use-modal-title-id';\nimport classes from './ModalBase.module.css';\n\nexport interface ModalBaseTitleProps extends BoxProps, ElementProps<'h2'> {}\n\nexport const ModalBaseTitle = forwardRef<HTMLHeadingElement, ModalBaseTitleProps>(\n  ({ className, ...others }, ref) => {\n    const id = useModalTitle();\n    const ctx = useModalBaseContext();\n    return (\n      <Box\n        component=\"h2\"\n        ref={ref}\n        className={cx({ [classes.title]: !ctx.unstyled }, className)}\n        {...others}\n        id={id}\n      />\n    );\n  }\n);\n\nModalBaseTitle.displayName = '@mantine/core/ModalBaseTitle';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 4727, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4732, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/ModalBase/NativeScrollArea.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const NativeScrollArea = registerClientReference(\n    function() { throw new Error(\"Attempted to call NativeScrollArea() from the server but NativeScrollArea is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/ModalBase/NativeScrollArea.mjs\",\n    \"NativeScrollArea\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,mBAAmB,2RAC5B;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,sFACA"}},
    {"offset": {"line": 4741, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4746, "column": 0}, "map": {"version":3,"sources":["../../../src/components/ModalBase/NativeScrollArea.tsx"],"sourcesContent":["import React from 'react';\n\ninterface NativeScrollAreaProps {\n  children: React.ReactNode;\n}\n\nexport function NativeScrollArea({ children }: NativeScrollAreaProps) {\n  return <>{children}</>;\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 4751, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4756, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Input/Input.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Input = registerClientReference(\n    function() { throw new Error(\"Attempted to call Input() from the server but Input is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Input/Input.mjs\",\n    \"Input\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,QAAQ,2RACjB;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,uEACA"}},
    {"offset": {"line": 4765, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4770, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Input/Input.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  extractStyleProps,\n  getFontSize,\n  getRadius,\n  getSize,\n  MantineRadius,\n  MantineSize,\n  polymorphicFactory,\n  PolymorphicFactory,\n  rem,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { InputDescription } from './InputDescription/InputDescription';\nimport { InputError } from './InputError/InputError';\nimport { InputLabel } from './InputLabel/InputLabel';\nimport { InputPlaceholder } from './InputPlaceholder/InputPlaceholder';\nimport { useInputWrapperContext } from './InputWrapper.context';\nimport {\n  __InputWrapperProps,\n  InputWrapper,\n  InputWrapperStylesNames,\n} from './InputWrapper/InputWrapper';\nimport classes from './Input.module.css';\n\nexport interface __BaseInputProps extends __InputWrapperProps, Omit<__InputProps, 'wrapperProps'> {\n  /** Props passed down to the root element */\n  wrapperProps?: Record<string, any>;\n}\n\nexport type __InputStylesNames = InputStylesNames | InputWrapperStylesNames;\n\nexport type InputStylesNames = 'input' | 'wrapper' | 'section';\nexport type InputVariant = 'default' | 'filled' | 'unstyled';\nexport type InputCssVariables = {\n  wrapper:\n    | '--input-height'\n    | '--input-fz'\n    | '--input-radius'\n    | '--input-left-section-width'\n    | '--input-right-section-width'\n    | '--input-left-section-pointer-events'\n    | '--input-right-section-pointer-events'\n    | '--input-padding-y'\n    | '--input-margin-top'\n    | '--input-margin-bottom';\n};\n\nexport interface InputStylesCtx {\n  offsetTop: boolean | undefined;\n  offsetBottom: boolean | undefined;\n}\n\nexport interface __InputProps {\n  /** Content section rendered on the left side of the input */\n  leftSection?: React.ReactNode;\n\n  /** Left section width, used to set `width` of the section and input `padding-left`, by default equals to the input height */\n  leftSectionWidth?: React.CSSProperties['width'];\n\n  /** Props passed down to the `leftSection` element */\n  leftSectionProps?: React.ComponentPropsWithoutRef<'div'>;\n\n  /** Sets `pointer-events` styles on the `leftSection` element, `'none'` by default */\n  leftSectionPointerEvents?: React.CSSProperties['pointerEvents'];\n\n  /** Content section rendered on the right side of the input */\n  rightSection?: React.ReactNode;\n\n  /** Right section width, used to set `width` of the section and input `padding-right`, by default equals to the input height */\n  rightSectionWidth?: React.CSSProperties['width'];\n\n  /** Props passed down to the `rightSection` element */\n  rightSectionProps?: React.ComponentPropsWithoutRef<'div'>;\n\n  /** Sets `pointer-events` styles on the `rightSection` element, `'none'` by default */\n  rightSectionPointerEvents?: React.CSSProperties['pointerEvents'];\n\n  /** Props passed down to the root element of the `Input` component */\n  wrapperProps?: Record<string, any>;\n\n  /** Sets `required` attribute on the `input` element */\n  required?: boolean;\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius`, numbers are converted to rem, `theme.defaultRadius` by default */\n  radius?: MantineRadius;\n\n  /** Sets `disabled` attribute on the `input` element */\n  disabled?: boolean;\n\n  /** Controls input `height` and horizontal `padding`, `'sm'` by default */\n  size?: MantineSize | (string & {});\n\n  /** Determines whether the input should have `cursor: pointer` style, `false` by default */\n  pointer?: boolean;\n\n  /** Determines whether the input should have red border and red text color when the `error` prop is set, `true` by default */\n  withErrorStyles?: boolean;\n}\n\nexport interface InputProps extends BoxProps, __InputProps, StylesApiProps<InputFactory> {\n  __staticSelector?: string;\n\n  /** Props passed to Styles API context, replaces `Input.Wrapper` props */\n  __stylesApiProps?: Record<string, any>;\n\n  /** Determines whether the input should have error styles and `aria-invalid` attribute */\n  error?: React.ReactNode;\n\n  /** Determines whether the input can have multiple lines, for example when `component=\"textarea\"`, `false` by default */\n  multiline?: boolean;\n\n  /** Input element id */\n  id?: string;\n\n  /** Determines whether `aria-` and other accessibility attributes should be added to the input, `true` by default */\n  withAria?: boolean;\n}\n\nexport type InputFactory = PolymorphicFactory<{\n  props: InputProps;\n  defaultRef: HTMLInputElement;\n  defaultComponent: 'input';\n  stylesNames: InputStylesNames;\n  variant: InputVariant;\n  vars: InputCssVariables;\n  ctx: InputStylesCtx;\n  staticComponents: {\n    Label: typeof InputLabel;\n    Error: typeof InputError;\n    Description: typeof InputDescription;\n    Placeholder: typeof InputPlaceholder;\n    Wrapper: typeof InputWrapper;\n  };\n}>;\n\nconst defaultProps: Partial<InputProps> = {\n  variant: 'default',\n  leftSectionPointerEvents: 'none',\n  rightSectionPointerEvents: 'none',\n  withAria: true,\n  withErrorStyles: true,\n};\n\nconst varsResolver = createVarsResolver<InputFactory>((_, props, ctx) => ({\n  wrapper: {\n    '--input-margin-top': ctx.offsetTop ? 'calc(var(--mantine-spacing-xs) / 2)' : undefined,\n    '--input-margin-bottom': ctx.offsetBottom ? 'calc(var(--mantine-spacing-xs) / 2)' : undefined,\n    '--input-height': getSize(props.size, 'input-height'),\n    '--input-fz': getFontSize(props.size),\n    '--input-radius': props.radius === undefined ? undefined : getRadius(props.radius),\n    '--input-left-section-width':\n      props.leftSectionWidth !== undefined ? rem(props.leftSectionWidth) : undefined,\n    '--input-right-section-width':\n      props.rightSectionWidth !== undefined ? rem(props.rightSectionWidth) : undefined,\n    '--input-padding-y': props.multiline ? getSize(props.size, 'input-padding-y') : undefined,\n    '--input-left-section-pointer-events': props.leftSectionPointerEvents,\n    '--input-right-section-pointer-events': props.rightSectionPointerEvents,\n  },\n}));\n\nexport const Input = polymorphicFactory<InputFactory>((_props, ref) => {\n  const props = useProps('Input', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    required,\n    __staticSelector,\n    __stylesApiProps,\n    size,\n    wrapperProps,\n    error,\n    disabled,\n    leftSection,\n    leftSectionProps,\n    leftSectionWidth,\n    rightSection,\n    rightSectionProps,\n    rightSectionWidth,\n    rightSectionPointerEvents,\n    leftSectionPointerEvents,\n    variant,\n    vars,\n    pointer,\n    multiline,\n    radius,\n    id,\n    withAria,\n    withErrorStyles,\n    mod,\n    ...others\n  } = props;\n\n  const { styleProps, rest } = extractStyleProps(others);\n  const ctx = useInputWrapperContext();\n  const stylesCtx: InputStylesCtx = { offsetBottom: ctx?.offsetBottom, offsetTop: ctx?.offsetTop };\n\n  const getStyles = useStyles<InputFactory>({\n    name: ['Input', __staticSelector],\n    props: __stylesApiProps || props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    stylesCtx,\n    rootSelector: 'wrapper',\n    vars,\n    varsResolver,\n  });\n\n  const ariaAttributes = withAria\n    ? {\n        required,\n        disabled,\n        'aria-invalid': !!error,\n        'aria-describedby': ctx?.describedBy,\n        id: ctx?.inputId || id,\n      }\n    : {};\n\n  return (\n    <Box\n      {...getStyles('wrapper')}\n      {...styleProps}\n      {...wrapperProps}\n      mod={[\n        {\n          error: !!error && withErrorStyles,\n          pointer,\n          disabled,\n          multiline,\n          'data-with-right-section': !!rightSection,\n          'data-with-left-section': !!leftSection,\n        },\n        mod,\n      ]}\n      variant={variant}\n      size={size}\n    >\n      {leftSection && (\n        <div\n          {...leftSectionProps}\n          data-position=\"left\"\n          {...getStyles('section', {\n            className: leftSectionProps?.className,\n            style: leftSectionProps?.style,\n          })}\n        >\n          {leftSection}\n        </div>\n      )}\n\n      <Box\n        component=\"input\"\n        {...rest}\n        {...ariaAttributes}\n        ref={ref}\n        required={required}\n        mod={{ disabled, error: !!error && withErrorStyles }}\n        variant={variant}\n        {...getStyles('input')}\n      />\n\n      {rightSection && (\n        <div\n          {...rightSectionProps}\n          data-position=\"right\"\n          {...getStyles('section', {\n            className: rightSectionProps?.className,\n            style: rightSectionProps?.style,\n          })}\n        >\n          {rightSection}\n        </div>\n      )}\n    </Box>\n  );\n});\n\nInput.classes = classes;\nInput.Wrapper = InputWrapper;\nInput.Label = InputLabel;\nInput.Error = InputError;\nInput.Description = InputDescription;\nInput.Placeholder = InputPlaceholder;\nInput.displayName = '@mantine/core/Input';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 4775, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4780, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Input/InputWrapper/InputWrapper.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const InputWrapper = registerClientReference(\n    function() { throw new Error(\"Attempted to call InputWrapper() from the server but InputWrapper is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Input/InputWrapper/InputWrapper.mjs\",\n    \"InputWrapper\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,eAAe,2RACxB;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,2FACA"}},
    {"offset": {"line": 4789, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4794, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Input/InputWrapper/InputWrapper.tsx"],"sourcesContent":["import React from 'react';\nimport { useId } from '@mantine/hooks';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getFontSize,\n  MantineSize,\n  rem,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../../core';\nimport {\n  InputDescription,\n  InputDescriptionCssVariables,\n  InputDescriptionStylesNames,\n} from '../InputDescription/InputDescription';\nimport {\n  InputError,\n  InputErrorCssVariables,\n  InputErrorStylesNames,\n} from '../InputError/InputError';\nimport {\n  InputLabel,\n  InputLabelCssVariables,\n  InputLabelStylesNames,\n} from '../InputLabel/InputLabel';\nimport { InputWrapperProvider } from '../InputWrapper.context';\nimport { getInputOffsets } from './get-input-offsets/get-input-offsets';\nimport classes from '../Input.module.css';\n\nexport type InputWrapperCssVariables = InputLabelCssVariables &\n  InputErrorCssVariables &\n  InputDescriptionCssVariables;\n\nexport type InputWrapperStylesNames =\n  | 'root'\n  | InputLabelStylesNames\n  | InputDescriptionStylesNames\n  | InputErrorStylesNames;\n\nexport interface __InputWrapperProps {\n  /** Contents of `Input.Label` component. If not set, label is not rendered. */\n  label?: React.ReactNode;\n\n  /** Contents of `Input.Description` component. If not set, description is not rendered. */\n  description?: React.ReactNode;\n\n  /** Contents of `Input.Error` component. If not set, error is not rendered. */\n  error?: React.ReactNode;\n\n  /** Adds required attribute to the input and a red asterisk on the right side of label, `false` by default */\n  required?: boolean;\n\n  /** Determines whether the required asterisk should be displayed. Overrides `required` prop. Does not add required attribute to the input. `false` by default */\n  withAsterisk?: boolean;\n\n  /** Props passed down to the `Input.Label` component */\n  labelProps?: Record<string, any>;\n\n  /** Props passed down to the `Input.Description` component */\n  descriptionProps?: Record<string, any>;\n\n  /** Props passed down to the `Input.Error` component */\n  errorProps?: Record<string, any>;\n\n  /** Input container component, `React.Fragment` by default */\n  inputContainer?: (children: React.ReactNode) => React.ReactNode;\n\n  /** Controls order of the elements, `['label', 'description', 'input', 'error']` by default */\n  inputWrapperOrder?: ('label' | 'input' | 'description' | 'error')[];\n}\n\nexport interface InputWrapperProps\n  extends __InputWrapperProps,\n    BoxProps,\n    StylesApiProps<InputWrapperFactory>,\n    ElementProps<'div'> {\n  __staticSelector?: string;\n\n  /** Props passed to Styles API context, replaces Input.Wrapper props */\n  __stylesApiProps?: Record<string, any>;\n\n  /** Static id used as base to generate `aria-` attributes, by default generates random id */\n  id?: string;\n\n  /** Controls size of `Input.Label`, `Input.Description` and `Input.Error` components */\n  size?: MantineSize | (string & {});\n\n  /** `Input.Label` root element, `'label'` by default */\n  labelElement?: 'label' | 'div';\n}\n\nexport type InputWrapperFactory = Factory<{\n  props: InputWrapperProps;\n  ref: HTMLDivElement;\n  stylesNames: InputWrapperStylesNames;\n  vars: InputWrapperCssVariables;\n}>;\n\nconst defaultProps: Partial<InputWrapperProps> = {\n  labelElement: 'label',\n  inputContainer: (children) => children,\n  inputWrapperOrder: ['label', 'description', 'input', 'error'],\n};\n\nconst varsResolver = createVarsResolver<InputWrapperFactory>((_, { size }) => ({\n  label: {\n    '--input-label-size': getFontSize(size),\n    '--input-asterisk-color': undefined,\n  },\n\n  error: {\n    '--input-error-size': size === undefined ? undefined : `calc(${getFontSize(size)} - ${rem(2)})`,\n  },\n\n  description: {\n    '--input-description-size':\n      size === undefined ? undefined : `calc(${getFontSize(size)} - ${rem(2)})`,\n  },\n}));\n\nexport const InputWrapper = factory<InputWrapperFactory>((_props, ref) => {\n  const props = useProps('InputWrapper', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    size,\n    variant,\n    __staticSelector,\n    inputContainer,\n    inputWrapperOrder,\n    label,\n    error,\n    description,\n    labelProps,\n    descriptionProps,\n    errorProps,\n    labelElement,\n    children,\n    withAsterisk,\n    id,\n    required,\n    __stylesApiProps,\n    mod,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<InputWrapperFactory>({\n    name: ['InputWrapper', __staticSelector],\n    props: __stylesApiProps || props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  const sharedProps = {\n    size,\n    variant,\n    __staticSelector,\n  };\n\n  const idBase = useId(id);\n  const isRequired = typeof withAsterisk === 'boolean' ? withAsterisk : required;\n  const errorId = errorProps?.id || `${idBase}-error`;\n  const descriptionId = descriptionProps?.id || `${idBase}-description`;\n  const inputId = idBase;\n  const hasError = !!error && typeof error !== 'boolean';\n  const hasDescription = !!description;\n  const _describedBy = `${hasError ? errorId : ''} ${hasDescription ? descriptionId : ''}`;\n  const describedBy = _describedBy.trim().length > 0 ? _describedBy.trim() : undefined;\n  const labelId = labelProps?.id || `${idBase}-label`;\n\n  const _label = label && (\n    <InputLabel\n      key=\"label\"\n      labelElement={labelElement}\n      id={labelId}\n      htmlFor={inputId}\n      required={isRequired}\n      {...sharedProps}\n      {...labelProps}\n    >\n      {label}\n    </InputLabel>\n  );\n\n  const _description = hasDescription && (\n    <InputDescription\n      key=\"description\"\n      {...descriptionProps}\n      {...sharedProps}\n      size={descriptionProps?.size || sharedProps.size}\n      id={descriptionProps?.id || descriptionId}\n    >\n      {description}\n    </InputDescription>\n  );\n\n  const _input = <React.Fragment key=\"input\">{inputContainer!(children)}</React.Fragment>;\n\n  const _error = hasError && (\n    <InputError\n      {...errorProps}\n      {...sharedProps}\n      size={errorProps?.size || sharedProps.size}\n      key=\"error\"\n      id={errorProps?.id || errorId}\n    >\n      {error}\n    </InputError>\n  );\n\n  const content = inputWrapperOrder!.map((part) => {\n    switch (part) {\n      case 'label':\n        return _label;\n      case 'input':\n        return _input;\n      case 'description':\n        return _description;\n      case 'error':\n        return _error;\n      default:\n        return null;\n    }\n  });\n\n  return (\n    <InputWrapperProvider\n      value={{\n        getStyles,\n        describedBy,\n        inputId,\n        labelId,\n        ...getInputOffsets(inputWrapperOrder!, { hasDescription, hasError }),\n      }}\n    >\n      <Box\n        ref={ref}\n        variant={variant}\n        size={size}\n        mod={[{ error: !!error }, mod]}\n        {...getStyles('root')}\n        {...others}\n      >\n        {content}\n      </Box>\n    </InputWrapperProvider>\n  );\n});\n\nInputWrapper.classes = classes;\nInputWrapper.displayName = '@mantine/core/InputWrapper';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 4799, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4804, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Input/InputDescription/InputDescription.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const InputDescription = registerClientReference(\n    function() { throw new Error(\"Attempted to call InputDescription() from the server but InputDescription is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Input/InputDescription/InputDescription.mjs\",\n    \"InputDescription\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,mBAAmB,2RAC5B;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,mGACA"}},
    {"offset": {"line": 4813, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4818, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Input/InputDescription/InputDescription.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getFontSize,\n  MantineSize,\n  rem,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../../core';\nimport { useInputWrapperContext } from '../InputWrapper.context';\nimport classes from '../Input.module.css';\n\nexport type InputDescriptionStylesNames = 'description';\nexport type InputDescriptionCssVariables = {\n  description: '--input-description-size';\n};\n\nexport interface InputDescriptionProps\n  extends BoxProps,\n    StylesApiProps<InputDescriptionFactory>,\n    ElementProps<'div'> {\n  __staticSelector?: string;\n  __inheritStyles?: boolean;\n\n  /** Controls description `font-size`, `'sm'` by default */\n  size?: MantineSize | (string & {});\n}\n\nexport type InputDescriptionFactory = Factory<{\n  props: InputDescriptionProps;\n  ref: HTMLParagraphElement;\n  stylesNames: InputDescriptionStylesNames;\n  vars: InputDescriptionCssVariables;\n}>;\n\nconst defaultProps: Partial<InputDescriptionProps> = {};\n\nconst varsResolver = createVarsResolver<InputDescriptionFactory>((_, { size }) => ({\n  description: {\n    '--input-description-size':\n      size === undefined ? undefined : `calc(${getFontSize(size)} - ${rem(2)})`,\n  },\n}));\n\nexport const InputDescription = factory<InputDescriptionFactory>((_props, ref) => {\n  const props = useProps('InputDescription', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    size,\n    __staticSelector,\n    __inheritStyles = true,\n    variant,\n    ...others\n  } = useProps('InputDescription', defaultProps, props);\n  const ctx = useInputWrapperContext();\n\n  const _getStyles = useStyles<InputDescriptionFactory>({\n    name: ['InputWrapper', __staticSelector],\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    rootSelector: 'description',\n    vars,\n    varsResolver,\n  });\n\n  const getStyles = (__inheritStyles && ctx?.getStyles) || _getStyles;\n\n  return (\n    <Box\n      component=\"p\"\n      ref={ref}\n      variant={variant}\n      size={size}\n      {...getStyles('description', ctx?.getStyles ? { className, style } : undefined)}\n      {...others}\n    />\n  );\n});\n\nInputDescription.classes = classes;\nInputDescription.displayName = '@mantine/core/InputDescription';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 4823, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4828, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Input/InputError/InputError.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const InputError = registerClientReference(\n    function() { throw new Error(\"Attempted to call InputError() from the server but InputError is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Input/InputError/InputError.mjs\",\n    \"InputError\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,aAAa,2RACtB;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,uFACA"}},
    {"offset": {"line": 4837, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4842, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Input/InputError/InputError.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getFontSize,\n  MantineSize,\n  rem,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../../core';\nimport { useInputWrapperContext } from '../InputWrapper.context';\nimport classes from '../Input.module.css';\n\nexport type InputErrorStylesNames = 'error';\nexport type InputErrorCssVariables = {\n  error: '--input-error-size';\n};\n\nexport interface InputErrorProps\n  extends BoxProps,\n    StylesApiProps<InputErrorFactory>,\n    ElementProps<'div'> {\n  __staticSelector?: string;\n  __inheritStyles?: boolean;\n\n  /** Controls error `font-size`, `'sm'` by default */\n  size?: MantineSize | (string & {});\n}\n\nexport type InputErrorFactory = Factory<{\n  props: InputErrorProps;\n  ref: HTMLParagraphElement;\n  stylesNames: InputErrorStylesNames;\n  vars: InputErrorCssVariables;\n}>;\n\nconst defaultProps: Partial<InputErrorProps> = {};\n\nconst varsResolver = createVarsResolver<InputErrorFactory>((_, { size }) => ({\n  error: {\n    '--input-error-size': size === undefined ? undefined : `calc(${getFontSize(size)} - ${rem(2)})`,\n  },\n}));\n\nexport const InputError = factory<InputErrorFactory>((_props, ref) => {\n  const props = useProps('InputError', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    size,\n    __staticSelector,\n    __inheritStyles = true,\n    variant,\n    ...others\n  } = props;\n\n  const _getStyles = useStyles<InputErrorFactory>({\n    name: ['InputWrapper', __staticSelector],\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    rootSelector: 'error',\n    vars,\n    varsResolver,\n  });\n\n  const ctx = useInputWrapperContext();\n  const getStyles = (__inheritStyles && ctx?.getStyles) || _getStyles;\n\n  return (\n    <Box\n      component=\"p\"\n      ref={ref}\n      variant={variant}\n      size={size}\n      {...getStyles('error', ctx?.getStyles ? { className, style } : undefined)}\n      {...others}\n    />\n  );\n});\n\nInputError.classes = classes;\nInputError.displayName = '@mantine/core/InputError';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 4847, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4852, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Input/InputLabel/InputLabel.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const InputLabel = registerClientReference(\n    function() { throw new Error(\"Attempted to call InputLabel() from the server but InputLabel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Input/InputLabel/InputLabel.mjs\",\n    \"InputLabel\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,aAAa,2RACtB;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,uFACA"}},
    {"offset": {"line": 4861, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4866, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Input/InputLabel/InputLabel.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getFontSize,\n  MantineSize,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../../core';\nimport { useInputWrapperContext } from '../InputWrapper.context';\nimport classes from '../Input.module.css';\n\nexport type InputLabelStylesNames = 'label' | 'required';\nexport type InputLabelCssVariables = {\n  label: '--input-asterisk-color' | '--input-label-size';\n};\n\nexport interface InputLabelProps\n  extends BoxProps,\n    StylesApiProps<InputLabelFactory>,\n    ElementProps<'label'> {\n  __staticSelector?: string;\n\n  /** Determines whether the required asterisk should be displayed  */\n  required?: boolean;\n\n  /** Controls label `font-size`, `'sm'` by default */\n  size?: MantineSize | (string & {});\n\n  /** Root element of the label, `'label'` by default */\n  labelElement?: 'label' | 'div';\n}\n\nexport type InputLabelFactory = Factory<{\n  props: InputLabelProps;\n  ref: HTMLLabelElement;\n  stylesNames: InputLabelStylesNames;\n  vars: InputLabelCssVariables;\n}>;\n\nconst defaultProps: Partial<InputLabelProps> = {\n  labelElement: 'label',\n};\n\nconst varsResolver = createVarsResolver<InputLabelFactory>((_, { size }) => ({\n  label: {\n    '--input-label-size': getFontSize(size),\n    '--input-asterisk-color': undefined,\n  },\n}));\n\nexport const InputLabel = factory<InputLabelFactory>((_props, ref) => {\n  const props = useProps('InputLabel', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    labelElement,\n    size,\n    required,\n    htmlFor,\n    onMouseDown,\n    children,\n    __staticSelector,\n    variant,\n    mod,\n    ...others\n  } = useProps('InputLabel', defaultProps, props);\n\n  const _getStyles = useStyles<InputLabelFactory>({\n    name: ['InputWrapper', __staticSelector],\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    rootSelector: 'label',\n    vars,\n    varsResolver,\n  });\n\n  const ctx = useInputWrapperContext();\n  const getStyles = ctx?.getStyles || _getStyles;\n\n  return (\n    <Box\n      {...getStyles('label', ctx?.getStyles ? { className, style } : undefined)}\n      component={labelElement as 'label'}\n      variant={variant}\n      size={size}\n      ref={ref}\n      htmlFor={labelElement === 'label' ? htmlFor : undefined}\n      mod={[{ required }, mod]}\n      onMouseDown={(event) => {\n        onMouseDown?.(event);\n        if (!event.defaultPrevented && event.detail > 1) {\n          event.preventDefault();\n        }\n      }}\n      {...others}\n    >\n      {children}\n      {required && (\n        <span {...getStyles('required')} aria-hidden>\n          {' *'}\n        </span>\n      )}\n    </Box>\n  );\n});\n\nInputLabel.classes = classes;\nInputLabel.displayName = '@mantine/core/InputLabel';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 4871, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4876, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Input/InputPlaceholder/InputPlaceholder.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const InputPlaceholder = registerClientReference(\n    function() { throw new Error(\"Attempted to call InputPlaceholder() from the server but InputPlaceholder is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Input/InputPlaceholder/InputPlaceholder.mjs\",\n    \"InputPlaceholder\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,mBAAmB,2RAC5B;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,mGACA"}},
    {"offset": {"line": 4885, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4890, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Input/InputPlaceholder/InputPlaceholder.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  ElementProps,\n  factory,\n  Factory,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../../core';\nimport classes from '../Input.module.css';\n\nexport type InputPlaceholderStylesNames = 'placeholder';\n\nexport interface InputPlaceholderProps\n  extends BoxProps,\n    StylesApiProps<InputPlaceholderFactory>,\n    ElementProps<'span'> {\n  __staticSelector?: string;\n\n  /** If set, the placeholder will have error styles, `false` by default */\n  error?: React.ReactNode;\n}\n\nexport type InputPlaceholderFactory = Factory<{\n  props: InputPlaceholderProps;\n  ref: HTMLSpanElement;\n  stylesNames: InputPlaceholderStylesNames;\n}>;\n\nconst defaultProps: Partial<InputPlaceholderProps> = {};\n\nexport const InputPlaceholder = factory<InputPlaceholderFactory>((_props, ref) => {\n  const props = useProps('InputPlaceholder', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    __staticSelector,\n    variant,\n    error,\n    mod,\n    ...others\n  } = useProps('InputPlaceholder', defaultProps, props);\n\n  const getStyles = useStyles<InputPlaceholderFactory>({\n    name: ['InputPlaceholder', __staticSelector],\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    rootSelector: 'placeholder',\n  });\n\n  return (\n    <Box\n      {...getStyles('placeholder')}\n      mod={[{ error: !!error }, mod]}\n      component=\"span\"\n      variant={variant}\n      ref={ref}\n      {...others}\n    />\n  );\n});\n\nInputPlaceholder.classes = classes;\nInputPlaceholder.displayName = '@mantine/core/InputPlaceholder';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 4895, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4900, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Input/use-input-props.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const useInputProps = registerClientReference(\n    function() { throw new Error(\"Attempted to call useInputProps() from the server but useInputProps is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Input/use-input-props.mjs\",\n    \"useInputProps\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,gBAAgB,2RACzB;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,iFACA"}},
    {"offset": {"line": 4909, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4914, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Input/use-input-props.ts"],"sourcesContent":["import { BoxProps, extractStyleProps, StylesApiProps, useProps } from '../../core';\nimport { __BaseInputProps } from './Input';\n\ninterface BaseProps\n  extends __BaseInputProps,\n    BoxProps,\n    StylesApiProps<{ props: any; stylesNames: string }> {\n  __staticSelector?: string;\n  __stylesApiProps?: Record<string, any>;\n  id?: string;\n}\n\nexport function useInputProps<T extends BaseProps, U extends Partial<T>>(\n  component: string,\n  defaultProps: U,\n  _props: T\n) {\n  const props = useProps<T>(component, defaultProps, _props);\n  const {\n    label,\n    description,\n    error,\n    required,\n    classNames,\n    styles,\n    className,\n    unstyled,\n    __staticSelector,\n    __stylesApiProps,\n    errorProps,\n    labelProps,\n    descriptionProps,\n    wrapperProps: _wrapperProps,\n    id,\n    size,\n    style,\n    inputContainer,\n    inputWrapperOrder,\n    withAsterisk,\n    variant,\n    vars,\n    mod,\n    ...others\n  } = props;\n\n  const { styleProps, rest } = extractStyleProps(others);\n\n  const wrapperProps = {\n    label,\n    description,\n    error,\n    required,\n    classNames,\n    className,\n    __staticSelector,\n    __stylesApiProps: __stylesApiProps || props,\n    errorProps,\n    labelProps,\n    descriptionProps,\n    unstyled,\n    styles,\n    size,\n    style,\n    inputContainer,\n    inputWrapperOrder,\n    withAsterisk,\n    variant,\n    id,\n    mod,\n    ..._wrapperProps,\n  };\n\n  return {\n    ...rest,\n    classNames,\n    styles,\n    unstyled,\n    wrapperProps: { ...wrapperProps, ...styleProps } as typeof wrapperProps & BoxProps,\n    inputProps: {\n      required,\n      classNames,\n      styles,\n      unstyled,\n      size,\n      __staticSelector,\n      __stylesApiProps: __stylesApiProps || props,\n      error,\n      variant,\n      id,\n    },\n  };\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 4919, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4924, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Input/InputWrapper.context.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const InputWrapperProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call InputWrapperProvider() from the server but InputWrapperProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Input/InputWrapper.context.mjs\",\n    \"InputWrapperProvider\",\n);\nexport const useInputWrapperContext = registerClientReference(\n    function() { throw new Error(\"Attempted to call useInputWrapperContext() from the server but useInputWrapperContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Input/InputWrapper.context.mjs\",\n    \"useInputWrapperContext\",\n);\n"],"names":[],"mappings":";;;;;;;AACO,MAAM,uBAAuB,2RAChC;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,sFACA;AAEG,MAAM,yBAAyB,2RAClC;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,sFACA"}},
    {"offset": {"line": 4937, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4942, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Input/InputWrapper.context.ts"],"sourcesContent":["import { createOptionalContext, GetStylesApi } from '../../core';\nimport type { InputWrapperFactory } from './InputWrapper/InputWrapper';\n\ninterface InputWrapperContextValue {\n  offsetTop: boolean;\n  offsetBottom: boolean;\n  describedBy: string | undefined;\n  inputId: string | undefined;\n  labelId: string | undefined;\n  getStyles: GetStylesApi<InputWrapperFactory> | null;\n}\n\nexport const [InputWrapperProvider, useInputWrapperContext] =\n  createOptionalContext<InputWrapperContextValue>({\n    offsetBottom: false,\n    offsetTop: false,\n    describedBy: undefined,\n    getStyles: null,\n    inputId: undefined,\n    labelId: undefined,\n  });\n"],"names":[],"mappings":""}},
    {"offset": {"line": 4947, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4952, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/InputBase/InputBase.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const InputBase = registerClientReference(\n    function() { throw new Error(\"Attempted to call InputBase() from the server but InputBase is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/InputBase/InputBase.mjs\",\n    \"InputBase\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,YAAY,2RACrB;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,+EACA"}},
    {"offset": {"line": 4961, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4966, "column": 0}, "map": {"version":3,"sources":["../../../src/components/InputBase/InputBase.tsx"],"sourcesContent":["import React from 'react';\nimport { BoxProps, polymorphicFactory, PolymorphicFactory, StylesApiProps } from '../../core';\nimport { __BaseInputProps, __InputStylesNames, Input, InputVariant, useInputProps } from '../Input';\n\nexport interface InputBaseProps\n  extends BoxProps,\n    __BaseInputProps,\n    StylesApiProps<InputBaseFactory> {\n  __staticSelector?: string;\n  __stylesApiProps?: Record<string, any>;\n\n  /** Props passed down to the root element (`Input.Wrapper` component) */\n  wrapperProps?: Record<string, any>;\n\n  /** Determines whether the input can have multiple lines, for example when `component=\"textarea\"`, `false` by default */\n  multiline?: boolean;\n\n  /** Determines whether `aria-` and other accessibility attributes should be added to the input, `true` by default */\n  withAria?: boolean;\n}\n\nexport type InputBaseFactory = PolymorphicFactory<{\n  props: InputBaseProps;\n  defaultRef: HTMLInputElement;\n  defaultComponent: 'input';\n  stylesNames: __InputStylesNames;\n  variant: InputVariant;\n}>;\n\nconst defaultProps: Partial<InputBaseProps> = {\n  __staticSelector: 'InputBase',\n  withAria: true,\n};\n\nexport const InputBase = polymorphicFactory<InputBaseFactory>((props, ref) => {\n  const { inputProps, wrapperProps, ...others } = useInputProps('InputBase', defaultProps, props);\n  return (\n    <Input.Wrapper {...wrapperProps}>\n      <Input {...inputProps} {...others} ref={ref} />\n    </Input.Wrapper>\n  );\n});\n\nInputBase.classes = { ...Input.classes, ...Input.Wrapper.classes };\nInputBase.displayName = '@mantine/core/InputBase';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 4971, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4976, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Flex/flex-props.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const FLEX_STYLE_PROPS_DATA = registerClientReference(\n    function() { throw new Error(\"Attempted to call FLEX_STYLE_PROPS_DATA() from the server but FLEX_STYLE_PROPS_DATA is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Flex/flex-props.mjs\",\n    \"FLEX_STYLE_PROPS_DATA\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,wBAAwB,2RACjC;IAAa,MAAM,IAAI,MAAM;AAA0P,GACvR,2EACA"}},
    {"offset": {"line": 4985, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4990, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Flex/flex-props.ts"],"sourcesContent":["import { SystemPropData } from '../../core';\n\nexport const FLEX_STYLE_PROPS_DATA: Record<string, SystemPropData> = {\n  gap: { type: 'spacing', property: 'gap' },\n  rowGap: { type: 'spacing', property: 'rowGap' },\n  columnGap: { type: 'spacing', property: 'columnGap' },\n\n  align: { type: 'identity', property: 'alignItems' },\n  justify: { type: 'identity', property: 'justifyContent' },\n  wrap: { type: 'identity', property: 'flexWrap' },\n  direction: { type: 'identity', property: 'flexDirection' },\n};\n"],"names":[],"mappings":""}},
    {"offset": {"line": 4995, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5000, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Flex/Flex.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Flex = registerClientReference(\n    function() { throw new Error(\"Attempted to call Flex() from the server but Flex is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Flex/Flex.mjs\",\n    \"Flex\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,OAAO,2RAChB;IAAa,MAAM,IAAI,MAAM;AAAwN,GACrP,qEACA"}},
    {"offset": {"line": 5009, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5014, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Flex/Flex.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  ElementProps,\n  filterProps,\n  InlineStyles,\n  MantineSize,\n  parseStyleProps,\n  polymorphicFactory,\n  PolymorphicFactory,\n  StyleProp,\n  StylesApiProps,\n  useMantineTheme,\n  useProps,\n  useRandomClassName,\n  useStyles,\n} from '../../core';\nimport { FLEX_STYLE_PROPS_DATA } from './flex-props';\nimport classes from './Flex.module.css';\n\nexport type FlexStylesNames = 'root';\n\nexport interface FlexProps extends BoxProps, StylesApiProps<FlexFactory>, ElementProps<'div'> {\n  /** `gap` CSS property */\n  gap?: StyleProp<MantineSize | (string & {}) | number>;\n\n  /** `row-gap` CSS property */\n  rowGap?: StyleProp<MantineSize | (string & {}) | number>;\n\n  /** `column-gap` CSS property */\n  columnGap?: StyleProp<MantineSize | (string & {}) | number>;\n\n  /** `align-items` CSS property */\n  align?: StyleProp<React.CSSProperties['alignItems']>;\n\n  /** `justify-content` CSS property */\n  justify?: StyleProp<React.CSSProperties['justifyContent']>;\n\n  /** `flex-wrap` CSS property */\n  wrap?: StyleProp<React.CSSProperties['flexWrap']>;\n\n  /** `flex-direction` CSS property */\n  direction?: StyleProp<React.CSSProperties['flexDirection']>;\n}\n\nexport type FlexFactory = PolymorphicFactory<{\n  props: FlexProps;\n  defaultRef: HTMLDivElement;\n  defaultComponent: 'div';\n  stylesNames: FlexStylesNames;\n}>;\n\nconst defaultProps: Partial<FlexProps> = {};\n\nexport const Flex = polymorphicFactory<FlexFactory>((_props, ref) => {\n  const props = useProps('Flex', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    gap,\n    rowGap,\n    columnGap,\n    align,\n    justify,\n    wrap,\n    direction,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<FlexFactory>({\n    name: 'Flex',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n  });\n\n  const theme = useMantineTheme();\n  const responsiveClassName = useRandomClassName();\n  const parsedStyleProps = parseStyleProps({\n    styleProps: { gap, rowGap, columnGap, align, justify, wrap, direction },\n    theme,\n    data: FLEX_STYLE_PROPS_DATA,\n  });\n\n  return (\n    <>\n      {parsedStyleProps.hasResponsiveStyles && (\n        <InlineStyles\n          selector={`.${responsiveClassName}`}\n          styles={parsedStyleProps.styles}\n          media={parsedStyleProps.media}\n        />\n      )}\n      <Box\n        ref={ref}\n        {...getStyles('root', {\n          className: responsiveClassName,\n          style: filterProps(parsedStyleProps.inlineStyles),\n        })}\n        {...others}\n      />\n    </>\n  );\n});\n\nFlex.classes = classes;\nFlex.displayName = '@mantine/core/Flex';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 5019, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5024, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/FloatingIndicator/FloatingIndicator.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const FloatingIndicator = registerClientReference(\n    function() { throw new Error(\"Attempted to call FloatingIndicator() from the server but FloatingIndicator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/FloatingIndicator/FloatingIndicator.mjs\",\n    \"FloatingIndicator\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,oBAAoB,2RAC7B;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,+FACA"}},
    {"offset": {"line": 5033, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5038, "column": 0}, "map": {"version":3,"sources":["../../../src/components/FloatingIndicator/FloatingIndicator.tsx"],"sourcesContent":["import React, { useRef } from 'react';\nimport { useMergedRef } from '@mantine/hooks';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { useFloatingIndicator } from './use-floating-indicator';\nimport classes from './FloatingIndicator.module.css';\n\nexport type FloatingIndicatorStylesNames = 'root';\nexport type FloatingIndicatorCssVariables = {\n  root: '--transition-duration';\n};\n\nexport interface FloatingIndicatorProps\n  extends BoxProps,\n    StylesApiProps<FloatingIndicatorFactory>,\n    ElementProps<'div'> {\n  /** Target element over which indicator should be displayed */\n  target: HTMLElement | null | undefined;\n\n  /** Parent element with relative position based on which indicator position should be calculated */\n  parent: HTMLElement | null | undefined;\n\n  /** Transition duration in ms, `150` by default */\n  transitionDuration?: number | string;\n\n  /** Determines whether indicator should be displayed after transition ends, should be set if used inside a container that has `transform: scale(n)` styles */\n  displayAfterTransitionEnd?: boolean;\n}\n\nexport type FloatingIndicatorFactory = Factory<{\n  props: FloatingIndicatorProps;\n  ref: HTMLDivElement;\n  stylesNames: FloatingIndicatorStylesNames;\n  vars: FloatingIndicatorCssVariables;\n}>;\n\nconst defaultProps: Partial<FloatingIndicatorProps> = {};\n\nconst varsResolver = createVarsResolver<FloatingIndicatorFactory>(\n  (_theme, { transitionDuration }) => ({\n    root: {\n      '--transition-duration':\n        typeof transitionDuration === 'number' ? `${transitionDuration}ms` : transitionDuration,\n    },\n  })\n);\n\nexport const FloatingIndicator = factory<FloatingIndicatorFactory>((_props, ref) => {\n  const props = useProps('FloatingIndicator', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    target,\n    parent,\n    transitionDuration,\n    mod,\n    displayAfterTransitionEnd,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<FloatingIndicatorFactory>({\n    name: 'FloatingIndicator',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  const innerRef = useRef<HTMLDivElement>(null);\n  const { initialized, hidden } = useFloatingIndicator({\n    target,\n    parent,\n    ref: innerRef,\n    displayAfterTransitionEnd,\n  });\n  const mergedRef = useMergedRef(ref, innerRef);\n\n  if (!target || !parent) {\n    return null;\n  }\n\n  return (\n    <Box ref={mergedRef} mod={[{ initialized, hidden }, mod]} {...getStyles('root')} {...others} />\n  );\n});\n\nFloatingIndicator.displayName = '@mantine/core/FloatingIndicator';\nFloatingIndicator.classes = classes;\n"],"names":[],"mappings":""}},
    {"offset": {"line": 5043, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5048, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Accordion/Accordion.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Accordion = registerClientReference(\n    function() { throw new Error(\"Attempted to call Accordion() from the server but Accordion is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Accordion/Accordion.mjs\",\n    \"Accordion\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,YAAY,2RACrB;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,+EACA"}},
    {"offset": {"line": 5057, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5062, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Accordion/Accordion.tsx"],"sourcesContent":["import React from 'react';\nimport { useId, useUncontrolled } from '@mantine/hooks';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  ExtendComponent,\n  Factory,\n  getRadius,\n  getSafeId,\n  MantineRadius,\n  MantineThemeComponent,\n  rem,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { AccordionProvider } from './Accordion.context';\nimport { AccordionChevronPosition, AccordionHeadingOrder, AccordionValue } from './Accordion.types';\nimport { AccordionChevron } from './AccordionChevron';\nimport { AccordionControl } from './AccordionControl/AccordionControl';\nimport { AccordionItem } from './AccordionItem/AccordionItem';\nimport { AccordionPanel } from './AccordionPanel/AccordionPanel';\nimport classes from './Accordion.module.css';\n\nexport type AccordionStylesNames =\n  | 'root'\n  | 'content'\n  | 'item'\n  | 'panel'\n  | 'icon'\n  | 'chevron'\n  | 'label'\n  | 'itemTitle'\n  | 'control';\n\nexport type AccordionVariant = 'default' | 'contained' | 'filled' | 'separated';\nexport type AccordionCssVariables = {\n  root: '--accordion-transition-duration' | '--accordion-chevron-size' | '--accordion-radius';\n};\n\nexport interface AccordionProps<Multiple extends boolean = false>\n  extends BoxProps,\n    StylesApiProps<AccordionFactory>,\n    ElementProps<'div', 'value' | 'defaultValue' | 'onChange'> {\n  /** Determines whether multiple items can be opened at a time, `false` by default */\n  multiple?: Multiple;\n\n  /** Value for controlled component */\n  value?: AccordionValue<Multiple>;\n\n  /** Default value for uncontrolled component */\n  defaultValue?: AccordionValue<Multiple>;\n\n  /** Called when value changes */\n  onChange?: (value: AccordionValue<Multiple>) => void;\n\n  /** Determines whether arrow key presses should loop though items (first to last and last to first), `true` by default */\n  loop?: boolean;\n\n  /** Transition duration in ms, `200` by default */\n  transitionDuration?: number;\n\n  /** Determines whether chevron rotation should be disabled, `false` by default */\n  disableChevronRotation?: boolean;\n\n  /** Position of the chevron relative to the item label, `right` by default */\n  chevronPosition?: AccordionChevronPosition;\n\n  /** Size of the chevron icon container, `24` by default */\n  chevronSize?: number | string;\n\n  /** Heading order, has no effect on visuals */\n  order?: AccordionHeadingOrder;\n\n  /** Custom chevron icon that will be used in all items */\n  chevron?: React.ReactNode;\n\n  /** Key of `theme.radius` or any valid CSS value to set border-radius. Numbers are converted to rem. `theme.defaultRadius` by default. */\n  radius?: MantineRadius;\n}\n\nexport type AccordionFactory = Factory<{\n  props: AccordionProps;\n  ref: HTMLDivElement;\n  stylesNames: AccordionStylesNames;\n  vars: AccordionCssVariables;\n  variant: AccordionVariant;\n}>;\n\nconst defaultProps: Partial<AccordionProps> = {\n  multiple: false,\n  disableChevronRotation: false,\n  chevronPosition: 'right',\n  variant: 'default',\n  chevron: <AccordionChevron />,\n};\n\nconst varsResolver = createVarsResolver<AccordionFactory>(\n  (_, { transitionDuration, chevronSize, radius }) => ({\n    root: {\n      '--accordion-transition-duration':\n        transitionDuration === undefined ? undefined : `${transitionDuration}ms`,\n      '--accordion-chevron-size': chevronSize === undefined ? undefined : rem(chevronSize),\n      '--accordion-radius': radius === undefined ? undefined : getRadius(radius),\n    },\n  })\n);\n\nexport function Accordion<Multiple extends boolean = false>(_props: AccordionProps<Multiple>) {\n  const props = useProps('Accordion', defaultProps as AccordionProps<Multiple>, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    children,\n    multiple,\n    value,\n    defaultValue,\n    onChange,\n    id,\n    loop,\n    transitionDuration,\n    disableChevronRotation,\n    chevronPosition,\n    chevronSize,\n    order,\n    chevron,\n    variant,\n    radius,\n    ...others\n  } = props;\n\n  const uid = useId(id);\n  const [_value, handleChange] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: multiple ? ([] as any) : null,\n    onChange,\n  });\n\n  const isItemActive = (itemValue: string) =>\n    Array.isArray(_value) ? _value.includes(itemValue) : itemValue === _value;\n\n  const handleItemChange = (itemValue: string) => {\n    const nextValue: AccordionValue<Multiple> = Array.isArray(_value)\n      ? _value.includes(itemValue)\n        ? _value.filter((selectedValue) => selectedValue !== itemValue)\n        : [..._value, itemValue]\n      : itemValue === _value\n        ? null\n        : (itemValue as any);\n\n    handleChange(nextValue);\n  };\n\n  const getStyles = useStyles<AccordionFactory>({\n    name: 'Accordion',\n    classes,\n    props: props as AccordionProps,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <AccordionProvider\n      value={{\n        isItemActive,\n        onChange: handleItemChange,\n        getControlId: getSafeId(\n          `${uid}-control`,\n          'Accordion.Item component was rendered with invalid value or without value'\n        ),\n        getRegionId: getSafeId(\n          `${uid}-panel`,\n          'Accordion.Item component was rendered with invalid value or without value'\n        ),\n        transitionDuration,\n        disableChevronRotation,\n        chevronPosition,\n        order,\n        chevron,\n        loop,\n        getStyles,\n        variant,\n        unstyled,\n      }}\n    >\n      <Box {...getStyles('root')} id={uid} {...others} variant={variant} data-accordion>\n        {children}\n      </Box>\n    </AccordionProvider>\n  );\n}\n\nconst extendAccordion = (c: ExtendComponent<AccordionFactory>): MantineThemeComponent => c;\n\nAccordion.extend = extendAccordion;\nAccordion.classes = classes;\nAccordion.displayName = '@mantine/core/Accordion';\nAccordion.Item = AccordionItem;\nAccordion.Panel = AccordionPanel;\nAccordion.Control = AccordionControl;\nAccordion.Chevron = AccordionChevron;\n"],"names":[],"mappings":""}},
    {"offset": {"line": 5067, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5072, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Accordion/AccordionChevron.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AccordionChevron = registerClientReference(\n    function() { throw new Error(\"Attempted to call AccordionChevron() from the server but AccordionChevron is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Accordion/AccordionChevron.mjs\",\n    \"AccordionChevron\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,mBAAmB,2RAC5B;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,sFACA"}},
    {"offset": {"line": 5081, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5086, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Accordion/AccordionChevron.tsx"],"sourcesContent":["import React from 'react';\nimport { rem } from '../../core';\n\nexport interface AccordionChevronProps extends React.ComponentPropsWithoutRef<'svg'> {\n  /** Controls `width` and `height` of the icon, `16` by default */\n  size?: number | string;\n}\n\nexport function AccordionChevron({ style, size = 16, ...others }: AccordionChevronProps) {\n  return (\n    <svg\n      viewBox=\"0 0 15 15\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      style={{ ...style, width: rem(size), height: rem(size), display: 'block' }}\n      {...others}\n    >\n      <path\n        d=\"M3.13523 6.15803C3.3241 5.95657 3.64052 5.94637 3.84197 6.13523L7.5 9.56464L11.158 6.13523C11.3595 5.94637 11.6759 5.95657 11.8648 6.15803C12.0536 6.35949 12.0434 6.67591 11.842 6.86477L7.84197 10.6148C7.64964 10.7951 7.35036 10.7951 7.15803 10.6148L3.15803 6.86477C2.95657 6.67591 2.94637 6.35949 3.13523 6.15803Z\"\n        fill=\"currentColor\"\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n      />\n    </svg>\n  );\n}\n\nAccordionChevron.displayName = '@mantine/core/AccordionChevron';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 5091, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5096, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Accordion/AccordionItem/AccordionItem.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AccordionItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call AccordionItem() from the server but AccordionItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Accordion/AccordionItem/AccordionItem.mjs\",\n    \"AccordionItem\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,gBAAgB,2RACzB;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,iGACA"}},
    {"offset": {"line": 5105, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5110, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Accordion/AccordionItem/AccordionItem.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  CompoundStylesApiProps,\n  ElementProps,\n  factory,\n  Factory,\n  useProps,\n} from '../../../core';\nimport { useAccordionContext } from '../Accordion.context';\nimport { AccordionItemProvider } from '../AccordionItem.context';\nimport classes from '../Accordion.module.css';\n\nexport type AccordionItemStylesNames = 'item';\n\nexport interface AccordionItemProps\n  extends BoxProps,\n    CompoundStylesApiProps<AccordionItemFactory>,\n    ElementProps<'div'> {\n  /** Value that is used to manage accordion state */\n  value: string;\n}\n\nexport type AccordionItemFactory = Factory<{\n  props: AccordionItemProps;\n  ref: HTMLDivElement;\n  stylesNames: AccordionItemStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<AccordionItemProps> = {};\n\nexport const AccordionItem = factory<AccordionItemFactory>((props, ref) => {\n  const { classNames, className, style, styles, vars, value, mod, ...others } = useProps(\n    'AccordionItem',\n    defaultProps,\n    props\n  );\n  const ctx = useAccordionContext();\n\n  return (\n    <AccordionItemProvider value={{ value }}>\n      <Box\n        ref={ref}\n        mod={[{ active: ctx.isItemActive(value) }, mod]}\n        {...ctx.getStyles('item', { className, classNames, styles, style, variant: ctx.variant })}\n        {...others}\n      />\n    </AccordionItemProvider>\n  );\n});\n\nAccordionItem.displayName = '@mantine/core/AccordionItem';\nAccordionItem.classes = classes;\n"],"names":[],"mappings":""}},
    {"offset": {"line": 5115, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5120, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Accordion/AccordionPanel/AccordionPanel.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AccordionPanel = registerClientReference(\n    function() { throw new Error(\"Attempted to call AccordionPanel() from the server but AccordionPanel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Accordion/AccordionPanel/AccordionPanel.mjs\",\n    \"AccordionPanel\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,iBAAiB,2RAC1B;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,mGACA"}},
    {"offset": {"line": 5129, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5134, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Accordion/AccordionPanel/AccordionPanel.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  BoxProps,\n  CompoundStylesApiProps,\n  ElementProps,\n  factory,\n  Factory,\n  useProps,\n} from '../../../core';\nimport { Collapse } from '../../Collapse';\nimport { useAccordionContext } from '../Accordion.context';\nimport { useAccordionItemContext } from '../AccordionItem.context';\nimport classes from '../Accordion.module.css';\n\nexport type AccordionPanelStylesNames = 'panel' | 'content';\n\nexport interface AccordionPanelProps\n  extends BoxProps,\n    CompoundStylesApiProps<AccordionPanelFactory>,\n    ElementProps<'div', 'onTransitionEnd'> {}\n\nexport type AccordionPanelFactory = Factory<{\n  props: AccordionPanelProps;\n  ref: HTMLDivElement;\n  stylesNames: AccordionPanelStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<AccordionPanelProps> = {};\n\nexport const AccordionPanel = factory<AccordionPanelFactory>((props, ref) => {\n  const { classNames, className, style, styles, vars, children, ...others } = useProps(\n    'AccordionPanel',\n    defaultProps,\n    props\n  );\n\n  const { value } = useAccordionItemContext();\n  const ctx = useAccordionContext();\n\n  return (\n    <Collapse\n      ref={ref}\n      {...ctx.getStyles('panel', { className, classNames, style, styles })}\n      {...others}\n      in={ctx.isItemActive(value)}\n      transitionDuration={ctx.transitionDuration ?? 200}\n      role=\"region\"\n      id={ctx.getRegionId(value)}\n      aria-labelledby={ctx.getControlId(value)}\n    >\n      <div {...ctx.getStyles('content', { classNames, styles })}>{children}</div>\n    </Collapse>\n  );\n});\n\nAccordionPanel.displayName = '@mantine/core/AccordionPanel';\nAccordionPanel.classes = classes;\n"],"names":[],"mappings":""}},
    {"offset": {"line": 5139, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5144, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Accordion/AccordionControl/AccordionControl.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AccordionControl = registerClientReference(\n    function() { throw new Error(\"Attempted to call AccordionControl() from the server but AccordionControl is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Accordion/AccordionControl/AccordionControl.mjs\",\n    \"AccordionControl\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,mBAAmB,2RAC5B;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,uGACA"}},
    {"offset": {"line": 5153, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5158, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Accordion/AccordionControl/AccordionControl.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  CompoundStylesApiProps,\n  createScopedKeydownHandler,\n  ElementProps,\n  factory,\n  Factory,\n  useProps,\n} from '../../../core';\nimport { UnstyledButton } from '../../UnstyledButton';\nimport { useAccordionContext } from '../Accordion.context';\nimport { useAccordionItemContext } from '../AccordionItem.context';\nimport classes from '../Accordion.module.css';\n\nexport type AccordionControlStylesNames = 'control' | 'chevron' | 'label' | 'itemTitle' | 'icon';\n\nexport interface AccordionControlProps\n  extends BoxProps,\n    CompoundStylesApiProps<AccordionControlFactory>,\n    ElementProps<'button'> {\n  /** Disables control button */\n  disabled?: boolean;\n\n  /** Custom chevron icon */\n  chevron?: React.ReactNode;\n\n  /** Control label */\n  children?: React.ReactNode;\n\n  /** Icon displayed next to the label */\n  icon?: React.ReactNode;\n}\n\nexport type AccordionControlFactory = Factory<{\n  props: AccordionControlProps;\n  ref: HTMLButtonElement;\n  stylesNames: AccordionControlStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<AccordionControlProps> = {};\n\nexport const AccordionControl = factory<AccordionControlFactory>((props, ref) => {\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    vars,\n    chevron,\n    icon,\n    onClick,\n    onKeyDown,\n    children,\n    disabled,\n    mod,\n    ...others\n  } = useProps('AccordionControl', defaultProps, props);\n\n  const { value } = useAccordionItemContext();\n  const ctx = useAccordionContext();\n  const isActive = ctx.isItemActive(value);\n  const shouldWrapWithHeading = typeof ctx.order === 'number';\n  const Heading = `h${ctx.order!}` as const;\n\n  const content = (\n    <UnstyledButton<'button'>\n      {...others}\n      {...ctx.getStyles('control', { className, classNames, style, styles, variant: ctx.variant })}\n      unstyled={ctx.unstyled}\n      mod={[\n        'accordion-control',\n        { active: isActive, 'chevron-position': ctx.chevronPosition, disabled },\n        mod,\n      ]}\n      ref={ref}\n      onClick={(event) => {\n        onClick?.(event);\n        ctx.onChange(value);\n      }}\n      type=\"button\"\n      disabled={disabled}\n      aria-expanded={isActive}\n      aria-controls={ctx.getRegionId(value)}\n      id={ctx.getControlId(value)}\n      onKeyDown={createScopedKeydownHandler({\n        siblingSelector: '[data-accordion-control]',\n        parentSelector: '[data-accordion]',\n        activateOnFocus: false,\n        loop: ctx.loop,\n        orientation: 'vertical',\n        onKeyDown,\n      })}\n    >\n      <Box\n        component=\"span\"\n        mod={{ rotate: !ctx.disableChevronRotation && isActive, position: ctx.chevronPosition }}\n        {...ctx.getStyles('chevron', { classNames, styles })}\n      >\n        {chevron || ctx.chevron}\n      </Box>\n      <span {...ctx.getStyles('label', { classNames, styles })}>{children}</span>\n      {icon && (\n        <Box\n          component=\"span\"\n          mod={{ 'chevron-position': ctx.chevronPosition }}\n          {...ctx.getStyles('icon', { classNames, styles })}\n        >\n          {icon}\n        </Box>\n      )}\n    </UnstyledButton>\n  );\n\n  return shouldWrapWithHeading ? (\n    <Heading {...ctx.getStyles('itemTitle', { classNames, styles })}>{content}</Heading>\n  ) : (\n    content\n  );\n});\n\nAccordionControl.displayName = '@mantine/core/AccordionControl';\nAccordionControl.classes = classes;\n"],"names":[],"mappings":""}},
    {"offset": {"line": 5163, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5168, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Affix/Affix.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Affix = registerClientReference(\n    function() { throw new Error(\"Attempted to call Affix() from the server but Affix is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Affix/Affix.mjs\",\n    \"Affix\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,QAAQ,2RACjB;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,uEACA"}},
    {"offset": {"line": 5177, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5182, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Affix/Affix.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getDefaultZIndex,\n  rem,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { OptionalPortal, PortalProps } from '../Portal';\nimport classes from './Affix.module.css';\n\nexport type AffixStylesNames = 'root';\nexport type AffixCssVariables = {\n  root: '--affix-z-index' | '--affix-top' | '--affix-left' | '--affix-bottom' | '--affix-right';\n};\n\nexport interface AffixBaseProps {\n  /** Root element `z-index` property, `200` by default */\n  zIndex?: string | number;\n\n  /** Determines whether component should be rendered within portal, `true` by default */\n  withinPortal?: boolean;\n\n  /** Props to pass down to the `Portal` component when `withinPortal` is set */\n  portalProps?: Omit<PortalProps, 'children'>;\n\n  /** Affix position on screen, defaults value is `{ bottom: 0, right: 0 }` */\n  position?: {\n    top?: string | number;\n    left?: string | number;\n    bottom?: string | number;\n    right?: string | number;\n  };\n}\n\nexport interface AffixProps\n  extends BoxProps,\n    AffixBaseProps,\n    StylesApiProps<AffixFactory>,\n    ElementProps<'div'> {}\n\nexport type AffixFactory = Factory<{\n  props: AffixProps;\n  ref: HTMLDivElement;\n  stylesNames: AffixStylesNames;\n  vars: AffixCssVariables;\n}>;\n\nconst defaultProps: Partial<AffixProps> = {\n  position: { bottom: 0, right: 0 },\n  zIndex: getDefaultZIndex('modal'),\n  withinPortal: true,\n};\n\nconst varsResolver = createVarsResolver<AffixFactory>((_, { zIndex, position }) => ({\n  root: {\n    '--affix-z-index': zIndex?.toString(),\n    '--affix-top': rem(position?.top),\n    '--affix-left': rem(position?.left),\n    '--affix-bottom': rem(position?.bottom),\n    '--affix-right': rem(position?.right),\n  },\n}));\n\nexport const Affix = factory<AffixFactory>((_props, ref) => {\n  const props = useProps('Affix', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    portalProps,\n    zIndex,\n    withinPortal,\n    position,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<AffixFactory>({\n    name: 'Affix',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <OptionalPortal {...portalProps} withinPortal={withinPortal}>\n      <Box ref={ref} {...getStyles('root')} {...others} />\n    </OptionalPortal>\n  );\n});\n\nAffix.classes = classes;\nAffix.displayName = '@mantine/core/Affix';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 5187, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5192, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Alert/Alert.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Alert = registerClientReference(\n    function() { throw new Error(\"Attempted to call Alert() from the server but Alert is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Alert/Alert.mjs\",\n    \"Alert\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,QAAQ,2RACjB;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,uEACA"}},
    {"offset": {"line": 5201, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5206, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Alert/Alert.tsx"],"sourcesContent":["import React from 'react';\nimport { useId } from '@mantine/hooks';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getRadius,\n  MantineColor,\n  MantineRadius,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { CloseButton } from '../CloseButton';\nimport classes from './Alert.module.css';\n\nexport type AlertStylesNames =\n  | 'root'\n  | 'body'\n  | 'label'\n  | 'title'\n  | 'icon'\n  | 'wrapper'\n  | 'message'\n  | 'closeButton';\nexport type AlertVariant = 'filled' | 'light' | 'outline' | 'default' | 'transparent' | 'white';\nexport type AlertCssVariables = {\n  root: '--alert-radius' | '--alert-bg' | '--alert-color' | '--alert-bd';\n};\n\nexport interface AlertProps\n  extends BoxProps,\n    StylesApiProps<AlertFactory>,\n    ElementProps<'div', 'title'> {\n  /** Key of `theme.radius` or any valid CSS value to set border-radius, `theme.defaultRadius` by default */\n  radius?: MantineRadius;\n\n  /** Key of `theme.colors` or any valid CSS color, default value is `theme.primaryColor`  */\n  color?: MantineColor;\n\n  /** Alert title */\n  title?: React.ReactNode;\n\n  /** Icon displayed next to the title */\n  icon?: React.ReactNode;\n\n  /** Determines whether close button should be displayed, `false` by default */\n  withCloseButton?: boolean;\n\n  /** Called when the close button is clicked */\n  onClose?: () => void;\n\n  /** Close button `aria-label` */\n  closeButtonLabel?: string;\n\n  /** Determines whether text color with filled variant should depend on `background-color`. If luminosity of the `color` prop is less than `theme.luminosityThreshold`, then `theme.white` will be used for text color, otherwise `theme.black`. Overrides `theme.autoContrast`. */\n  autoContrast?: boolean;\n}\n\nexport type AlertFactory = Factory<{\n  props: AlertProps;\n  ref: HTMLDivElement;\n  stylesNames: AlertStylesNames;\n  vars: AlertCssVariables;\n  variant: AlertVariant;\n}>;\n\nconst defaultProps: Partial<AlertProps> = {};\n\nconst varsResolver = createVarsResolver<AlertFactory>(\n  (theme, { radius, color, variant, autoContrast }) => {\n    const colors = theme.variantColorResolver({\n      color: color || theme.primaryColor,\n      theme,\n      variant: variant || 'light',\n      autoContrast,\n    });\n\n    return {\n      root: {\n        '--alert-radius': radius === undefined ? undefined : getRadius(radius),\n        '--alert-bg': color || variant ? colors.background : undefined,\n        '--alert-color': colors.color,\n        '--alert-bd': color || variant ? colors.border : undefined,\n      },\n    };\n  }\n);\n\nexport const Alert = factory<AlertFactory>((_props, ref) => {\n  const props = useProps('Alert', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    radius,\n    color,\n    title,\n    children,\n    id,\n    icon,\n    withCloseButton,\n    onClose,\n    closeButtonLabel,\n    variant,\n    autoContrast,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<AlertFactory>({\n    name: 'Alert',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  const rootId = useId(id);\n  const titleId = (title && `${rootId}-title`) || undefined;\n  const bodyId = `${rootId}-body`;\n\n  return (\n    <Box\n      id={rootId}\n      {...getStyles('root', { variant })}\n      variant={variant}\n      ref={ref}\n      {...others}\n      role=\"alert\"\n      aria-describedby={bodyId}\n      aria-labelledby={titleId}\n    >\n      <div {...getStyles('wrapper')}>\n        {icon && <div {...getStyles('icon')}>{icon}</div>}\n\n        <div {...getStyles('body')}>\n          {title && (\n            <div {...getStyles('title')} data-with-close-button={withCloseButton || undefined}>\n              <span id={titleId} {...getStyles('label')}>\n                {title}\n              </span>\n            </div>\n          )}\n\n          {children && (\n            <div id={bodyId} {...getStyles('message')} data-variant={variant}>\n              {children}\n            </div>\n          )}\n        </div>\n\n        {withCloseButton && (\n          <CloseButton\n            {...getStyles('closeButton')}\n            onClick={onClose}\n            variant=\"transparent\"\n            size={16}\n            iconSize={16}\n            aria-label={closeButtonLabel}\n            unstyled={unstyled}\n          />\n        )}\n      </div>\n    </Box>\n  );\n});\n\nAlert.classes = classes;\nAlert.displayName = '@mantine/core/Alert';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 5211, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5216, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Anchor/Anchor.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Anchor = registerClientReference(\n    function() { throw new Error(\"Attempted to call Anchor() from the server but Anchor is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Anchor/Anchor.mjs\",\n    \"Anchor\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,SAAS,2RAClB;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,yEACA"}},
    {"offset": {"line": 5225, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5230, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Anchor/Anchor.tsx"],"sourcesContent":["import React from 'react';\nimport cx from 'clsx';\nimport { polymorphicFactory, PolymorphicFactory, useProps } from '../../core';\nimport { Text, TextCssVariables, TextProps, TextStylesNames, TextVariant } from '../Text';\nimport classes from './Anchor.module.css';\n\nexport type AnchorStylesNames = TextStylesNames;\nexport type AnchorVariant = TextVariant;\nexport type AnchorCssVariables = TextCssVariables;\n\nexport interface AnchorProps extends Omit<TextProps, 'span'> {\n  /** Determines in which cases link should have `text-decoration: underline` styles, `hover` by default */\n  underline?: 'always' | 'hover' | 'never';\n}\n\nexport type AnchorFactory = PolymorphicFactory<{\n  props: AnchorProps;\n  defaultComponent: 'a';\n  defaultRef: HTMLAnchorElement;\n  stylesNames: AnchorStylesNames;\n  vars: AnchorCssVariables;\n  variant: AnchorVariant;\n}>;\n\nconst defaultProps: Partial<AnchorProps> = {\n  underline: 'hover',\n};\n\nexport const Anchor = polymorphicFactory<AnchorFactory>((props, ref) => {\n  const { underline, className, unstyled, mod, ...others } = useProps(\n    'Anchor',\n    defaultProps,\n    props\n  );\n  return (\n    <Text\n      component=\"a\"\n      ref={ref}\n      className={cx({ [classes.root]: !unstyled }, className)}\n      {...others}\n      mod={[{ underline }, mod]}\n      __staticSelector=\"Anchor\"\n      unstyled={unstyled}\n    />\n  );\n});\n\nAnchor.classes = classes;\nAnchor.displayName = '@mantine/core/Anchor';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 5235, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5240, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/AppShell/AppShell.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AppShell = registerClientReference(\n    function() { throw new Error(\"Attempted to call AppShell() from the server but AppShell is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/AppShell/AppShell.mjs\",\n    \"AppShell\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,WAAW,2RACpB;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,6EACA"}},
    {"offset": {"line": 5249, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5254, "column": 0}, "map": {"version":3,"sources":["../../../src/components/AppShell/AppShell.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getDefaultZIndex,\n  MantineSpacing,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { AppShellProvider } from './AppShell.context';\nimport {\n  AppShellAsideConfiguration,\n  AppShellFooterConfiguration,\n  AppShellHeaderConfiguration,\n  AppShellNavbarConfiguration,\n  AppShellResponsiveSize,\n} from './AppShell.types';\nimport { AppShellAside } from './AppShellAside/AppShellAside';\nimport { AppShellFooter } from './AppShellFooter/AppShellFooter';\nimport { AppShellHeader } from './AppShellHeader/AppShellHeader';\nimport { AppShellMain } from './AppShellMain/AppShellMain';\nimport { AppShellMediaStyles } from './AppShellMediaStyles/AppShellMediaStyles';\nimport { AppShellNavbar } from './AppShellNavbar/AppShellNavbar';\nimport { AppShellSection } from './AppShellSection/AppShellSection';\nimport { useResizing } from './use-resizing/use-resizing';\nimport classes from './AppShell.module.css';\n\nexport type AppShellStylesNames =\n  | 'root'\n  | 'navbar'\n  | 'main'\n  | 'header'\n  | 'footer'\n  | 'aside'\n  | 'section';\n\nexport type AppShellCssVariables = {\n  root: '--app-shell-transition-duration' | '--app-shell-transition-timing-function';\n};\n\nexport interface AppShellProps\n  extends BoxProps,\n    StylesApiProps<AppShellFactory>,\n    ElementProps<'div'> {\n  /** Determines whether associated components should have a border, `true` by default */\n  withBorder?: boolean;\n\n  /** Controls padding of the main section, `0` by default. !important!: use `padding` prop instead of `p`. */\n  padding?: MantineSpacing | AppShellResponsiveSize;\n\n  /** AppShell.Navbar configuration, controls width, breakpoints and collapsed state. Required if you use AppShell.Navbar component. */\n  navbar?: AppShellNavbarConfiguration;\n\n  /** AppShell.Aside configuration, controls width, breakpoints and collapsed state. Required if you use AppShell.Aside component. */\n  aside?: AppShellAsideConfiguration;\n\n  /** AppShell.Header configuration, controls height, offset and collapsed state. Required if you use AppShell.Header component. */\n  header?: AppShellHeaderConfiguration;\n\n  /** AppShell.Footer configuration, controls height, offset and collapsed state. Required if you use AppShell.Footer component. */\n  footer?: AppShellFooterConfiguration;\n\n  /** Duration of all transitions in ms, `200` by default */\n  transitionDuration?: number;\n\n  /** Timing function of all transitions, `ease` by default */\n  transitionTimingFunction?: React.CSSProperties['transitionTimingFunction'];\n\n  /** `z-index` of all associated elements, `200` by default */\n  zIndex?: string | number;\n\n  /** Determines how Navbar/Aside are arranged relative to Header/Footer, `default` by default */\n  layout?: 'default' | 'alt';\n\n  /** If set, Navbar, Aside, Header and Footer components be hidden */\n  disabled?: boolean;\n\n  /** Determines whether Header and Footer components should include styles to offset scrollbars. Based on `react-remove-scroll`. `true` by default */\n  offsetScrollbars?: boolean;\n}\n\nexport type AppShellFactory = Factory<{\n  props: AppShellProps;\n  ref: HTMLDivElement;\n  stylesNames: AppShellStylesNames;\n  vars: AppShellCssVariables;\n  staticComponents: {\n    Navbar: typeof AppShellNavbar;\n    Header: typeof AppShellHeader;\n    Main: typeof AppShellMain;\n    Aside: typeof AppShellAside;\n    Footer: typeof AppShellFooter;\n    Section: typeof AppShellSection;\n  };\n}>;\n\nconst defaultProps: Partial<AppShellProps> = {\n  withBorder: true,\n  offsetScrollbars: true,\n  padding: 0,\n  transitionDuration: 200,\n  transitionTimingFunction: 'ease',\n  zIndex: getDefaultZIndex('app'),\n};\n\nconst varsResolver = createVarsResolver<AppShellFactory>(\n  (_, { transitionDuration, transitionTimingFunction }) => ({\n    root: {\n      '--app-shell-transition-duration': `${transitionDuration}ms`,\n      '--app-shell-transition-timing-function': transitionTimingFunction,\n    },\n  })\n);\n\nexport const AppShell = factory<AppShellFactory>((_props, ref) => {\n  const props = useProps('AppShell', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    navbar,\n    withBorder,\n    padding,\n    transitionDuration,\n    transitionTimingFunction,\n    header,\n    zIndex,\n    layout,\n    disabled,\n    aside,\n    footer,\n    offsetScrollbars,\n    mod,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<AppShellFactory>({\n    name: 'AppShell',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  const resizing = useResizing({ disabled, transitionDuration });\n\n  return (\n    <AppShellProvider value={{ getStyles, withBorder, zIndex, disabled, offsetScrollbars }}>\n      <AppShellMediaStyles\n        navbar={navbar}\n        header={header}\n        aside={aside}\n        footer={footer}\n        padding={padding}\n      />\n      <Box\n        ref={ref}\n        {...getStyles('root')}\n        mod={[{ resizing, layout, disabled }, mod]}\n        {...others}\n      />\n    </AppShellProvider>\n  );\n});\n\nAppShell.classes = classes;\nAppShell.displayName = '@mantine/core/AppShell';\nAppShell.Navbar = AppShellNavbar;\nAppShell.Header = AppShellHeader;\nAppShell.Main = AppShellMain;\nAppShell.Aside = AppShellAside;\nAppShell.Footer = AppShellFooter;\nAppShell.Section = AppShellSection;\n"],"names":[],"mappings":""}},
    {"offset": {"line": 5259, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5264, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/AppShell/AppShellAside/AppShellAside.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AppShellAside = registerClientReference(\n    function() { throw new Error(\"Attempted to call AppShellAside() from the server but AppShellAside is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/AppShell/AppShellAside/AppShellAside.mjs\",\n    \"AppShellAside\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,gBAAgB,2RACzB;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,gGACA"}},
    {"offset": {"line": 5273, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5278, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/AppShell/AppShellAside/AppShellAside.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  ElementProps,\n  factory,\n  Factory,\n  StylesApiProps,\n  useProps,\n} from '../../../core';\nimport { useAppShellContext } from '../AppShell.context';\nimport classes from '../AppShell.module.css';\n\nexport type AppShellAsideStylesNames = 'aside';\n\nexport interface AppShellAsideProps\n  extends BoxProps,\n    StylesApiProps<AppShellAsideFactory>,\n    ElementProps<'aside'> {\n  /** Determines whether component should have a border, overrides `withBorder` prop on `AppShell` component */\n  withBorder?: boolean;\n\n  /** Component `z-index`, by default inherited from the `AppShell` */\n  zIndex?: string | number;\n}\n\nexport type AppShellAsideFactory = Factory<{\n  props: AppShellAsideProps;\n  ref: HTMLElement;\n  stylesNames: AppShellAsideStylesNames;\n}>;\n\nconst defaultProps: Partial<AppShellAsideProps> = {};\n\nexport const AppShellAside = factory<AppShellAsideFactory>((_props, ref) => {\n  const props = useProps('AppShellAside', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    withBorder,\n    zIndex,\n    mod,\n    ...others\n  } = props;\n  const ctx = useAppShellContext();\n\n  if (ctx.disabled) {\n    return null;\n  }\n\n  return (\n    <Box\n      component=\"aside\"\n      ref={ref}\n      mod={[{ 'with-border': withBorder ?? ctx.withBorder }, mod]}\n      {...ctx.getStyles('aside', { className, classNames, styles, style })}\n      {...others}\n      __vars={{\n        '--app-shell-aside-z-index': `calc(${zIndex ?? ctx.zIndex} + 1)`,\n      }}\n    />\n  );\n});\n\nAppShellAside.classes = classes;\nAppShellAside.displayName = '@mantine/core/AppShellAside';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 5283, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5288, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/AppShell/AppShellFooter/AppShellFooter.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AppShellFooter = registerClientReference(\n    function() { throw new Error(\"Attempted to call AppShellFooter() from the server but AppShellFooter is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/AppShell/AppShellFooter/AppShellFooter.mjs\",\n    \"AppShellFooter\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,iBAAiB,2RAC1B;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,kGACA"}},
    {"offset": {"line": 5297, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5302, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/AppShell/AppShellFooter/AppShellFooter.tsx"],"sourcesContent":["import React from 'react';\nimport cx from 'clsx';\nimport { RemoveScroll } from 'react-remove-scroll';\nimport {\n  Box,\n  BoxProps,\n  ElementProps,\n  factory,\n  Factory,\n  StylesApiProps,\n  useProps,\n} from '../../../core';\nimport { useAppShellContext } from '../AppShell.context';\nimport classes from '../AppShell.module.css';\n\nexport type AppShellFooterStylesNames = 'footer';\n\nexport interface AppShellFooterProps\n  extends BoxProps,\n    StylesApiProps<AppShellFooterFactory>,\n    ElementProps<'footer'> {\n  /** Determines whether component should have a border, overrides `withBorder` prop on `AppShell` component */\n  withBorder?: boolean;\n\n  /** Component `z-index`, by default inherited from the `AppShell` */\n  zIndex?: string | number;\n}\n\nexport type AppShellFooterFactory = Factory<{\n  props: AppShellFooterProps;\n  ref: HTMLElement;\n  stylesNames: AppShellFooterStylesNames;\n}>;\n\nconst defaultProps: Partial<AppShellFooterProps> = {};\n\nexport const AppShellFooter = factory<AppShellFooterFactory>((_props, ref) => {\n  const props = useProps('AppShellFooter', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    withBorder,\n    zIndex,\n    mod,\n    ...others\n  } = props;\n  const ctx = useAppShellContext();\n\n  if (ctx.disabled) {\n    return null;\n  }\n\n  return (\n    <Box\n      component=\"footer\"\n      ref={ref}\n      mod={[{ 'with-border': withBorder ?? ctx.withBorder }, mod]}\n      {...ctx.getStyles('footer', {\n        className: cx({ [RemoveScroll.classNames.zeroRight]: ctx.offsetScrollbars }, className),\n        classNames,\n        styles,\n        style,\n      })}\n      {...others}\n      __vars={{ '--app-shell-footer-z-index': (zIndex ?? ctx.zIndex)?.toString() }}\n    />\n  );\n});\n\nAppShellFooter.classes = classes;\nAppShellFooter.displayName = '@mantine/core/AppShellFooter';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 5307, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5312, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/AppShell/AppShellHeader/AppShellHeader.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AppShellHeader = registerClientReference(\n    function() { throw new Error(\"Attempted to call AppShellHeader() from the server but AppShellHeader is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/AppShell/AppShellHeader/AppShellHeader.mjs\",\n    \"AppShellHeader\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,iBAAiB,2RAC1B;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,kGACA"}},
    {"offset": {"line": 5321, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5326, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/AppShell/AppShellHeader/AppShellHeader.tsx"],"sourcesContent":["import React from 'react';\nimport cx from 'clsx';\nimport { RemoveScroll } from 'react-remove-scroll';\nimport {\n  Box,\n  BoxProps,\n  ElementProps,\n  factory,\n  Factory,\n  StylesApiProps,\n  useProps,\n} from '../../../core';\nimport { useAppShellContext } from '../AppShell.context';\nimport classes from '../AppShell.module.css';\n\nexport type AppShellHeaderStylesNames = 'header';\n\nexport interface AppShellHeaderProps\n  extends BoxProps,\n    StylesApiProps<AppShellHeaderFactory>,\n    ElementProps<'header'> {\n  /** Determines whether component should have a border, overrides `withBorder` prop on `AppShell` component */\n  withBorder?: boolean;\n\n  /** Component `z-index`, by default inherited from the `AppShell` */\n  zIndex?: string | number;\n}\n\nexport type AppShellHeaderFactory = Factory<{\n  props: AppShellHeaderProps;\n  ref: HTMLElement;\n  stylesNames: AppShellHeaderStylesNames;\n}>;\n\nconst defaultProps: Partial<AppShellHeaderProps> = {};\n\nexport const AppShellHeader = factory<AppShellHeaderFactory>((_props, ref) => {\n  const props = useProps('AppShellHeader', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    withBorder,\n    zIndex,\n    mod,\n    ...others\n  } = props;\n  const ctx = useAppShellContext();\n\n  if (ctx.disabled) {\n    return null;\n  }\n\n  return (\n    <Box\n      component=\"header\"\n      ref={ref}\n      mod={[{ 'with-border': withBorder ?? ctx.withBorder }, mod]}\n      {...ctx.getStyles('header', {\n        className: cx({ [RemoveScroll.classNames.zeroRight]: ctx.offsetScrollbars }, className),\n        classNames,\n        styles,\n        style,\n      })}\n      {...others}\n      __vars={{ '--app-shell-header-z-index': (zIndex ?? ctx.zIndex)?.toString() }}\n    />\n  );\n});\n\nAppShellHeader.classes = classes;\nAppShellHeader.displayName = '@mantine/core/AppShellHeader';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 5331, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5336, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/AppShell/AppShellNavbar/AppShellNavbar.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AppShellNavbar = registerClientReference(\n    function() { throw new Error(\"Attempted to call AppShellNavbar() from the server but AppShellNavbar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/AppShell/AppShellNavbar/AppShellNavbar.mjs\",\n    \"AppShellNavbar\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,iBAAiB,2RAC1B;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,kGACA"}},
    {"offset": {"line": 5345, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5350, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/AppShell/AppShellNavbar/AppShellNavbar.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  ElementProps,\n  factory,\n  Factory,\n  StylesApiProps,\n  useProps,\n} from '../../../core';\nimport { useAppShellContext } from '../AppShell.context';\nimport classes from '../AppShell.module.css';\n\nexport type AppShellNavbarStylesNames = 'navbar';\n\nexport interface AppShellNavbarProps\n  extends BoxProps,\n    StylesApiProps<AppShellNavbarFactory>,\n    ElementProps<'div'> {\n  /** Determines whether component should have a border, overrides `withBorder` prop on `AppShell` component */\n  withBorder?: boolean;\n\n  /** Component `z-index`, by default inherited from the `AppShell` */\n  zIndex?: string | number;\n}\n\nexport type AppShellNavbarFactory = Factory<{\n  props: AppShellNavbarProps;\n  ref: HTMLElement;\n  stylesNames: AppShellNavbarStylesNames;\n}>;\n\nconst defaultProps: Partial<AppShellNavbarProps> = {};\n\nexport const AppShellNavbar = factory<AppShellNavbarFactory>((_props, ref) => {\n  const props = useProps('AppShellNavbar', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    withBorder,\n    zIndex,\n    mod,\n    ...others\n  } = props;\n  const ctx = useAppShellContext();\n\n  if (ctx.disabled) {\n    return null;\n  }\n\n  return (\n    <Box\n      component=\"nav\"\n      ref={ref}\n      mod={[{ 'with-border': withBorder ?? ctx.withBorder }, mod]}\n      {...ctx.getStyles('navbar', { className, classNames, styles, style })}\n      {...others}\n      __vars={{\n        '--app-shell-navbar-z-index': `calc(${zIndex ?? ctx.zIndex} + 1)`,\n      }}\n    />\n  );\n});\n\nAppShellNavbar.classes = classes;\nAppShellNavbar.displayName = '@mantine/core/AppShellNavbar';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 5355, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5360, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/AppShell/AppShellSection/AppShellSection.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AppShellSection = registerClientReference(\n    function() { throw new Error(\"Attempted to call AppShellSection() from the server but AppShellSection is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/AppShell/AppShellSection/AppShellSection.mjs\",\n    \"AppShellSection\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,kBAAkB,2RAC3B;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,oGACA"}},
    {"offset": {"line": 5369, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5374, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/AppShell/AppShellSection/AppShellSection.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  CompoundStylesApiProps,\n  polymorphicFactory,\n  PolymorphicFactory,\n  useProps,\n} from '../../../core';\nimport { useAppShellContext } from '../AppShell.context';\nimport classes from '../AppShell.module.css';\n\nexport type AppShellSectionStylesNames = 'section';\n\nexport interface AppShellSectionProps\n  extends BoxProps,\n    CompoundStylesApiProps<AppShellSectionFactory> {\n  /** Determines whether the section should take all available space, `false` by default */\n  grow?: boolean;\n}\n\nexport type AppShellSectionFactory = PolymorphicFactory<{\n  props: AppShellSectionProps;\n  defaultRef: HTMLDivElement;\n  defaultComponent: 'div';\n  stylesNames: AppShellSectionStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<AppShellSectionProps> = {};\n\nexport const AppShellSection = polymorphicFactory<AppShellSectionFactory>((_props, ref) => {\n  const props = useProps('AppShellSection', defaultProps, _props);\n  const { classNames, className, style, styles, vars, grow, mod, ...others } = props;\n  const ctx = useAppShellContext();\n\n  return (\n    <Box\n      ref={ref}\n      mod={[{ grow }, mod]}\n      {...ctx.getStyles('section', { className, style, classNames, styles })}\n      {...others}\n    />\n  );\n});\n\nAppShellSection.classes = classes;\nAppShellSection.displayName = '@mantine/core/AppShellSection';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 5379, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5384, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/AppShell/AppShellMain/AppShellMain.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AppShellMain = registerClientReference(\n    function() { throw new Error(\"Attempted to call AppShellMain() from the server but AppShellMain is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/AppShell/AppShellMain/AppShellMain.mjs\",\n    \"AppShellMain\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,eAAe,2RACxB;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,8FACA"}},
    {"offset": {"line": 5393, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5398, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/AppShell/AppShellMain/AppShellMain.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  CompoundStylesApiProps,\n  ElementProps,\n  factory,\n  Factory,\n  useProps,\n} from '../../../core';\nimport { useAppShellContext } from '../AppShell.context';\nimport classes from '../AppShell.module.css';\n\nexport type AppShellMainStylesNames = 'main';\n\nexport interface AppShellMainProps\n  extends BoxProps,\n    CompoundStylesApiProps<AppShellMainFactory>,\n    ElementProps<'main'> {}\n\nexport type AppShellMainFactory = Factory<{\n  props: AppShellMainProps;\n  ref: HTMLElement;\n  stylesNames: AppShellMainStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<AppShellMainProps> = {};\n\nexport const AppShellMain = factory<AppShellMainFactory>((_props, ref) => {\n  const props = useProps('AppShellMain', defaultProps, _props);\n  const { classNames, className, style, styles, vars, ...others } = props;\n  const ctx = useAppShellContext();\n\n  return (\n    <Box\n      component=\"main\"\n      ref={ref}\n      {...ctx.getStyles('main', { className, style, classNames, styles })}\n      {...others}\n    />\n  );\n});\n\nAppShellMain.classes = classes;\nAppShellMain.displayName = '@mantine/core/AppShellMain';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 5403, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5408, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/AspectRatio/AspectRatio.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AspectRatio = registerClientReference(\n    function() { throw new Error(\"Attempted to call AspectRatio() from the server but AspectRatio is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/AspectRatio/AspectRatio.mjs\",\n    \"AspectRatio\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,cAAc,2RACvB;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,mFACA"}},
    {"offset": {"line": 5417, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5422, "column": 0}, "map": {"version":3,"sources":["../../../src/components/AspectRatio/AspectRatio.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport classes from './AspectRatio.module.css';\n\nexport type AspectRatioStylesNames = 'root';\nexport type AspectRatioCssVariables = {\n  root: '--ar-ratio';\n};\n\nexport interface AspectRatioProps\n  extends BoxProps,\n    StylesApiProps<AspectRatioFactory>,\n    ElementProps<'div'> {\n  /** Aspect ratio, e.g. `16 / 9`, `4 / 3`, `1920 / 1080`, `1` by default */\n  ratio?: number;\n}\n\nexport type AspectRatioFactory = Factory<{\n  props: AspectRatioProps;\n  ref: HTMLDivElement;\n  stylesNames: AspectRatioStylesNames;\n  vars: AspectRatioCssVariables;\n}>;\n\nconst defaultProps: Partial<AspectRatioProps> = {};\n\nconst varsResolver = createVarsResolver<AspectRatioFactory>((_, { ratio }) => ({\n  root: {\n    '--ar-ratio': ratio?.toString(),\n  },\n}));\n\nexport const AspectRatio = factory<AspectRatioFactory>((_props, ref) => {\n  const props = useProps('AspectRatio', defaultProps, _props);\n  const { classNames, className, style, styles, unstyled, vars, ratio, ...others } = props;\n\n  const getStyles = useStyles<AspectRatioFactory>({\n    name: 'AspectRatio',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return <Box ref={ref} {...getStyles('root')} {...others} />;\n});\n\nAspectRatio.classes = classes;\nAspectRatio.displayName = '@mantine/core/AspectRatio';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 5427, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5432, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Autocomplete/Autocomplete.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Autocomplete = registerClientReference(\n    function() { throw new Error(\"Attempted to call Autocomplete() from the server but Autocomplete is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Autocomplete/Autocomplete.mjs\",\n    \"Autocomplete\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,eAAe,2RACxB;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,qFACA"}},
    {"offset": {"line": 5441, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5446, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Autocomplete/Autocomplete.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useId, useUncontrolled } from '@mantine/hooks';\nimport {\n  BoxProps,\n  ElementProps,\n  factory,\n  Factory,\n  StylesApiProps,\n  useProps,\n  useResolvedStylesApi,\n} from '../../core';\nimport {\n  Combobox,\n  ComboboxLikeProps,\n  ComboboxLikeRenderOptionInput,\n  ComboboxLikeStylesNames,\n  ComboboxStringData,\n  ComboboxStringItem,\n  getOptionsLockup,\n  getParsedComboboxData,\n  OptionsDropdown,\n  useCombobox,\n} from '../Combobox';\nimport { __BaseInputProps, __InputStylesNames, InputVariant } from '../Input';\nimport { InputBase } from '../InputBase';\nimport { ScrollAreaProps } from '../ScrollArea';\n\nexport type AutocompleteStylesNames = __InputStylesNames | ComboboxLikeStylesNames;\n\nexport interface AutocompleteProps\n  extends BoxProps,\n    __BaseInputProps,\n    Omit<ComboboxLikeProps, 'data'>,\n    StylesApiProps<AutocompleteFactory>,\n    ElementProps<'input', 'onChange' | 'size'> {\n  /** Data displayed in the dropdown */\n  data?: ComboboxStringData;\n\n  /** Controlled component value */\n  value?: string;\n\n  /** Uncontrolled component default value */\n  defaultValue?: string;\n\n  /** Called when value changes */\n  onChange?: (value: string) => void;\n\n  /** A function to render content of the option, replaces the default content of the option */\n  renderOption?: (input: ComboboxLikeRenderOptionInput<ComboboxStringItem>) => React.ReactNode;\n\n  /** Props passed down to the underlying `ScrollArea` component in the dropdown */\n  scrollAreaProps?: ScrollAreaProps;\n}\n\nexport type AutocompleteFactory = Factory<{\n  props: AutocompleteProps;\n  ref: HTMLInputElement;\n  stylesNames: AutocompleteStylesNames;\n  variant: InputVariant;\n}>;\n\nconst defaultProps: Partial<AutocompleteProps> = {};\n\nexport const Autocomplete = factory<AutocompleteFactory>((_props, ref) => {\n  const props = useProps('Autocomplete', defaultProps, _props);\n  const {\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    dropdownOpened,\n    defaultDropdownOpened,\n    onDropdownClose,\n    onDropdownOpen,\n    onFocus,\n    onBlur,\n    onClick,\n    onChange,\n    data,\n    value,\n    defaultValue,\n    selectFirstOptionOnChange,\n    onOptionSubmit,\n    comboboxProps,\n    readOnly,\n    disabled,\n    filter,\n    limit,\n    withScrollArea,\n    maxDropdownHeight,\n    size,\n    id,\n    renderOption,\n    autoComplete,\n    scrollAreaProps,\n    ...others\n  } = props;\n\n  const _id = useId(id);\n  const parsedData = getParsedComboboxData(data);\n  const optionsLockup = getOptionsLockup(parsedData);\n\n  const [_value, setValue] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: '',\n    onChange,\n  });\n\n  const combobox = useCombobox({\n    opened: dropdownOpened,\n    defaultOpened: defaultDropdownOpened,\n    onDropdownOpen,\n    onDropdownClose: () => {\n      onDropdownClose?.();\n      combobox.resetSelectedOption();\n    },\n  });\n\n  const { resolvedClassNames, resolvedStyles } = useResolvedStylesApi<AutocompleteFactory>({\n    props,\n    styles,\n    classNames,\n  });\n\n  useEffect(() => {\n    if (selectFirstOptionOnChange) {\n      combobox.selectFirstOption();\n    }\n  }, [selectFirstOptionOnChange, _value]);\n\n  return (\n    <Combobox\n      store={combobox}\n      __staticSelector=\"Autocomplete\"\n      classNames={resolvedClassNames}\n      styles={resolvedStyles}\n      unstyled={unstyled}\n      readOnly={readOnly}\n      onOptionSubmit={(val) => {\n        onOptionSubmit?.(val);\n        setValue(optionsLockup[val].label);\n        combobox.closeDropdown();\n      }}\n      size={size}\n      {...comboboxProps}\n    >\n      <Combobox.Target autoComplete={autoComplete}>\n        <InputBase\n          ref={ref}\n          {...others}\n          size={size}\n          __staticSelector=\"Autocomplete\"\n          disabled={disabled}\n          readOnly={readOnly}\n          value={_value}\n          onChange={(event) => {\n            setValue(event.currentTarget.value);\n            combobox.openDropdown();\n            selectFirstOptionOnChange && combobox.selectFirstOption();\n          }}\n          onFocus={(event) => {\n            combobox.openDropdown();\n            onFocus?.(event);\n          }}\n          onBlur={(event) => {\n            combobox.closeDropdown();\n            onBlur?.(event);\n          }}\n          onClick={(event) => {\n            combobox.openDropdown();\n            onClick?.(event);\n          }}\n          classNames={resolvedClassNames}\n          styles={resolvedStyles}\n          unstyled={unstyled}\n          id={_id}\n        />\n      </Combobox.Target>\n      <OptionsDropdown\n        data={parsedData}\n        hidden={readOnly || disabled}\n        filter={filter}\n        search={_value}\n        limit={limit}\n        hiddenWhenEmpty\n        withScrollArea={withScrollArea}\n        maxDropdownHeight={maxDropdownHeight}\n        unstyled={unstyled}\n        labelId={`${_id}-label`}\n        renderOption={renderOption}\n        scrollAreaProps={scrollAreaProps}\n      />\n    </Combobox>\n  );\n});\n\nAutocomplete.classes = { ...InputBase.classes, ...Combobox.classes };\nAutocomplete.displayName = '@mantine/core/Autocomplete';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 5451, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5456, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Avatar/Avatar.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Avatar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Avatar() from the server but Avatar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Avatar/Avatar.mjs\",\n    \"Avatar\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,SAAS,2RAClB;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,yEACA"}},
    {"offset": {"line": 5465, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5470, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Avatar/Avatar.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  getRadius,\n  getSize,\n  MantineColor,\n  MantineGradient,\n  MantineRadius,\n  MantineSize,\n  polymorphicFactory,\n  PolymorphicFactory,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { AvatarGroup } from './AvatarGroup/AvatarGroup';\nimport { useAvatarGroupContext } from './AvatarGroup/AvatarGroup.context';\nimport { AvatarPlaceholderIcon } from './AvatarPlaceholderIcon';\nimport classes from './Avatar.module.css';\n\nexport type AvatarStylesNames = 'root' | 'placeholder' | 'image';\nexport type AvatarVariant =\n  | 'filled'\n  | 'light'\n  | 'gradient'\n  | 'outline'\n  | 'transparent'\n  | 'default'\n  | 'white';\n\nexport type AvatarCssVariables = {\n  root: '--avatar-size' | '--avatar-radius' | '--avatar-bg' | '--avatar-color' | '--avatar-bd';\n};\n\nexport interface AvatarProps extends BoxProps, StylesApiProps<AvatarFactory> {\n  /** Width and height of the avatar, numbers are converted to rem, `'md'` by default */\n  size?: MantineSize | (string & {}) | number;\n\n  /** Key of `theme.radius` or any valid CSS value to set border-radius, `'100%'` by default */\n  radius?: MantineRadius;\n\n  /** Key of `theme.colors` or any valid CSS color, default value is `'gray'`  */\n  color?: MantineColor;\n\n  /** Gradient configuration used when `variant=\"gradient\"`, default value is `theme.defaultGradient` */\n  gradient?: MantineGradient;\n\n  /** Image url, if the image cannot be loaded or `src={null}`, then placeholder is displayed instead */\n  src?: string | null;\n\n  /** Image `alt` attribute, also used as `title` attribute for placeholder */\n  alt?: string;\n\n  /** `img` tag attributes */\n  imageProps?: React.ComponentPropsWithoutRef<'img'>;\n\n  /** Avatar placeholder, displayed when `src={null}` or when the image cannot be loaded */\n  children?: React.ReactNode;\n\n  /** Determines whether text color with filled variant should depend on `background-color`. If luminosity of the `color` prop is less than `theme.luminosityThreshold`, then `theme.white` will be used for text color, otherwise `theme.black`. Overrides `theme.autoContrast`. */\n  autoContrast?: boolean;\n}\n\nexport type AvatarFactory = PolymorphicFactory<{\n  props: AvatarProps;\n  defaultRef: HTMLDivElement;\n  defaultComponent: 'div';\n  stylesNames: AvatarStylesNames;\n  vars: AvatarCssVariables;\n  variant: AvatarVariant;\n  staticComponents: {\n    Group: typeof AvatarGroup;\n  };\n}>;\n\nconst defaultProps: Partial<AvatarProps> = {};\n\nconst varsResolver = createVarsResolver<AvatarFactory>(\n  (theme, { size, radius, variant, gradient, color, autoContrast }) => {\n    const colors = theme.variantColorResolver({\n      color: color || 'gray',\n      theme,\n      gradient,\n      variant: variant || 'light',\n      autoContrast,\n    });\n\n    return {\n      root: {\n        '--avatar-size': getSize(size, 'avatar-size'),\n        '--avatar-radius': radius === undefined ? undefined : getRadius(radius),\n        '--avatar-bg': color || variant ? colors.background : undefined,\n        '--avatar-color': color || variant ? colors.color : undefined,\n        '--avatar-bd': color || variant ? colors.border : undefined,\n      },\n    };\n  }\n);\n\nexport const Avatar = polymorphicFactory<AvatarFactory>((_props, ref) => {\n  const props = useProps('Avatar', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    src,\n    alt,\n    radius,\n    color,\n    gradient,\n    imageProps,\n    children,\n    autoContrast,\n    mod,\n    ...others\n  } = props;\n  const ctx = useAvatarGroupContext();\n  const [error, setError] = useState(!src);\n\n  const getStyles = useStyles<AvatarFactory>({\n    name: 'Avatar',\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  useEffect(() => setError(!src), [src]);\n\n  return (\n    <Box\n      {...getStyles('root')}\n      mod={[{ 'within-group': ctx.withinGroup }, mod]}\n      ref={ref}\n      {...others}\n    >\n      {error ? (\n        <span {...getStyles('placeholder')} title={alt}>\n          {children || <AvatarPlaceholderIcon />}\n        </span>\n      ) : (\n        <img\n          {...imageProps}\n          {...getStyles('image')}\n          src={src!}\n          alt={alt}\n          onError={(event) => {\n            setError(true);\n            imageProps?.onError?.(event);\n          }}\n        />\n      )}\n    </Box>\n  );\n});\n\nAvatar.classes = classes;\nAvatar.displayName = '@mantine/core/Avatar';\nAvatar.Group = AvatarGroup;\n"],"names":[],"mappings":""}},
    {"offset": {"line": 5475, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5480, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Avatar/AvatarGroup/AvatarGroup.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AvatarGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvatarGroup() from the server but AvatarGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Avatar/AvatarGroup/AvatarGroup.mjs\",\n    \"AvatarGroup\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,cAAc,2RACvB;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,0FACA"}},
    {"offset": {"line": 5489, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5494, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Avatar/AvatarGroup/AvatarGroup.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getSpacing,\n  MantineSpacing,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../../core';\nimport { AvatarGroupProvider } from './AvatarGroup.context';\nimport classes from '../Avatar.module.css';\n\nexport type AvatarGroupStylesNames = 'group';\nexport type AvatarGroupCssVariables = {\n  group: '--ag-spacing';\n};\n\nexport interface AvatarGroupProps\n  extends BoxProps,\n    StylesApiProps<AvatarGroupFactory>,\n    ElementProps<'div'> {\n  /** Negative space between Avatar components, `'sm'` by default */\n  spacing?: MantineSpacing;\n}\n\nexport type AvatarGroupFactory = Factory<{\n  props: AvatarGroupProps;\n  ref: HTMLDivElement;\n  stylesNames: AvatarGroupStylesNames;\n  vars: AvatarGroupCssVariables;\n}>;\n\nconst defaultProps: Partial<AvatarGroupProps> = {};\n\nconst varsResolver = createVarsResolver<AvatarGroupFactory>((_, { spacing }) => ({\n  group: {\n    '--ag-spacing': getSpacing(spacing),\n  },\n}));\n\nexport const AvatarGroup = factory<AvatarGroupFactory>((_props, ref) => {\n  const props = useProps('AvatarGroup', defaultProps, _props);\n  const { classNames, className, style, styles, unstyled, vars, spacing, ...others } = props;\n\n  const getStyles = useStyles<AvatarGroupFactory>({\n    name: 'AvatarGroup',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n    rootSelector: 'group',\n  });\n\n  return (\n    <AvatarGroupProvider value>\n      <Box ref={ref} {...getStyles('group')} {...others} />\n    </AvatarGroupProvider>\n  );\n});\n\nAvatarGroup.classes = classes;\nAvatarGroup.displayName = '@mantine/core/AvatarGroup';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 5499, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5504, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/BackgroundImage/BackgroundImage.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const BackgroundImage = registerClientReference(\n    function() { throw new Error(\"Attempted to call BackgroundImage() from the server but BackgroundImage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/BackgroundImage/BackgroundImage.mjs\",\n    \"BackgroundImage\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,kBAAkB,2RAC3B;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,2FACA"}},
    {"offset": {"line": 5513, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5518, "column": 0}, "map": {"version":3,"sources":["../../../src/components/BackgroundImage/BackgroundImage.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  getRadius,\n  MantineRadius,\n  polymorphicFactory,\n  PolymorphicFactory,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport classes from './BackgroundImage.module.css';\n\nexport type BackgroundImageStylesNames = 'root';\nexport type BackgroundImageCssVariables = {\n  root: '--bi-radius';\n};\n\nexport interface BackgroundImageProps extends BoxProps, StylesApiProps<BackgroundImageFactory> {\n  /** Key of `theme.radius` or any valid CSS value to set border-radius, numbers are converted to rem, `0` by default */\n  radius?: MantineRadius;\n\n  /** Image url */\n  src: string;\n}\n\nexport type BackgroundImageFactory = PolymorphicFactory<{\n  props: BackgroundImageProps;\n  defaultRef: HTMLDivElement;\n  defaultComponent: 'div';\n  stylesNames: BackgroundImageStylesNames;\n  vars: BackgroundImageCssVariables;\n}>;\n\nconst defaultProps: Partial<BackgroundImageProps> = {};\n\nconst varsResolver = createVarsResolver<BackgroundImageFactory>((_, { radius }) => ({\n  root: { '--bi-radius': radius === undefined ? undefined : getRadius(radius) },\n}));\n\nexport const BackgroundImage = polymorphicFactory<BackgroundImageFactory>((_props, ref) => {\n  const props = useProps('BackgroundImage', defaultProps, _props);\n  const { classNames, className, style, styles, unstyled, vars, radius, src, variant, ...others } =\n    props;\n\n  const getStyles = useStyles<BackgroundImageFactory>({\n    name: 'BackgroundImage',\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <Box\n      ref={ref}\n      variant={variant}\n      {...getStyles('root', { style: { backgroundImage: `url(${src})` } })}\n      {...others}\n    />\n  );\n});\n\nBackgroundImage.classes = classes;\nBackgroundImage.displayName = '@mantine/core/BackgroundImage';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 5523, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5528, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Badge/Badge.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Badge = registerClientReference(\n    function() { throw new Error(\"Attempted to call Badge() from the server but Badge is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Badge/Badge.mjs\",\n    \"Badge\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,QAAQ,2RACjB;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,uEACA"}},
    {"offset": {"line": 5537, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5542, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Badge/Badge.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  getRadius,\n  getSize,\n  getThemeColor,\n  MantineColor,\n  MantineGradient,\n  MantineRadius,\n  MantineSize,\n  polymorphicFactory,\n  PolymorphicFactory,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport classes from './Badge.module.css';\n\nexport type BadgeStylesNames = 'root' | 'section' | 'label';\nexport type BadgeVariant =\n  | 'filled'\n  | 'light'\n  | 'outline'\n  | 'dot'\n  | 'transparent'\n  | 'white'\n  | 'default'\n  | 'gradient';\n\nexport type BadgeCssVariables = {\n  root:\n    | '--badge-height'\n    | '--badge-padding-x'\n    | '--badge-fz'\n    | '--badge-radius'\n    | '--badge-bg'\n    | '--badge-color'\n    | '--badge-bd'\n    | '--badge-dot-color';\n};\n\nexport interface BadgeProps extends BoxProps, StylesApiProps<BadgeFactory> {\n  /** Controls `font-size`, `height` and horizontal `padding`, `'md'` by default */\n  size?: MantineSize | (string & {});\n\n  /** If set, badge `min-width` becomes equal to its `height` and horizontal padding is removed */\n  circle?: boolean;\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius`, `'xl'` by default */\n  radius?: MantineRadius;\n\n  /** Key of `theme.colors` or any valid CSS color, `theme.primaryColor` by default */\n  color?: MantineColor;\n\n  /** Gradient configuration used when `variant=\"gradient\"`, default value is `theme.defaultGradient` */\n  gradient?: MantineGradient;\n\n  /** Content displayed on the left side of the badge label */\n  leftSection?: React.ReactNode;\n\n  /** Content displayed on the right side of the badge label */\n  rightSection?: React.ReactNode;\n\n  /** Determines whether Badge should take 100% of its parent width, `false` by default */\n  fullWidth?: boolean;\n\n  /** Main badge content */\n  children?: React.ReactNode;\n\n  /** Determines whether text color with filled variant should depend on `background-color`. If luminosity of the `color` prop is less than `theme.luminosityThreshold`, then `theme.white` will be used for text color, otherwise `theme.black`. Overrides `theme.autoContrast`. */\n  autoContrast?: boolean;\n}\n\nexport type BadgeFactory = PolymorphicFactory<{\n  props: BadgeProps;\n  defaultRef: HTMLDivElement;\n  defaultComponent: 'div';\n  stylesNames: BadgeStylesNames;\n  vars: BadgeCssVariables;\n  variant: BadgeVariant;\n}>;\n\nconst defaultProps: Partial<BadgeProps> = {};\n\nconst varsResolver = createVarsResolver<BadgeFactory>(\n  (theme, { radius, color, gradient, variant, size, autoContrast }) => {\n    const colors = theme.variantColorResolver({\n      color: color || theme.primaryColor,\n      theme,\n      gradient,\n      variant: variant || 'filled',\n      autoContrast,\n    });\n\n    return {\n      root: {\n        '--badge-height': getSize(size, 'badge-height'),\n        '--badge-padding-x': getSize(size, 'badge-padding-x'),\n        '--badge-fz': getSize(size, 'badge-fz'),\n        '--badge-radius': radius === undefined ? undefined : getRadius(radius),\n        '--badge-bg': color || variant ? colors.background : undefined,\n        '--badge-color': color || variant ? colors.color : undefined,\n        '--badge-bd': color || variant ? colors.border : undefined,\n        '--badge-dot-color': variant === 'dot' ? getThemeColor(color, theme) : undefined,\n      },\n    };\n  }\n);\n\nexport const Badge = polymorphicFactory<BadgeFactory>((_props, ref) => {\n  const props = useProps('Badge', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    radius,\n    color,\n    gradient,\n    leftSection,\n    rightSection,\n    children,\n    variant,\n    fullWidth,\n    autoContrast,\n    circle,\n    mod,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<BadgeFactory>({\n    name: 'Badge',\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <Box\n      variant={variant}\n      mod={[{ block: fullWidth, circle }, mod]}\n      {...getStyles('root', { variant })}\n      ref={ref}\n      {...others}\n    >\n      {leftSection && (\n        <span {...getStyles('section')} data-position=\"left\">\n          {leftSection}\n        </span>\n      )}\n      <span {...getStyles('label')}>{children}</span>\n      {rightSection && (\n        <span {...getStyles('section')} data-position=\"right\">\n          {rightSection}\n        </span>\n      )}\n    </Box>\n  );\n});\n\nBadge.classes = classes;\nBadge.displayName = '@mantine/core/Badge';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 5547, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5552, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Blockquote/Blockquote.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Blockquote = registerClientReference(\n    function() { throw new Error(\"Attempted to call Blockquote() from the server but Blockquote is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Blockquote/Blockquote.mjs\",\n    \"Blockquote\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,aAAa,2RACtB;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,iFACA"}},
    {"offset": {"line": 5561, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5566, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Blockquote/Blockquote.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getRadius,\n  getThemeColor,\n  MantineColor,\n  MantineRadius,\n  parseThemeColor,\n  rem,\n  rgba,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport classes from './Blockquote.module.css';\n\nexport type BlockquoteStylesNames = 'root' | 'icon' | 'cite';\nexport type BlockquoteCssVariables = {\n  root: '--bq-bg-light' | '--bq-bg-dark' | '--bq-bd' | '--bq-icon-size' | '--bq-radius';\n};\n\nexport interface BlockquoteProps\n  extends BoxProps,\n    StylesApiProps<BlockquoteFactory>,\n    ElementProps<'blockquote', 'cite'> {\n  /** Blockquote icon, displayed on the top left */\n  icon?: React.ReactNode;\n\n  /** Controls icon `width` and `height`, numbers are converted to rem, `40` by default */\n  iconSize?: number | string;\n\n  /** Key of `theme.colors` or any valid CSS color, `theme.primaryColor` by default */\n  color?: MantineColor;\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius`, `theme.defaultRadius` by default */\n  radius?: MantineRadius;\n\n  /** Reference to a cited quote */\n  cite?: React.ReactNode;\n}\n\nexport type BlockquoteFactory = Factory<{\n  props: BlockquoteProps;\n  ref: HTMLQuoteElement;\n  stylesNames: BlockquoteStylesNames;\n  vars: BlockquoteCssVariables;\n}>;\n\nconst defaultProps: Partial<BlockquoteProps> = {\n  iconSize: 48,\n};\n\nconst varsResolver = createVarsResolver<BlockquoteFactory>((theme, { color, iconSize, radius }) => {\n  const darkParsed = parseThemeColor({\n    color: color || theme.primaryColor,\n    theme,\n    colorScheme: 'dark',\n  });\n\n  const lightParsed = parseThemeColor({\n    color: color || theme.primaryColor,\n    theme,\n    colorScheme: 'light',\n  });\n\n  return {\n    root: {\n      '--bq-bg-light': rgba(lightParsed.value, 0.07),\n      '--bq-bg-dark': rgba(darkParsed.value, 0.06),\n      '--bq-bd': getThemeColor(color, theme),\n      '--bq-icon-size': rem(iconSize),\n      '--bq-radius': getRadius(radius),\n    },\n  };\n});\n\nexport const Blockquote = factory<BlockquoteFactory>((_props, ref) => {\n  const props = useProps('Blockquote', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    children,\n    icon,\n    iconSize,\n    cite,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<BlockquoteFactory>({\n    name: 'Blockquote',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <Box component=\"blockquote\" ref={ref} {...getStyles('root')} {...others}>\n      {icon && <span {...getStyles('icon')}>{icon}</span>}\n      {children}\n      {cite && <cite {...getStyles('cite')}>{cite}</cite>}\n    </Box>\n  );\n});\n\nBlockquote.classes = classes;\nBlockquote.displayName = '@mantine/core/Blockquote';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 5571, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5576, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Breadcrumbs/Breadcrumbs.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Breadcrumbs = registerClientReference(\n    function() { throw new Error(\"Attempted to call Breadcrumbs() from the server but Breadcrumbs is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Breadcrumbs/Breadcrumbs.mjs\",\n    \"Breadcrumbs\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,cAAc,2RACvB;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,mFACA"}},
    {"offset": {"line": 5585, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5590, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Breadcrumbs/Breadcrumbs.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getSpacing,\n  isElement,\n  MantineSpacing,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport classes from './Breadcrumbs.module.css';\n\nexport type BreadcrumbsStylesNames = 'root' | 'separator' | 'breadcrumb';\nexport type BreadcrumbsCssVariables = {\n  root: '--bc-separator-margin';\n};\n\nexport interface BreadcrumbsProps\n  extends BoxProps,\n    StylesApiProps<BreadcrumbsFactory>,\n    ElementProps<'div'> {\n  /** Separator between children, `'/'` by default */\n  separator?: React.ReactNode;\n\n  /** Controls spacing between separator and breadcrumb, `'xs'` by default */\n  separatorMargin?: MantineSpacing;\n\n  /** React nodes that should be separated with `separator` */\n  children: React.ReactNode;\n}\n\nexport type BreadcrumbsFactory = Factory<{\n  props: BreadcrumbsProps;\n  ref: HTMLDivElement;\n  stylesNames: BreadcrumbsStylesNames;\n  vars: BreadcrumbsCssVariables;\n}>;\n\nconst defaultProps: Partial<BreadcrumbsProps> = {\n  separator: '/',\n};\n\nconst varsResolver = createVarsResolver<BreadcrumbsFactory>((_, { separatorMargin }) => ({\n  root: {\n    '--bc-separator-margin': getSpacing(separatorMargin),\n  },\n}));\n\nexport const Breadcrumbs = factory<BreadcrumbsFactory>((_props, ref) => {\n  const props = useProps('Breadcrumbs', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    children,\n    separator,\n    separatorMargin,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<BreadcrumbsFactory>({\n    name: 'Breadcrumbs',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  const items = React.Children.toArray(children).reduce<React.ReactNode[]>(\n    (acc, child, index, array) => {\n      const item = isElement(child) ? (\n        React.cloneElement(child, {\n          ...getStyles('breadcrumb', { className: child.props?.className }),\n          key: index,\n        })\n      ) : (\n        <div {...getStyles('breadcrumb')} key={index}>\n          {child}\n        </div>\n      );\n\n      acc.push(item);\n\n      if (index !== array.length - 1) {\n        acc.push(\n          <Box {...getStyles('separator')} key={`separator-${index}`}>\n            {separator}\n          </Box>\n        );\n      }\n\n      return acc;\n    },\n    []\n  );\n\n  return (\n    <Box ref={ref} {...getStyles('root')} {...others}>\n      {items}\n    </Box>\n  );\n});\n\nBreadcrumbs.classes = classes;\nBreadcrumbs.displayName = '@mantine/core/Breadcrumbs';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 5595, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5600, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Burger/Burger.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Burger = registerClientReference(\n    function() { throw new Error(\"Attempted to call Burger() from the server but Burger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Burger/Burger.mjs\",\n    \"Burger\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,SAAS,2RAClB;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,yEACA"}},
    {"offset": {"line": 5609, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5614, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Burger/Burger.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getSize,\n  getThemeColor,\n  MantineColor,\n  MantineSize,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { UnstyledButton } from '../UnstyledButton';\nimport classes from './Burger.module.css';\n\nexport type BurgerStylesNames = 'root' | 'burger';\nexport type BurgerCssVariables = {\n  root:\n    | '--burger-color'\n    | '--burger-size'\n    | '--burger-transition-duration'\n    | '--burger-transition-timing-function';\n};\n\nexport interface BurgerProps\n  extends BoxProps,\n    StylesApiProps<BurgerFactory>,\n    ElementProps<'button'> {\n  /** Controls burger `width` and `height`, numbers are converted to rem, `'md'` by default */\n  size?: MantineSize | (string & {}) | number;\n\n  /** Key of `theme.colors` of any valid CSS value, by default `theme.white` in dark color scheme and `theme.black` in light */\n  color?: MantineColor;\n\n  /** State of the burger, when `true` burger is transformed into X, `false` by default */\n  opened?: boolean;\n\n  /** `transition-duration` property value in ms, `300` by default */\n  transitionDuration?: number;\n\n  /** `transition-timing-function` property value, `'ease'` by default  */\n  transitionTimingFunction?: string;\n}\n\nexport type BurgerFactory = Factory<{\n  props: BurgerProps;\n  ref: HTMLButtonElement;\n  stylesNames: BurgerStylesNames;\n  vars: BurgerCssVariables;\n}>;\n\nconst defaultProps: Partial<BurgerProps> = {};\n\nconst varsResolver = createVarsResolver<BurgerFactory>(\n  (theme, { color, size, transitionDuration, transitionTimingFunction }) => ({\n    root: {\n      '--burger-color': color ? getThemeColor(color, theme) : undefined,\n      '--burger-size': getSize(size, 'burger-size'),\n      '--burger-transition-duration':\n        transitionDuration === undefined ? undefined : `${transitionDuration}ms`,\n      '--burger-transition-timing-function': transitionTimingFunction,\n    },\n  })\n);\n\nexport const Burger = factory<BurgerFactory>((_props, ref) => {\n  const props = useProps('Burger', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    opened,\n    children,\n    transitionDuration,\n    transitionTimingFunction,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<BurgerFactory>({\n    name: 'Burger',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <UnstyledButton {...getStyles('root')} ref={ref} {...others}>\n      <Box mod={['reduce-motion', { opened }]} {...getStyles('burger')} />\n      {children}\n    </UnstyledButton>\n  );\n});\n\nBurger.classes = classes;\nBurger.displayName = '@mantine/core/Burger';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 5619, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5624, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Button/Button.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Button = registerClientReference(\n    function() { throw new Error(\"Attempted to call Button() from the server but Button is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Button/Button.mjs\",\n    \"Button\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,SAAS,2RAClB;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,yEACA"}},
    {"offset": {"line": 5633, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5638, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Button/Button.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  getFontSize,\n  getRadius,\n  getSize,\n  MantineColor,\n  MantineGradient,\n  MantineRadius,\n  MantineSize,\n  polymorphicFactory,\n  PolymorphicFactory,\n  rem,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { Loader, LoaderProps } from '../Loader';\nimport { MantineTransition, Transition } from '../Transition';\nimport { UnstyledButton } from '../UnstyledButton';\nimport { ButtonGroup } from './ButtonGroup/ButtonGroup';\nimport classes from './Button.module.css';\n\nexport type ButtonStylesNames = 'root' | 'inner' | 'loader' | 'section' | 'label';\nexport type ButtonVariant =\n  | 'filled'\n  | 'light'\n  | 'outline'\n  | 'transparent'\n  | 'white'\n  | 'subtle'\n  | 'default'\n  | 'gradient';\n\nexport type ButtonCssVariables = {\n  root:\n    | '--button-justify'\n    | '--button-height'\n    | '--button-padding-x'\n    | '--button-fz'\n    | '--button-radius'\n    | '--button-bg'\n    | '--button-hover'\n    | '--button-hover-color'\n    | '--button-color'\n    | '--button-bd';\n};\n\nexport interface ButtonProps extends BoxProps, StylesApiProps<ButtonFactory> {\n  'data-disabled'?: boolean;\n\n  /** Controls button `height`, `font-size` and horizontal `padding`, `'sm'` by default */\n  size?: MantineSize | `compact-${MantineSize}` | (string & {});\n\n  /** Key of `theme.colors` or any valid CSS color, `theme.primaryColor` by default */\n  color?: MantineColor;\n\n  /** Sets `justify-content` of `inner` element, can be used to change distribution of sections and label, `'center'` by default */\n  justify?: React.CSSProperties['justifyContent'];\n\n  /** Content displayed on the left side of the button label */\n  leftSection?: React.ReactNode;\n\n  /** Content displayed on the right side of the button label */\n  rightSection?: React.ReactNode;\n\n  /** Determines whether button should take 100% width of its parent container, `false` by default */\n  fullWidth?: boolean;\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius`, `theme.defaultRadius` by default */\n  radius?: MantineRadius;\n\n  /** Gradient configuration used when `variant=\"gradient\"`, default value is `theme.defaultGradient` */\n  gradient?: MantineGradient;\n\n  /** Indicates disabled state */\n  disabled?: boolean;\n\n  /** Button content */\n  children?: React.ReactNode;\n\n  /** Determines whether the `Loader` component should be displayed over the button */\n  loading?: boolean;\n\n  /** Props added to the `Loader` component (only visible when `loading` prop is set) */\n  loaderProps?: LoaderProps;\n\n  /** Determines whether button text color with filled variant should depend on `background-color`. If luminosity of the `color` prop is less than `theme.luminosityThreshold`, then `theme.white` will be used for text color, otherwise `theme.black`. Overrides `theme.autoContrast`. */\n  autoContrast?: boolean;\n}\n\nexport type ButtonFactory = PolymorphicFactory<{\n  props: ButtonProps;\n  defaultRef: HTMLButtonElement;\n  defaultComponent: 'button';\n  stylesNames: ButtonStylesNames;\n  vars: ButtonCssVariables;\n  variant: ButtonVariant;\n  staticComponents: {\n    Group: typeof ButtonGroup;\n  };\n}>;\n\nconst loaderTransition: MantineTransition = {\n  in: { opacity: 1, transform: `translate(-50%, calc(-50% + ${rem(1)}))` },\n  out: { opacity: 0, transform: 'translate(-50%, -200%)' },\n  common: { transformOrigin: 'center' },\n  transitionProperty: 'transform, opacity',\n};\n\nconst defaultProps: Partial<ButtonProps> = {};\n\nconst varsResolver = createVarsResolver<ButtonFactory>(\n  (theme, { radius, color, gradient, variant, size, justify, autoContrast }) => {\n    const colors = theme.variantColorResolver({\n      color: color || theme.primaryColor,\n      theme,\n      gradient,\n      variant: variant || 'filled',\n      autoContrast,\n    });\n\n    return {\n      root: {\n        '--button-justify': justify,\n        '--button-height': getSize(size, 'button-height'),\n        '--button-padding-x': getSize(size, 'button-padding-x'),\n        '--button-fz': size?.includes('compact')\n          ? getFontSize(size.replace('compact-', ''))\n          : getFontSize(size),\n        '--button-radius': radius === undefined ? undefined : getRadius(radius),\n        '--button-bg': color || variant ? colors.background : undefined,\n        '--button-hover': color || variant ? colors.hover : undefined,\n        '--button-color': colors.color,\n        '--button-bd': color || variant ? colors.border : undefined,\n        '--button-hover-color': color || variant ? colors.hoverColor : undefined,\n      },\n    };\n  }\n);\n\nexport const Button = polymorphicFactory<ButtonFactory>((_props, ref) => {\n  const props = useProps('Button', defaultProps, _props);\n  const {\n    style,\n    vars,\n    className,\n    color,\n    disabled,\n    children,\n    leftSection,\n    rightSection,\n    fullWidth,\n    variant,\n    radius,\n    loading,\n    loaderProps,\n    gradient,\n    classNames,\n    styles,\n    unstyled,\n    'data-disabled': dataDisabled,\n    autoContrast,\n    mod,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<ButtonFactory>({\n    name: 'Button',\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  const hasLeftSection = !!leftSection;\n  const hasRightSection = !!rightSection;\n\n  return (\n    <UnstyledButton\n      ref={ref}\n      {...getStyles('root', { active: !disabled && !loading && !dataDisabled })}\n      unstyled={unstyled}\n      variant={variant}\n      disabled={disabled || loading}\n      mod={[\n        {\n          disabled: disabled || dataDisabled,\n          loading,\n          block: fullWidth,\n          'with-left-section': hasLeftSection,\n          'with-right-section': hasRightSection,\n        },\n        mod,\n      ]}\n      {...others}\n    >\n      <Transition mounted={!!loading} transition={loaderTransition} duration={150}>\n        {(transitionStyles) => (\n          <Box component=\"span\" {...getStyles('loader', { style: transitionStyles })} aria-hidden>\n            <Loader\n              color=\"var(--button-color)\"\n              size=\"calc(var(--button-height) / 1.8)\"\n              {...loaderProps}\n            />\n          </Box>\n        )}\n      </Transition>\n\n      <span {...getStyles('inner')}>\n        {leftSection && (\n          <Box component=\"span\" {...getStyles('section')} mod={{ position: 'left' }}>\n            {leftSection}\n          </Box>\n        )}\n\n        <Box component=\"span\" mod={{ loading }} {...getStyles('label')}>\n          {children}\n        </Box>\n\n        {rightSection && (\n          <Box component=\"span\" {...getStyles('section')} mod={{ position: 'right' }}>\n            {rightSection}\n          </Box>\n        )}\n      </span>\n    </UnstyledButton>\n  );\n});\n\nButton.classes = classes;\nButton.displayName = '@mantine/core/Button';\nButton.Group = ButtonGroup;\n"],"names":[],"mappings":""}},
    {"offset": {"line": 5643, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5648, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Button/ButtonGroup/ButtonGroup.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ButtonGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call ButtonGroup() from the server but ButtonGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Button/ButtonGroup/ButtonGroup.mjs\",\n    \"ButtonGroup\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,cAAc,2RACvB;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,0FACA"}},
    {"offset": {"line": 5657, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5662, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Button/ButtonGroup/ButtonGroup.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  factory,\n  Factory,\n  rem,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../../core';\nimport classes from '../Button.module.css';\n\nexport type ButtonGroupStylesNames = 'group';\nexport type ButtonGroupCssVariables = {\n  group: '--button-border-width';\n};\n\nexport interface ButtonGroupProps extends BoxProps, StylesApiProps<ButtonGroupFactory> {\n  /** `Button` components */\n  children?: React.ReactNode;\n\n  /** Orientation of the group, `horizontal` by default */\n  orientation?: 'horizontal' | 'vertical';\n\n  /** `border-width` of the child `Button` components. Numbers are converted to rem. Default value in `1`. */\n  borderWidth?: number | string;\n}\n\nexport type ButtonGroupFactory = Factory<{\n  props: ButtonGroupProps;\n  ref: HTMLDivElement;\n  stylesNames: ButtonGroupStylesNames;\n  vars: ButtonGroupCssVariables;\n}>;\n\nconst defaultProps: Partial<ButtonGroupProps> = {\n  orientation: 'horizontal',\n};\n\nconst varsResolver = createVarsResolver<ButtonGroupFactory>((_, { borderWidth }) => ({\n  group: { '--button-border-width': rem(borderWidth) },\n}));\n\nexport const ButtonGroup = factory<ButtonGroupFactory>((_props, ref) => {\n  const props = useProps('ButtonGroup', defaultProps, _props);\n  const {\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    orientation,\n    vars,\n    borderWidth,\n    variant,\n    mod,\n    ...others\n  } = useProps('ButtonGroup', defaultProps, _props);\n\n  const getStyles = useStyles<ButtonGroupFactory>({\n    name: 'ButtonGroup',\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n    rootSelector: 'group',\n  });\n\n  return (\n    <Box\n      {...getStyles('group')}\n      ref={ref}\n      variant={variant}\n      mod={[{ 'data-orientation': orientation }, mod]}\n      role=\"group\"\n      {...others}\n    />\n  );\n});\n\nButtonGroup.classes = classes;\nButtonGroup.displayName = '@mantine/core/ButtonGroup';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 5667, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5672, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Card/Card.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Card = registerClientReference(\n    function() { throw new Error(\"Attempted to call Card() from the server but Card is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Card/Card.mjs\",\n    \"Card\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,OAAO,2RAChB;IAAa,MAAM,IAAI,MAAM;AAAwN,GACrP,qEACA"}},
    {"offset": {"line": 5681, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5686, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Card/Card.tsx"],"sourcesContent":["import React, { Children, cloneElement } from 'react';\nimport {\n  BoxProps,\n  createVarsResolver,\n  getSpacing,\n  MantineRadius,\n  MantineShadow,\n  MantineSpacing,\n  polymorphicFactory,\n  PolymorphicFactory,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { Paper } from '../Paper';\nimport { CardProvider } from './Card.context';\nimport { CardSection } from './CardSection/CardSection';\nimport classes from './Card.module.css';\n\nexport type CardStylesNames = 'root' | 'section';\nexport type CardCssVariables = {\n  root: '--card-padding';\n};\n\nexport interface CardProps extends BoxProps, StylesApiProps<CardFactory> {\n  /** Key of `theme.shadows` or any valid CSS value to set `box-shadow`, `none` by default */\n  shadow?: MantineShadow;\n\n  /** Key of `theme.radius` or any valid CSS value to set border-radius, numbers are converted to rem, `theme.defaultRadius` by default */\n  radius?: MantineRadius;\n\n  /** Determines whether the card should have border, border color depends on color scheme, `false` by default */\n  withBorder?: boolean;\n\n  /** Controls `padding`, key of `theme.spacing` or any valid CSS value, `'md'` by default */\n  padding?: MantineSpacing;\n\n  /** Card content */\n  children?: React.ReactNode;\n}\n\nexport type CardFactory = PolymorphicFactory<{\n  props: CardProps;\n  defaultRef: HTMLDivElement;\n  defaultComponent: 'div';\n  stylesNames: CardStylesNames;\n  vars: CardCssVariables;\n  staticComponents: {\n    Section: typeof CardSection;\n  };\n}>;\n\nconst defaultProps: Partial<CardProps> = {};\n\nconst varsResolver = createVarsResolver<CardFactory>((_, { padding }) => ({\n  root: {\n    '--card-padding': getSpacing(padding),\n  },\n}));\n\nexport const Card = polymorphicFactory<CardFactory>((_props, ref) => {\n  const props = useProps('Card', defaultProps, _props);\n  const { classNames, className, style, styles, unstyled, vars, children, padding, ...others } =\n    props;\n\n  const getStyles = useStyles<CardFactory>({\n    name: 'Card',\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  const _children = Children.toArray(children);\n  const content = _children.map((child, index) => {\n    if (typeof child === 'object' && child && 'type' in child && child.type === CardSection) {\n      return cloneElement(child, {\n        'data-first-section': index === 0 || undefined,\n        'data-last-section': index === _children.length - 1 || undefined,\n      });\n    }\n\n    return child;\n  });\n\n  return (\n    <CardProvider value={{ getStyles }}>\n      <Paper ref={ref} unstyled={unstyled} {...getStyles('root')} {...others}>\n        {content}\n      </Paper>\n    </CardProvider>\n  );\n});\n\nCard.classes = classes;\nCard.displayName = '@mantine/core/Card';\nCard.Section = CardSection;\n"],"names":[],"mappings":""}},
    {"offset": {"line": 5691, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5696, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Card/CardSection/CardSection.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const CardSection = registerClientReference(\n    function() { throw new Error(\"Attempted to call CardSection() from the server but CardSection is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Card/CardSection/CardSection.mjs\",\n    \"CardSection\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,cAAc,2RACvB;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,wFACA"}},
    {"offset": {"line": 5705, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5710, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Card/CardSection/CardSection.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  CompoundStylesApiProps,\n  polymorphicFactory,\n  PolymorphicFactory,\n  useProps,\n} from '../../../core';\nimport { useCardContext } from '../Card.context';\nimport classes from '../Card.module.css';\n\nexport type CardSectionStylesNames = 'section';\n\nexport interface CardSectionProps extends BoxProps, CompoundStylesApiProps<CardSectionFactory> {\n  /** Determines whether the section should have a border, `false` by default */\n  withBorder?: boolean;\n\n  /** Determines whether the section should inherit padding from the parent `Card`, `false` by default */\n  inheritPadding?: boolean;\n}\n\nexport type CardSectionFactory = PolymorphicFactory<{\n  props: CardSectionProps;\n  defaultRef: HTMLDivElement;\n  defaultComponent: 'div';\n  stylesNames: CardSectionStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<CardSectionProps> = {};\n\nexport const CardSection = polymorphicFactory<CardSectionFactory>((_props, ref) => {\n  const props = useProps('CardSection', defaultProps, _props);\n  const { classNames, className, style, styles, vars, withBorder, inheritPadding, mod, ...others } =\n    props;\n  const ctx = useCardContext();\n\n  return (\n    <Box\n      ref={ref}\n      mod={[{ 'with-border': withBorder, 'inherit-padding': inheritPadding }, mod]}\n      {...ctx.getStyles('section', { className, style, styles, classNames })}\n      {...others}\n    />\n  );\n});\n\nCardSection.classes = classes;\nCardSection.displayName = '@mantine/core/CardSection';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 5715, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5720, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Center/Center.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Center = registerClientReference(\n    function() { throw new Error(\"Attempted to call Center() from the server but Center is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Center/Center.mjs\",\n    \"Center\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,SAAS,2RAClB;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,yEACA"}},
    {"offset": {"line": 5729, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5734, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Center/Center.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  polymorphicFactory,\n  PolymorphicFactory,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport classes from './Center.module.css';\n\nexport type CenterStylesNames = 'root';\n\nexport interface CenterProps extends BoxProps, StylesApiProps<CenterFactory> {\n  /** Content that should be centered vertically and horizontally */\n  children?: React.ReactNode;\n\n  /** Determines whether `inline-flex` should be used instead of `flex`, `false` by default */\n  inline?: boolean;\n}\n\nexport type CenterFactory = PolymorphicFactory<{\n  props: CenterProps;\n  defaultRef: HTMLDivElement;\n  defaultComponent: 'div';\n  stylesNames: CenterStylesNames;\n}>;\n\nconst defaultProps: Partial<CenterProps> = {};\n\nexport const Center = polymorphicFactory<CenterFactory>((_props, ref) => {\n  const props = useProps('Center', defaultProps, _props);\n  const { classNames, className, style, styles, unstyled, vars, inline, mod, ...others } = props;\n\n  const getStyles = useStyles<CenterFactory>({\n    name: 'Center',\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n  });\n\n  return <Box ref={ref} mod={[{ inline }, mod]} {...getStyles('root')} {...others} />;\n});\n\nCenter.classes = classes;\nCenter.displayName = '@mantine/core/Center';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 5739, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5744, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Checkbox/Checkbox.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Checkbox = registerClientReference(\n    function() { throw new Error(\"Attempted to call Checkbox() from the server but Checkbox is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Checkbox/Checkbox.mjs\",\n    \"Checkbox\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,WAAW,2RACpB;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,6EACA"}},
    {"offset": {"line": 5753, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5758, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Checkbox/Checkbox.tsx"],"sourcesContent":["import React from 'react';\nimport { useId } from '@mantine/hooks';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  extractStyleProps,\n  factory,\n  Factory,\n  getAutoContrastValue,\n  getContrastColor,\n  getRadius,\n  getSize,\n  getThemeColor,\n  MantineColor,\n  MantineRadius,\n  MantineSize,\n  parseThemeColor,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { InlineInput, InlineInputClasses, InlineInputStylesNames } from '../InlineInput';\nimport { useCheckboxGroupContext } from './CheckboxGroup.context';\nimport { CheckboxGroup } from './CheckboxGroup/CheckboxGroup';\nimport { CheckboxIcon } from './CheckIcon';\nimport classes from './Checkbox.module.css';\n\nexport type CheckboxVariant = 'filled' | 'outline';\nexport type CheckboxStylesNames = 'icon' | 'inner' | 'input' | InlineInputStylesNames;\nexport type CheckboxCssVariables = {\n  root: '--checkbox-size' | '--checkbox-radius' | '--checkbox-color' | '--checkbox-icon-color';\n};\n\nexport interface CheckboxProps\n  extends BoxProps,\n    StylesApiProps<CheckboxFactory>,\n    ElementProps<'input', 'size'> {\n  /** Id used to connect input with the label. If not set, unique id is generated instead. */\n  id?: string;\n\n  /** Content of the `label` associated with the checkbox */\n  label?: React.ReactNode;\n\n  /** Key of `theme.colors` or any valid CSS color to set input background color in checked state, `theme.primaryColor` by default */\n  color?: MantineColor;\n\n  /** Controls size of the component, `'sm'` by default */\n  size?: MantineSize | (string & {});\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius,` `theme.defaultRadius` by default */\n  radius?: MantineRadius;\n\n  /** Props passed down to the root element */\n  wrapperProps?: Record<string, any>;\n\n  /** Position of the label relative to the input, `'right'` by default */\n  labelPosition?: 'left' | 'right';\n\n  /** Description displayed below the label */\n  description?: React.ReactNode;\n\n  /** Error message displayed below the label */\n  error?: React.ReactNode;\n\n  /** Indeterminate state of the checkbox. If set, `checked` prop is ignored. */\n  indeterminate?: boolean;\n\n  /** Icon displayed when checkbox is in checked or indeterminate state */\n  icon?: React.FC<{ indeterminate: boolean | undefined; className: string }>;\n\n  /** Assigns ref of the root element */\n  rootRef?: React.ForwardedRef<HTMLDivElement>;\n\n  /** Key of `theme.colors` or any valid CSS color to set icon color, by default value depends on `theme.autoContrast` */\n  iconColor?: MantineColor;\n\n  /** Determines whether icon color with filled variant should depend on `background-color`. If luminosity of the `color` prop is less than `theme.luminosityThreshold`, then `theme.white` will be used for text color, otherwise `theme.black`. Overrides `theme.autoContrast`. */\n  autoContrast?: boolean;\n}\n\nexport type CheckboxFactory = Factory<{\n  props: CheckboxProps;\n  ref: HTMLInputElement;\n  stylesNames: CheckboxStylesNames;\n  vars: CheckboxCssVariables;\n  variant: CheckboxVariant;\n  staticComponents: {\n    Group: typeof CheckboxGroup;\n  };\n}>;\n\nconst defaultProps: Partial<CheckboxProps> = {\n  labelPosition: 'right',\n  icon: CheckboxIcon,\n};\n\nconst varsResolver = createVarsResolver<CheckboxFactory>(\n  (theme, { radius, color, size, iconColor, variant, autoContrast }) => {\n    const parsedColor = parseThemeColor({ color: color || theme.primaryColor, theme });\n    const outlineColor =\n      parsedColor.isThemeColor && parsedColor.shade === undefined\n        ? `var(--mantine-color-${parsedColor.color}-outline)`\n        : parsedColor.color;\n\n    return {\n      root: {\n        '--checkbox-size': getSize(size, 'checkbox-size'),\n        '--checkbox-radius': radius === undefined ? undefined : getRadius(radius),\n        '--checkbox-color': variant === 'outline' ? outlineColor : getThemeColor(color, theme),\n        '--checkbox-icon-color': iconColor\n          ? getThemeColor(iconColor, theme)\n          : getAutoContrastValue(autoContrast, theme)\n            ? getContrastColor({ color, theme })\n            : undefined,\n      },\n    };\n  }\n);\n\nexport const Checkbox = factory<CheckboxFactory>((_props, ref) => {\n  const props = useProps('Checkbox', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    color,\n    label,\n    id,\n    size,\n    radius,\n    wrapperProps,\n    children,\n    checked,\n    labelPosition,\n    description,\n    error,\n    disabled,\n    variant,\n    indeterminate,\n    icon,\n    rootRef,\n    iconColor,\n    onChange,\n    autoContrast,\n    mod,\n    ...others\n  } = props;\n\n  const ctx = useCheckboxGroupContext();\n  const _size = size || ctx?.size;\n  const Icon = icon!;\n\n  const getStyles = useStyles<CheckboxFactory>({\n    name: 'Checkbox',\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  const { styleProps, rest } = extractStyleProps(others);\n  const uuid = useId(id);\n\n  const contextProps = ctx\n    ? {\n        checked: ctx.value.includes(rest.value as string),\n        onChange: (event: React.ChangeEvent<HTMLInputElement>) => {\n          ctx.onChange(event);\n          onChange?.(event);\n        },\n      }\n    : {};\n\n  return (\n    <InlineInput\n      {...getStyles('root')}\n      __staticSelector=\"Checkbox\"\n      __stylesApiProps={props}\n      id={uuid}\n      size={_size}\n      labelPosition={labelPosition}\n      label={label}\n      description={description}\n      error={error}\n      disabled={disabled}\n      classNames={classNames}\n      styles={styles}\n      unstyled={unstyled}\n      data-checked={contextProps.checked || checked || undefined}\n      variant={variant}\n      ref={rootRef}\n      mod={mod}\n      {...styleProps}\n      {...wrapperProps}\n    >\n      <Box {...getStyles('inner')} mod={{ 'data-label-position': labelPosition }}>\n        <Box\n          component=\"input\"\n          id={uuid}\n          ref={ref}\n          checked={checked}\n          disabled={disabled}\n          mod={{ error: !!error, indeterminate }}\n          {...getStyles('input', { focusable: true, variant })}\n          onChange={onChange}\n          {...rest}\n          {...contextProps}\n          type=\"checkbox\"\n        />\n\n        <Icon indeterminate={indeterminate} {...getStyles('icon')} />\n      </Box>\n    </InlineInput>\n  );\n});\n\nCheckbox.classes = { ...classes, ...InlineInputClasses };\nCheckbox.displayName = '@mantine/core/Checkbox';\nCheckbox.Group = CheckboxGroup;\n"],"names":[],"mappings":""}},
    {"offset": {"line": 5763, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5768, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Checkbox/CheckboxGroup/CheckboxGroup.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const CheckboxGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call CheckboxGroup() from the server but CheckboxGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Checkbox/CheckboxGroup/CheckboxGroup.mjs\",\n    \"CheckboxGroup\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,gBAAgB,2RACzB;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,gGACA"}},
    {"offset": {"line": 5777, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5782, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Checkbox/CheckboxGroup/CheckboxGroup.tsx"],"sourcesContent":["import React from 'react';\nimport { useUncontrolled } from '@mantine/hooks';\nimport { factory, Factory, MantineSize, useProps } from '../../../core';\nimport { Input, InputWrapperProps, InputWrapperStylesNames } from '../../Input';\nimport { InputsGroupFieldset } from '../../InputsGroupFieldset';\nimport { CheckboxGroupProvider } from '../CheckboxGroup.context';\n\nexport type CheckboxGroupStylesNames = InputWrapperStylesNames;\n\nexport interface CheckboxGroupProps extends Omit<InputWrapperProps, 'onChange'> {\n  /** `Checkbox` components and any other elements */\n  children: React.ReactNode;\n\n  /** Controlled component value */\n  value?: string[];\n\n  /** Default value for uncontrolled component */\n  defaultValue?: string[];\n\n  /** Called with an array of selected checkboxes values when value changes */\n  onChange?: (value: string[]) => void;\n\n  /** Props passed down to the root element (`Input.Wrapper` component) */\n  wrapperProps?: Record<string, any>;\n\n  /** Controls size of the `Input.Wrapper`, `'sm'` by default */\n  size?: MantineSize | (string & {});\n\n  /** If set, value cannot be changed */\n  readOnly?: boolean;\n}\n\nexport type CheckboxGroupFactory = Factory<{\n  props: CheckboxGroupProps;\n  ref: HTMLDivElement;\n  stylesNames: CheckboxGroupStylesNames;\n}>;\n\nconst defaultProps: Partial<CheckboxGroupProps> = {};\n\nexport const CheckboxGroup = factory<CheckboxGroupFactory>((props, ref) => {\n  const { value, defaultValue, onChange, size, wrapperProps, children, readOnly, ...others } =\n    useProps('CheckboxGroup', defaultProps, props);\n\n  const [_value, setValue] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: [],\n    onChange,\n  });\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const itemValue = event.currentTarget.value;\n    !readOnly &&\n      setValue(\n        _value.includes(itemValue)\n          ? _value.filter((item) => item !== itemValue)\n          : [..._value, itemValue]\n      );\n  };\n\n  return (\n    <CheckboxGroupProvider value={{ value: _value, onChange: handleChange, size }}>\n      <Input.Wrapper\n        size={size}\n        ref={ref}\n        {...wrapperProps}\n        {...others}\n        labelElement=\"div\"\n        __staticSelector=\"CheckboxGroup\"\n      >\n        <InputsGroupFieldset role=\"group\">{children}</InputsGroupFieldset>\n      </Input.Wrapper>\n    </CheckboxGroupProvider>\n  );\n});\n\nCheckboxGroup.classes = Input.Wrapper.classes;\nCheckboxGroup.displayName = '@mantine/core/CheckboxGroup';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 5787, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5792, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Checkbox/CheckIcon.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const CheckIcon = registerClientReference(\n    function() { throw new Error(\"Attempted to call CheckIcon() from the server but CheckIcon is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Checkbox/CheckIcon.mjs\",\n    \"CheckIcon\",\n);\nexport const CheckboxIcon = registerClientReference(\n    function() { throw new Error(\"Attempted to call CheckboxIcon() from the server but CheckboxIcon is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Checkbox/CheckIcon.mjs\",\n    \"CheckboxIcon\",\n);\n"],"names":[],"mappings":";;;;;;;AACO,MAAM,YAAY,2RACrB;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,8EACA;AAEG,MAAM,eAAe,2RACxB;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,8EACA"}},
    {"offset": {"line": 5805, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5810, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Checkbox/CheckIcon.tsx"],"sourcesContent":["import React from 'react';\nimport { rem } from '../../core';\n\nexport interface CheckboxIconProps extends React.ComponentPropsWithoutRef<'svg'> {\n  indeterminate: boolean | undefined;\n}\n\nexport interface CheckIconProps extends React.ComponentPropsWithoutRef<'svg'> {\n  size?: number | string;\n}\n\nexport function CheckIcon({ size, style, ...others }: CheckIconProps) {\n  const _style = size !== undefined ? { width: rem(size), height: rem(size), ...style } : style;\n\n  return (\n    <svg\n      viewBox=\"0 0 10 7\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      style={_style}\n      aria-hidden\n      {...others}\n    >\n      <path\n        d=\"M4 4.586L1.707 2.293A1 1 0 1 0 .293 3.707l3 3a.997.997 0 0 0 1.414 0l5-5A1 1 0 1 0 8.293.293L4 4.586z\"\n        fill=\"currentColor\"\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n      />\n    </svg>\n  );\n}\n\nexport function CheckboxIcon({ indeterminate, ...others }: CheckboxIconProps) {\n  if (indeterminate) {\n    return (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 32 6\"\n        aria-hidden\n        {...others}\n      >\n        <rect width=\"32\" height=\"6\" fill=\"currentColor\" rx=\"3\" />\n      </svg>\n    );\n  }\n\n  return <CheckIcon {...others} />;\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 5815, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5820, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Chip/Chip.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Chip = registerClientReference(\n    function() { throw new Error(\"Attempted to call Chip() from the server but Chip is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Chip/Chip.mjs\",\n    \"Chip\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,OAAO,2RAChB;IAAa,MAAM,IAAI,MAAM;AAAwN,GACrP,qEACA"}},
    {"offset": {"line": 5829, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5834, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Chip/Chip.tsx"],"sourcesContent":["import React from 'react';\nimport { useId, useUncontrolled } from '@mantine/hooks';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  extractStyleProps,\n  factory,\n  Factory,\n  getFontSize,\n  getRadius,\n  getSize,\n  MantineColor,\n  MantineRadius,\n  MantineSize,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { CheckIcon } from '../Checkbox';\nimport { useChipGroupContext } from './ChipGroup.context';\nimport { ChipGroup } from './ChipGroup/ChipGroup';\nimport classes from './Chip.module.css';\n\nexport type ChipStylesNames = 'root' | 'input' | 'iconWrapper' | 'checkIcon' | 'label';\nexport type ChipVariant = 'outline' | 'filled' | 'light';\nexport type ChipCssVariables = {\n  root:\n    | '--chip-fz'\n    | '--chip-size'\n    | '--chip-icon-size'\n    | '--chip-padding'\n    | '--chip-checked-padding'\n    | '--chip-radius'\n    | '--chip-bg'\n    | '--chip-hover'\n    | '--chip-color'\n    | '--chip-bd'\n    | '--chip-spacing';\n};\n\nexport interface ChipProps\n  extends BoxProps,\n    StylesApiProps<ChipFactory>,\n    ElementProps<'input', 'size' | 'onChange'> {\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius`, `'xl'` by default */\n  radius?: MantineRadius;\n\n  /** Controls various properties related to component size, `'sm'` by default */\n  size?: MantineSize;\n\n  /** Chip input type, `'checkbox'` by default */\n  type?: 'radio' | 'checkbox';\n\n  /** `label` element associated with the input */\n  children: React.ReactNode;\n\n  /** Checked state for controlled component */\n  checked?: boolean;\n\n  /** Default checked state for uncontrolled component */\n  defaultChecked?: boolean;\n\n  /** Calls when checked state changes */\n  onChange?: (checked: boolean) => void;\n\n  /** Controls components colors based on `variant` prop. Key of `theme.colors` or any valid CSS color. `theme.primaryColor` by default */\n  color?: MantineColor;\n\n  /** Static id to connect input with the label, by default `id` is randomly generated */\n  id?: string;\n\n  /** Props passed down to the root element */\n  wrapperProps?: Record<string, any>;\n\n  /** Any element or component to replace default icon */\n  icon?: React.ReactNode;\n\n  /** Assigns ref of the root element */\n  rootRef?: React.ForwardedRef<HTMLDivElement>;\n\n  /** Determines whether button text color with filled variant should depend on `background-color`. If luminosity of the `color` prop is less than `theme.luminosityThreshold`, then `theme.white` will be used for text color, otherwise `theme.black`. Overrides `theme.autoContrast`. */\n  autoContrast?: boolean;\n}\n\nexport type ChipFactory = Factory<{\n  props: ChipProps;\n  ref: HTMLInputElement;\n  stylesNames: ChipStylesNames;\n  vars: ChipCssVariables;\n  variant: ChipVariant;\n  staticComponents: {\n    Group: typeof ChipGroup;\n  };\n}>;\n\nconst defaultProps: Partial<ChipProps> = {\n  type: 'checkbox',\n};\n\nconst varsResolver = createVarsResolver<ChipFactory>(\n  (theme, { size, radius, variant, color, autoContrast }) => {\n    const colors = theme.variantColorResolver({\n      color: color || theme.primaryColor,\n      theme,\n      variant: variant || 'filled',\n      autoContrast,\n    });\n\n    return {\n      root: {\n        '--chip-fz': getFontSize(size),\n        '--chip-size': getSize(size, 'chip-size'),\n        '--chip-radius': radius === undefined ? undefined : getRadius(radius),\n        '--chip-checked-padding': getSize(size, 'chip-checked-padding'),\n        '--chip-padding': getSize(size, 'chip-padding'),\n        '--chip-icon-size': getSize(size, 'chip-icon-size'),\n        '--chip-bg': color || variant ? colors.background : undefined,\n        '--chip-hover': color || variant ? colors.hover : undefined,\n        '--chip-color': color || variant ? colors.color : undefined,\n        '--chip-bd': color || variant ? colors.border : undefined,\n        '--chip-spacing': getSize(size, 'chip-spacing'),\n      },\n    };\n  }\n);\n\nexport const Chip = factory<ChipFactory>((_props, ref) => {\n  const props = useProps('Chip', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    id,\n    checked,\n    defaultChecked,\n    onChange,\n    value,\n    wrapperProps,\n    type,\n    disabled,\n    children,\n    size,\n    variant,\n    icon,\n    rootRef,\n    autoContrast,\n    mod,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<ChipFactory>({\n    name: 'Chip',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  const ctx = useChipGroupContext();\n  const uuid = useId(id);\n  const { styleProps, rest } = extractStyleProps(others);\n\n  const [_value, setValue] = useUncontrolled({\n    value: checked,\n    defaultValue: defaultChecked,\n    finalValue: false,\n    onChange,\n  });\n\n  const contextProps = ctx\n    ? {\n        checked: ctx.isChipSelected(value as string),\n        onChange: (event: React.ChangeEvent<HTMLInputElement>) => {\n          ctx.onChange(event);\n          onChange?.(event.currentTarget.checked);\n        },\n        type: ctx.multiple ? 'checkbox' : 'radio',\n      }\n    : {};\n\n  const _checked = contextProps.checked || _value;\n\n  return (\n    <Box\n      size={size}\n      variant={variant}\n      ref={rootRef}\n      mod={mod}\n      {...getStyles('root')}\n      {...styleProps}\n      {...wrapperProps}\n    >\n      <input\n        type={type}\n        {...getStyles('input')}\n        checked={_checked}\n        onChange={(event) => setValue(event.currentTarget.checked)}\n        id={uuid}\n        disabled={disabled}\n        ref={ref}\n        value={value}\n        {...contextProps}\n        {...rest}\n      />\n\n      <label\n        htmlFor={uuid}\n        data-checked={_checked || undefined}\n        data-disabled={disabled || undefined}\n        {...getStyles('label', { variant: variant || 'filled' })}\n      >\n        {_checked && (\n          <span {...getStyles('iconWrapper')}>\n            {icon || <CheckIcon {...getStyles('checkIcon')} />}\n          </span>\n        )}\n        <span>{children}</span>\n      </label>\n    </Box>\n  );\n});\n\nChip.classes = classes;\nChip.displayName = '@mantine/core/Chip';\nChip.Group = ChipGroup;\n"],"names":[],"mappings":""}},
    {"offset": {"line": 5839, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5844, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Chip/ChipGroup/ChipGroup.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ChipGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call ChipGroup() from the server but ChipGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Chip/ChipGroup/ChipGroup.mjs\",\n    \"ChipGroup\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,YAAY,2RACrB;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,oFACA"}},
    {"offset": {"line": 5853, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5858, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Chip/ChipGroup/ChipGroup.tsx"],"sourcesContent":["import React from 'react';\nimport { useUncontrolled } from '@mantine/hooks';\nimport { useProps } from '../../../core';\nimport { ChipGroupProvider } from '../ChipGroup.context';\n\nexport interface ChipGroupProps<T extends boolean = false> {\n  /** Determines whether it is allowed to select multiple values, `false` by default */\n  multiple?: T;\n\n  /** Controlled component value */\n  value?: T extends true ? string[] : string | null;\n\n  /** Uncontrolled component initial value */\n  defaultValue?: T extends true ? string[] : string | null;\n\n  /** Called when value changes. If `multiple` prop is set, called with an array of selected values. If not, called with a string value of selected chip. */\n  onChange?: (value: T extends true ? string[] : string) => void;\n\n  /** `Chip` components and any other elements */\n  children?: React.ReactNode;\n}\n\nconst defaultProps: Partial<ChipGroupProps<false>> = {};\n\nexport function ChipGroup<T extends boolean>(props: ChipGroupProps<T>) {\n  const { value, defaultValue, onChange, multiple, children } = useProps(\n    'ChipGroup',\n    defaultProps as any,\n    props\n  );\n\n  const [_value, setValue] = useUncontrolled<string | null | string[]>({\n    value,\n    defaultValue,\n    finalValue: multiple ? ([] as string[]) : null,\n    onChange,\n  });\n\n  const isChipSelected = (val: string) =>\n    Array.isArray(_value) ? _value.includes(val) : val === _value;\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const val = event.currentTarget.value;\n    if (Array.isArray(_value)) {\n      setValue(_value.includes(val) ? _value.filter((v) => v !== val) : [..._value, val]);\n    } else {\n      setValue(val);\n    }\n  };\n\n  return (\n    <ChipGroupProvider value={{ isChipSelected, onChange: handleChange, multiple }}>\n      {children}\n    </ChipGroupProvider>\n  );\n}\n\nChipGroup.displayName = '@mantine/core/ChipGroup';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 5863, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5868, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Code/Code.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Code = registerClientReference(\n    function() { throw new Error(\"Attempted to call Code() from the server but Code is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Code/Code.mjs\",\n    \"Code\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,OAAO,2RAChB;IAAa,MAAM,IAAI,MAAM;AAAwN,GACrP,qEACA"}},
    {"offset": {"line": 5877, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5882, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Code/Code.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getThemeColor,\n  MantineColor,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport classes from './Code.module.css';\n\nexport type CodeStylesNames = 'root';\nexport type CodeCssVariables = {\n  root: '--code-bg';\n};\n\nexport interface CodeProps extends BoxProps, StylesApiProps<CodeFactory>, ElementProps<'code'> {\n  /** Key of `theme.colors` or any valid CSS color, controls `background-color` of the code, by default value is calculated based on color scheme */\n  color?: MantineColor;\n\n  /** If set code will be rendered inside `pre`, `false` by default */\n  block?: boolean;\n}\n\nexport type CodeFactory = Factory<{\n  props: CodeProps;\n  ref: HTMLElement;\n  stylesNames: CodeStylesNames;\n  vars: CodeCssVariables;\n}>;\n\nconst defaultProps: Partial<CodeProps> = {};\n\nconst varsResolver = createVarsResolver<CodeFactory>((theme, { color }) => ({\n  root: {\n    '--code-bg': color ? getThemeColor(color, theme) : undefined,\n  },\n}));\n\nexport const Code = factory<CodeFactory>((_props, ref) => {\n  const props = useProps('Code', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    color,\n    block,\n    variant,\n    mod,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<CodeFactory>({\n    name: 'Code',\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <Box<any>\n      component={block ? 'pre' : 'code'}\n      variant={variant}\n      ref={ref}\n      mod={[{ block }, mod]}\n      {...getStyles('root')}\n      {...others}\n      dir=\"ltr\"\n    />\n  );\n});\n\nCode.classes = classes;\nCode.displayName = '@mantine/core/Code';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 5887, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5892, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/ColorPicker/ColorPicker.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ColorPicker = registerClientReference(\n    function() { throw new Error(\"Attempted to call ColorPicker() from the server but ColorPicker is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/ColorPicker/ColorPicker.mjs\",\n    \"ColorPicker\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,cAAc,2RACvB;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,mFACA"}},
    {"offset": {"line": 5901, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5906, "column": 0}, "map": {"version":3,"sources":["../../../src/components/ColorPicker/ColorPicker.tsx"],"sourcesContent":["import React, { useRef, useState } from 'react';\nimport { useDidUpdate, useUncontrolled } from '@mantine/hooks';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getSize,\n  getSpacing,\n  MantineSize,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { ColorSwatch } from '../ColorSwatch';\nimport { AlphaSlider } from './AlphaSlider/AlphaSlider';\nimport { ColorPickerProvider } from './ColorPicker.context';\nimport { ColorFormat, HsvaColor } from './ColorPicker.types';\nimport { convertHsvaTo, isColorValid, parseColor } from './converters';\nimport { HueSlider } from './HueSlider/HueSlider';\nimport { Saturation } from './Saturation/Saturation';\nimport { Swatches } from './Swatches/Swatches';\nimport classes from './ColorPicker.module.css';\n\nexport type ColorPickerStylesNames =\n  | 'wrapper'\n  | 'preview'\n  | 'body'\n  | 'sliders'\n  | 'slider'\n  | 'sliderOverlay'\n  | 'thumb'\n  | 'saturation'\n  | 'thumb'\n  | 'saturationOverlay'\n  | 'thumb'\n  | 'swatches'\n  | 'swatch';\n\nexport type ColorPickerCssVariables = {\n  wrapper:\n    | '--cp-preview-size'\n    | '--cp-width'\n    | '--cp-body-spacing'\n    | '--cp-swatch-size'\n    | '--cp-thumb-size'\n    | '--cp-saturation-height';\n};\n\nexport interface __ColorPickerProps {\n  /** Controlled component value */\n  value?: string;\n\n  /** Uncontrolled component default value */\n  defaultValue?: string;\n\n  /** Called when value changes */\n  onChange?: (value: string) => void;\n\n  /** Called when the user stops dragging one of the sliders or changes the value with arrow keys */\n  onChangeEnd?: (value: string) => void;\n\n  /** Color format, `'hex'` by default */\n  format?: ColorFormat;\n\n  /** Determines whether the color picker should be displayed, `true` by default */\n  withPicker?: boolean;\n\n  /** An array of colors in one of the supported formats. Used to render swatches list below the color picker. */\n  swatches?: string[];\n\n  /** Number of swatches per row, `7` by default */\n  swatchesPerRow?: number;\n\n  /** Controls size of hue, alpha and saturation sliders, `'md'` by default */\n  size?: MantineSize | (string & {});\n}\n\nexport interface ColorPickerProps\n  extends BoxProps,\n    __ColorPickerProps,\n    StylesApiProps<ColorPickerFactory>,\n    ElementProps<'div', 'onChange' | 'value' | 'defaultValue'> {\n  __staticSelector?: string;\n\n  /** Determines whether the component should take 100% width of its container, `false` by default */\n  fullWidth?: boolean;\n\n  /** Determines whether interactive elements (sliders thumbs and swatches) should be focusable, `true` by default */\n  focusable?: boolean;\n\n  /** Saturation slider `aria-label` prop */\n  saturationLabel?: string;\n\n  /** Hue slider `aria-label` prop */\n  hueLabel?: string;\n\n  /** Alpha slider `aria-label` prop */\n  alphaLabel?: string;\n\n  /** Called when one of the color swatches is clicked */\n  onColorSwatchClick?: (color: string) => void;\n}\n\nexport type ColorPickerFactory = Factory<{\n  props: ColorPickerProps;\n  ref: HTMLDivElement;\n  stylesNames: ColorPickerStylesNames;\n  vars: ColorPickerCssVariables;\n}>;\n\nconst defaultProps: Partial<ColorPickerProps> = {\n  swatchesPerRow: 7,\n  withPicker: true,\n  focusable: true,\n  size: 'md',\n  __staticSelector: 'ColorPicker',\n};\n\nconst varsResolver = createVarsResolver<ColorPickerFactory>((_, { size, swatchesPerRow }) => ({\n  wrapper: {\n    '--cp-preview-size': getSize(size, 'cp-preview-size'),\n    '--cp-width': getSize(size, 'cp-width'),\n    '--cp-body-spacing': getSpacing(size),\n    '--cp-swatch-size': `${100 / swatchesPerRow!}%`,\n    '--cp-thumb-size': getSize(size, 'cp-thumb-size'),\n    '--cp-saturation-height': getSize(size, 'cp-saturation-height'),\n  },\n}));\n\nexport const ColorPicker = factory<ColorPickerFactory>((_props, ref) => {\n  const props = useProps('ColorPicker', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    format,\n    value,\n    defaultValue,\n    onChange,\n    onChangeEnd,\n    withPicker,\n    size,\n    saturationLabel,\n    hueLabel,\n    alphaLabel,\n    focusable,\n    swatches,\n    swatchesPerRow,\n    fullWidth,\n    onColorSwatchClick,\n    __staticSelector,\n    mod,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<ColorPickerFactory>({\n    name: __staticSelector!,\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    rootSelector: 'wrapper',\n    vars,\n    varsResolver,\n  });\n\n  const formatRef = useRef(format);\n  const valueRef = useRef<string>();\n  const scrubTimeoutRef = useRef<number>(-1);\n  const isScrubbingRef = useRef(false);\n  const withAlpha = format === 'hexa' || format === 'rgba' || format === 'hsla';\n\n  const [_value, setValue, controlled] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: '#FFFFFF',\n    onChange,\n  });\n\n  const [parsed, setParsed] = useState<HsvaColor>(parseColor(_value));\n\n  const startScrubbing = () => {\n    window.clearTimeout(scrubTimeoutRef.current);\n    isScrubbingRef.current = true;\n  };\n\n  const stopScrubbing = () => {\n    window.clearTimeout(scrubTimeoutRef.current);\n    scrubTimeoutRef.current = window.setTimeout(() => {\n      isScrubbingRef.current = false;\n    }, 200);\n  };\n\n  const handleChange = (color: Partial<HsvaColor>) => {\n    setParsed((current) => {\n      const next = { ...current, ...color };\n      valueRef.current = convertHsvaTo(formatRef.current!, next);\n      return next;\n    });\n\n    setValue(valueRef.current!);\n  };\n\n  useDidUpdate(() => {\n    if (isColorValid(value!) && !isScrubbingRef.current) {\n      setParsed(parseColor(value!));\n    }\n  }, [value]);\n\n  useDidUpdate(() => {\n    formatRef.current = format;\n    setValue(convertHsvaTo(format!, parsed));\n  }, [format]);\n\n  return (\n    <ColorPickerProvider value={{ getStyles, unstyled }}>\n      <Box\n        ref={ref}\n        {...getStyles('wrapper')}\n        size={size}\n        mod={[{ 'full-width': fullWidth }, mod]}\n        {...others}\n      >\n        {withPicker && (\n          <>\n            <Saturation\n              value={parsed}\n              onChange={handleChange}\n              onChangeEnd={({ s, v }) =>\n                onChangeEnd?.(convertHsvaTo(formatRef.current!, { ...parsed, s: s!, v: v! }))\n              }\n              color={_value}\n              size={size!}\n              focusable={focusable}\n              saturationLabel={saturationLabel}\n              onScrubStart={startScrubbing}\n              onScrubEnd={stopScrubbing}\n            />\n\n            <div {...getStyles('body')}>\n              <div {...getStyles('sliders')}>\n                <HueSlider\n                  value={parsed.h}\n                  onChange={(h) => handleChange({ h })}\n                  onChangeEnd={(h) =>\n                    onChangeEnd?.(convertHsvaTo(formatRef.current!, { ...parsed, h }))\n                  }\n                  size={size}\n                  focusable={focusable}\n                  aria-label={hueLabel}\n                  onScrubStart={startScrubbing}\n                  onScrubEnd={stopScrubbing}\n                />\n\n                {withAlpha && (\n                  <AlphaSlider\n                    value={parsed.a}\n                    onChange={(a) => handleChange({ a })}\n                    onChangeEnd={(a) => {\n                      onChangeEnd?.(convertHsvaTo(formatRef.current!, { ...parsed, a }));\n                    }}\n                    size={size}\n                    color={convertHsvaTo('hex', parsed)}\n                    focusable={focusable}\n                    aria-label={alphaLabel}\n                    onScrubStart={startScrubbing}\n                    onScrubEnd={stopScrubbing}\n                  />\n                )}\n              </div>\n\n              {withAlpha && (\n                <ColorSwatch\n                  color={_value}\n                  radius=\"sm\"\n                  size=\"var(--cp-preview-size)\"\n                  {...getStyles('preview')}\n                />\n              )}\n            </div>\n          </>\n        )}\n\n        {Array.isArray(swatches) && (\n          <Swatches\n            data={swatches}\n            swatchesPerRow={swatchesPerRow}\n            focusable={focusable}\n            setValue={setValue}\n            onChangeEnd={(color) => {\n              const convertedColor = convertHsvaTo(format!, parseColor(color));\n              onColorSwatchClick?.(convertedColor);\n              onChangeEnd?.(convertedColor);\n              if (!controlled) {\n                setParsed(parseColor(color));\n              }\n            }}\n          />\n        )}\n      </Box>\n    </ColorPickerProvider>\n  );\n});\n\nColorPicker.classes = classes;\nColorPicker.displayName = '@mantine/core/ColorPicker';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 5911, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5916, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/ColorPicker/AlphaSlider/AlphaSlider.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AlphaSlider = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlphaSlider() from the server but AlphaSlider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/ColorPicker/AlphaSlider/AlphaSlider.mjs\",\n    \"AlphaSlider\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,cAAc,2RACvB;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,+FACA"}},
    {"offset": {"line": 5925, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5930, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/ColorPicker/AlphaSlider/AlphaSlider.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport { rem, useProps } from '../../../core';\nimport { ColorSlider, ColorSliderProps } from '../ColorSlider/ColorSlider';\nimport { round } from '../converters/parsers';\n\nexport interface AlphaSliderProps\n  extends Omit<ColorSliderProps, 'maxValue' | 'overlays' | 'round'> {\n  color: string;\n}\n\nconst defaultProps: Partial<AlphaSliderProps> = {};\n\nexport const AlphaSlider = forwardRef<HTMLDivElement, AlphaSliderProps>((props, ref) => {\n  const { value, onChange, onChangeEnd, color, ...others } = useProps(\n    'AlphaSlider',\n    defaultProps,\n    props\n  );\n\n  return (\n    <ColorSlider\n      {...others}\n      ref={ref}\n      value={value}\n      onChange={(val) => onChange?.(round(val, 2))}\n      onChangeEnd={(val) => onChangeEnd?.(round(val, 2))}\n      maxValue={1}\n      round={false}\n      data-alpha\n      overlays={[\n        {\n          backgroundImage:\n            'linear-gradient(45deg, var(--slider-checkers) 25%, transparent 25%), linear-gradient(-45deg, var(--slider-checkers) 25%, transparent 25%), linear-gradient(45deg, transparent 75%, var(--slider-checkers) 75%), linear-gradient(-45deg, var(--mantine-color-body) 75%, var(--slider-checkers) 75%)',\n          backgroundSize: `${rem(8)} ${rem(8)}`,\n          backgroundPosition: `0 0, 0 ${rem(4)}, ${rem(4)} ${rem(-4)}, ${rem(-4)} 0`,\n        },\n        {\n          backgroundImage: `linear-gradient(90deg, transparent, ${color})`,\n        },\n        {\n          boxShadow: `rgba(0, 0, 0, .1) 0 0 0 ${rem(1)} inset, rgb(0, 0, 0, .15) 0 0 ${rem(\n            4\n          )} inset`,\n        },\n      ]}\n    />\n  );\n});\n\nAlphaSlider.displayName = '@mantine/core/AlphaSlider';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 5935, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5940, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/ColorPicker/HueSlider/HueSlider.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const HueSlider = registerClientReference(\n    function() { throw new Error(\"Attempted to call HueSlider() from the server but HueSlider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/ColorPicker/HueSlider/HueSlider.mjs\",\n    \"HueSlider\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,YAAY,2RACrB;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,2FACA"}},
    {"offset": {"line": 5949, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5954, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/ColorPicker/HueSlider/HueSlider.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport { rem, useProps } from '../../../core';\nimport { ColorSlider, ColorSliderProps } from '../ColorSlider/ColorSlider';\n\nexport interface HueSliderProps extends Omit<ColorSliderProps, 'maxValue' | 'overlays' | 'round'> {}\n\nexport const HueSlider = forwardRef<HTMLDivElement, HueSliderProps>((props, ref) => {\n  const { value, onChange, onChangeEnd, color, ...others } = useProps('HueSlider', {}, props);\n\n  return (\n    <ColorSlider\n      {...others}\n      ref={ref}\n      value={value}\n      onChange={onChange}\n      onChangeEnd={onChangeEnd}\n      maxValue={360}\n      thumbColor={`hsl(${value}, 100%, 50%)`}\n      round\n      data-hue\n      overlays={[\n        {\n          backgroundImage:\n            'linear-gradient(to right,hsl(0,100%,50%),hsl(60,100%,50%),hsl(120,100%,50%),hsl(170,100%,50%),hsl(240,100%,50%),hsl(300,100%,50%),hsl(360,100%,50%))',\n        },\n        {\n          boxShadow: `rgba(0, 0, 0, .1) 0 0 0 ${rem(1)} inset, rgb(0, 0, 0, .15) 0 0 ${rem(\n            4\n          )} inset`,\n        },\n      ]}\n    />\n  );\n});\n\nHueSlider.displayName = '@mantine/core/HueSlider';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 5959, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5964, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/ColorPicker/converters/converters.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const convertHsvaTo = registerClientReference(\n    function() { throw new Error(\"Attempted to call convertHsvaTo() from the server but convertHsvaTo is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/ColorPicker/converters/converters.mjs\",\n    \"convertHsvaTo\",\n);\nexport const hsvaToHex = registerClientReference(\n    function() { throw new Error(\"Attempted to call hsvaToHex() from the server but hsvaToHex is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/ColorPicker/converters/converters.mjs\",\n    \"hsvaToHex\",\n);\nexport const hsvaToHexa = registerClientReference(\n    function() { throw new Error(\"Attempted to call hsvaToHexa() from the server but hsvaToHexa is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/ColorPicker/converters/converters.mjs\",\n    \"hsvaToHexa\",\n);\nexport const hsvaToHsl = registerClientReference(\n    function() { throw new Error(\"Attempted to call hsvaToHsl() from the server but hsvaToHsl is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/ColorPicker/converters/converters.mjs\",\n    \"hsvaToHsl\",\n);\nexport const hsvaToRgba = registerClientReference(\n    function() { throw new Error(\"Attempted to call hsvaToRgba() from the server but hsvaToRgba is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/ColorPicker/converters/converters.mjs\",\n    \"hsvaToRgba\",\n);\nexport const hsvaToRgbaObject = registerClientReference(\n    function() { throw new Error(\"Attempted to call hsvaToRgbaObject() from the server but hsvaToRgbaObject is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/ColorPicker/converters/converters.mjs\",\n    \"hsvaToRgbaObject\",\n);\n"],"names":[],"mappings":";;;;;;;;;;;AACO,MAAM,gBAAgB,2RACzB;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,6FACA;AAEG,MAAM,YAAY,2RACrB;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,6FACA;AAEG,MAAM,aAAa,2RACtB;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,6FACA;AAEG,MAAM,YAAY,2RACrB;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,6FACA;AAEG,MAAM,aAAa,2RACtB;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,6FACA;AAEG,MAAM,mBAAmB,2RAC5B;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,6FACA"}},
    {"offset": {"line": 5993, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5998, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/ColorPicker/converters/converters.ts"],"sourcesContent":["import { ColorFormat, HsvaColor, RgbaColor } from '../ColorPicker.types';\nimport { round } from './parsers';\n\nexport function hsvaToRgbaObject({ h, s, v, a }: HsvaColor): RgbaColor {\n  const _h = (h / 360) * 6;\n  const _s = s / 100;\n  const _v = v / 100;\n\n  const hh = Math.floor(_h);\n  const l = _v * (1 - _s);\n  const c = _v * (1 - (_h - hh) * _s);\n  const d = _v * (1 - (1 - _h + hh) * _s);\n  const module = hh % 6;\n\n  return {\n    r: round([_v, c, l, l, d, _v][module] * 255),\n    g: round([d, _v, _v, c, l, l][module] * 255),\n    b: round([l, l, d, _v, _v, c][module] * 255),\n    a: round(a, 2),\n  };\n}\n\nexport function hsvaToRgba(color: HsvaColor, includeAlpha: boolean) {\n  const { r, g, b, a } = hsvaToRgbaObject(color);\n\n  if (!includeAlpha) {\n    return `rgb(${r}, ${g}, ${b})`;\n  }\n\n  return `rgba(${r}, ${g}, ${b}, ${round(a, 2)})`;\n}\n\nexport function hsvaToHsl({ h, s, v, a }: HsvaColor, includeAlpha: boolean) {\n  const hh = ((200 - s) * v) / 100;\n\n  const result = {\n    h: Math.round(h),\n    s: Math.round(hh > 0 && hh < 200 ? ((s * v) / 100 / (hh <= 100 ? hh : 200 - hh)) * 100 : 0),\n    l: Math.round(hh / 2),\n  };\n\n  if (!includeAlpha) {\n    return `hsl(${result.h}, ${result.s}%, ${result.l}%)`;\n  }\n\n  return `hsla(${result.h}, ${result.s}%, ${result.l}%, ${round(a, 2)})`;\n}\n\nfunction formatHexPart(number: number) {\n  const hex = number.toString(16);\n  return hex.length < 2 ? `0${hex}` : hex;\n}\n\nexport function hsvaToHex(color: HsvaColor) {\n  const { r, g, b } = hsvaToRgbaObject(color);\n  return `#${formatHexPart(r)}${formatHexPart(g)}${formatHexPart(b)}`;\n}\n\nexport function hsvaToHexa(color: HsvaColor) {\n  const a = Math.round(color.a * 255);\n\n  return `${hsvaToHex(color)}${formatHexPart(a)}`;\n}\n\nconst CONVERTERS: Record<ColorFormat, (color: HsvaColor) => string> = {\n  hex: hsvaToHex,\n  hexa: (color) => hsvaToHexa(color),\n  rgb: (color) => hsvaToRgba(color, false),\n  rgba: (color) => hsvaToRgba(color, true),\n  hsl: (color) => hsvaToHsl(color, false),\n  hsla: (color) => hsvaToHsl(color, true),\n};\n\nexport function convertHsvaTo(format: ColorFormat, color: HsvaColor) {\n  if (!color) {\n    return '#000000';\n  }\n\n  if (!(format in CONVERTERS)) {\n    return CONVERTERS.hex(color);\n  }\n\n  return CONVERTERS[format](color);\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 6003, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6008, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/ColorPicker/converters/parsers.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const isColorValid = registerClientReference(\n    function() { throw new Error(\"Attempted to call isColorValid() from the server but isColorValid is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/ColorPicker/converters/parsers.mjs\",\n    \"isColorValid\",\n);\nexport const parseColor = registerClientReference(\n    function() { throw new Error(\"Attempted to call parseColor() from the server but parseColor is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/ColorPicker/converters/parsers.mjs\",\n    \"parseColor\",\n);\nexport const parseHex = registerClientReference(\n    function() { throw new Error(\"Attempted to call parseHex() from the server but parseHex is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/ColorPicker/converters/parsers.mjs\",\n    \"parseHex\",\n);\nexport const parseHexa = registerClientReference(\n    function() { throw new Error(\"Attempted to call parseHexa() from the server but parseHexa is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/ColorPicker/converters/parsers.mjs\",\n    \"parseHexa\",\n);\nexport const parseHsla = registerClientReference(\n    function() { throw new Error(\"Attempted to call parseHsla() from the server but parseHsla is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/ColorPicker/converters/parsers.mjs\",\n    \"parseHsla\",\n);\nexport const parseHue = registerClientReference(\n    function() { throw new Error(\"Attempted to call parseHue() from the server but parseHue is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/ColorPicker/converters/parsers.mjs\",\n    \"parseHue\",\n);\nexport const parseRgba = registerClientReference(\n    function() { throw new Error(\"Attempted to call parseRgba() from the server but parseRgba is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/ColorPicker/converters/parsers.mjs\",\n    \"parseRgba\",\n);\nexport const round = registerClientReference(\n    function() { throw new Error(\"Attempted to call round() from the server but round is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/ColorPicker/converters/parsers.mjs\",\n    \"round\",\n);\n"],"names":[],"mappings":";;;;;;;;;;;;;AACO,MAAM,eAAe,2RACxB;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,0FACA;AAEG,MAAM,aAAa,2RACtB;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,0FACA;AAEG,MAAM,WAAW,2RACpB;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,0FACA;AAEG,MAAM,YAAY,2RACrB;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,0FACA;AAEG,MAAM,YAAY,2RACrB;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,0FACA;AAEG,MAAM,WAAW,2RACpB;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,0FACA;AAEG,MAAM,YAAY,2RACrB;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,0FACA;AAEG,MAAM,QAAQ,2RACjB;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,0FACA"}},
    {"offset": {"line": 6045, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6050, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/ColorPicker/converters/parsers.ts"],"sourcesContent":["import { ColorFormat, HslaColor, HsvaColor, RgbaColor } from '../ColorPicker.types';\n\nexport function round(number: number, digits = 0, base = 10 ** digits) {\n  return Math.round(base * number) / base;\n}\n\nfunction hslaToHsva({ h, s, l, a }: HslaColor): HsvaColor {\n  const ss = s * ((l < 50 ? l : 100 - l) / 100);\n\n  return {\n    h,\n    s: ss > 0 ? ((2 * ss) / (l + ss)) * 100 : 0,\n    v: l + ss,\n    a,\n  };\n}\n\nconst angleUnits: Record<string, number> = {\n  grad: 360 / 400,\n  turn: 360,\n  rad: 360 / (Math.PI * 2),\n};\n\nexport function parseHue(value: string, unit = 'deg') {\n  return Number(value) * (angleUnits[unit] || 1);\n}\n\nconst HSL_REGEXP =\n  /hsla?\\(?\\s*(-?\\d*\\.?\\d+)(deg|rad|grad|turn)?[,\\s]+(-?\\d*\\.?\\d+)%?[,\\s]+(-?\\d*\\.?\\d+)%?,?\\s*[/\\s]*(-?\\d*\\.?\\d+)?(%)?\\s*\\)?/i;\n\nexport function parseHsla(color: string): HsvaColor {\n  const match = HSL_REGEXP.exec(color);\n\n  if (!match) {\n    return { h: 0, s: 0, v: 0, a: 1 };\n  }\n\n  return hslaToHsva({\n    h: parseHue(match[1], match[2]),\n    s: Number(match[3]),\n    l: Number(match[4]),\n    a: match[5] === undefined ? 1 : Number(match[5]) / (match[6] ? 100 : 1),\n  });\n}\n\nfunction rgbaToHsva({ r, g, b, a }: RgbaColor): HsvaColor {\n  const max = Math.max(r, g, b);\n  const delta = max - Math.min(r, g, b);\n\n  const hh = delta\n    ? max === r\n      ? (g - b) / delta\n      : max === g\n        ? 2 + (b - r) / delta\n        : 4 + (r - g) / delta\n    : 0;\n\n  return {\n    h: round(60 * (hh < 0 ? hh + 6 : hh), 3),\n    s: round(max ? (delta / max) * 100 : 0, 3),\n    v: round((max / 255) * 100, 3),\n    a,\n  };\n}\n\nexport function parseHex(color: string): HsvaColor {\n  const hex = color[0] === '#' ? color.slice(1) : color;\n\n  if (hex.length === 3) {\n    return rgbaToHsva({\n      r: parseInt(hex[0] + hex[0], 16),\n      g: parseInt(hex[1] + hex[1], 16),\n      b: parseInt(hex[2] + hex[2], 16),\n      a: 1,\n    });\n  }\n\n  return rgbaToHsva({\n    r: parseInt(hex.slice(0, 2), 16),\n    g: parseInt(hex.slice(2, 4), 16),\n    b: parseInt(hex.slice(4, 6), 16),\n    a: 1,\n  });\n}\n\nexport function parseHexa(color: string): HsvaColor {\n  const hex = color[0] === '#' ? color.slice(1) : color;\n\n  const roundA = (a: string) => round(parseInt(a, 16) / 255, 3);\n  if (hex.length === 4) {\n    const withoutOpacity = hex.slice(0, 3);\n    const a = roundA(hex[3] + hex[3]);\n\n    const hsvaColor: HsvaColor = { ...parseHex(withoutOpacity), a };\n    return hsvaColor;\n  }\n\n  const withoutOpacity = hex.slice(0, 6);\n  const a = roundA(hex.slice(6, 8));\n  const hsvaColor: HsvaColor = { ...parseHex(withoutOpacity), a };\n  return hsvaColor;\n}\n\nconst RGB_REGEXP =\n  /rgba?\\(?\\s*(-?\\d*\\.?\\d+)(%)?[,\\s]+(-?\\d*\\.?\\d+)(%)?[,\\s]+(-?\\d*\\.?\\d+)(%)?,?\\s*[/\\s]*(-?\\d*\\.?\\d+)?(%)?\\s*\\)?/i;\n\nexport function parseRgba(color: string): HsvaColor {\n  const match = RGB_REGEXP.exec(color);\n\n  if (!match) {\n    return { h: 0, s: 0, v: 0, a: 1 };\n  }\n\n  return rgbaToHsva({\n    r: Number(match[1]) / (match[2] ? 100 / 255 : 1),\n    g: Number(match[3]) / (match[4] ? 100 / 255 : 1),\n    b: Number(match[5]) / (match[6] ? 100 / 255 : 1),\n    a: match[7] === undefined ? 1 : Number(match[7]) / (match[8] ? 100 : 1),\n  });\n}\n\nconst VALIDATION_REGEXP: Record<ColorFormat, RegExp> = {\n  hex: /^#?([0-9A-F]{3}){1,2}$/i,\n  hexa: /^#?([0-9A-F]{4}){1,2}$/i,\n  rgb: /^rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d+)?))?\\)$/i,\n  rgba: /^rgba\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d+)?))?\\)$/i,\n  hsl: /hsl\\(\\s*(\\d+)\\s*,\\s*(\\d+(?:\\.\\d+)?%)\\s*,\\s*(\\d+(?:\\.\\d+)?%)\\)/i,\n  hsla: /^hsla\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%,\\s*(\\d*(?:\\.\\d+)?)\\)$/i,\n};\n\nconst CONVERTERS: Record<ColorFormat, (color: string) => HsvaColor> = {\n  hex: parseHex,\n  hexa: parseHexa,\n  rgb: parseRgba,\n  rgba: parseRgba,\n  hsl: parseHsla,\n  hsla: parseHsla,\n};\n\nexport function isColorValid(color: string) {\n  for (const [, regexp] of Object.entries(VALIDATION_REGEXP)) {\n    if (regexp.test(color)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexport function parseColor(color: string): HsvaColor {\n  if (typeof color !== 'string') {\n    return { h: 0, s: 0, v: 0, a: 1 };\n  }\n\n  if (color === 'transparent') {\n    return { h: 0, s: 0, v: 0, a: 0 };\n  }\n\n  const trimmed = color.trim();\n\n  for (const [rule, regexp] of Object.entries(VALIDATION_REGEXP)) {\n    if (regexp.test(trimmed)) {\n      return CONVERTERS[rule as keyof typeof CONVERTERS](trimmed);\n    }\n  }\n\n  return { h: 0, s: 0, v: 0, a: 1 };\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 6055, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6060, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/ColorInput/ColorInput.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ColorInput = registerClientReference(\n    function() { throw new Error(\"Attempted to call ColorInput() from the server but ColorInput is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/ColorInput/ColorInput.mjs\",\n    \"ColorInput\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,aAAa,2RACtB;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,iFACA"}},
    {"offset": {"line": 6069, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6074, "column": 0}, "map": {"version":3,"sources":["../../../src/components/ColorInput/ColorInput.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDidUpdate, useEyeDropper, useUncontrolled } from '@mantine/hooks';\nimport {\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getSize,\n  StylesApiProps,\n  useProps,\n  useResolvedStylesApi,\n  useStyles,\n} from '../../core';\nimport { ActionIcon } from '../ActionIcon';\nimport {\n  __ColorPickerProps,\n  ColorPicker,\n  ColorPickerStylesNames,\n  convertHsvaTo,\n  isColorValid,\n  parseColor,\n} from '../ColorPicker';\nimport { ColorSwatch } from '../ColorSwatch';\nimport { __BaseInputProps, __InputStylesNames, Input, InputVariant, useInputProps } from '../Input';\nimport { InputBase } from '../InputBase';\nimport { Popover, PopoverProps } from '../Popover';\nimport { EyeDropperIcon } from './EyeDropperIcon';\nimport classes from './ColorInput.module.css';\n\nexport type ColorInputStylesNames =\n  | 'dropdown'\n  | 'eyeDropperButton'\n  | 'eyeDropperIcon'\n  | 'colorPreview'\n  | ColorPickerStylesNames\n  | __InputStylesNames;\n\nexport type ColorInputCssVariables = {\n  eyeDropperIcon: '--ci-eye-dropper-icon-size';\n  colorPreview: '--ci-preview-size';\n};\n\nexport interface ColorInputProps\n  extends BoxProps,\n    __BaseInputProps,\n    __ColorPickerProps,\n    StylesApiProps<ColorInputFactory>,\n    ElementProps<'input', 'size' | 'onChange' | 'value' | 'defaultValue'> {\n  /** If input is not allowed, the user can only pick value with color picker and swatches, `false` by default */\n  disallowInput?: boolean;\n\n  /** Determines whether the input value should be reset to the last known valid value when the input loses focus, `true` by default */\n  fixOnBlur?: boolean;\n\n  /** Props passed down to the `Popover` component */\n  popoverProps?: PopoverProps;\n\n  /** Determines whether the preview color swatch should be displayed in the left section of the input, `true` by default */\n  withPreview?: boolean;\n\n  /** Determines whether eye dropper button should be displayed in the right section, `true` by default */\n  withEyeDropper?: boolean;\n\n  /** An icon to replace the default eye dropper icon */\n  eyeDropperIcon?: React.ReactNode;\n\n  /** Determines whether the dropdown should be closed when one of the color swatches is clicked, `false` by default */\n  closeOnColorSwatchClick?: boolean;\n\n  /** Props passed down to the eye dropper button */\n  eyeDropperButtonProps?: Record<string, any>;\n}\n\nexport type ColorInputFactory = Factory<{\n  props: ColorInputProps;\n  ref: HTMLInputElement;\n  stylesNames: ColorInputStylesNames;\n  vars: ColorInputCssVariables;\n  variant: InputVariant;\n}>;\n\nconst defaultProps: Partial<ColorInputProps> = {\n  format: 'hex',\n  fixOnBlur: true,\n  withPreview: true,\n  swatchesPerRow: 7,\n  withPicker: true,\n  popoverProps: { transitionProps: { transition: 'fade', duration: 0 } },\n  withEyeDropper: true,\n};\n\nconst varsResolver = createVarsResolver<ColorInputFactory>((_, { size }) => ({\n  eyeDropperIcon: {\n    '--ci-eye-dropper-icon-size': getSize(size, 'ci-eye-dropper-icon-size'),\n  },\n\n  colorPreview: {\n    '--ci-preview-size': getSize(size, 'ci-preview-size'),\n  },\n}));\n\nexport const ColorInput = factory<ColorInputFactory>((_props, ref) => {\n  const props = useProps('ColorInput', defaultProps, _props);\n  const {\n    classNames,\n    styles,\n    unstyled,\n    disallowInput,\n    fixOnBlur,\n    popoverProps,\n    withPreview,\n    withEyeDropper,\n    eyeDropperIcon,\n    closeOnColorSwatchClick,\n    eyeDropperButtonProps,\n    value,\n    defaultValue,\n    onChange,\n    onChangeEnd,\n    onClick,\n    onFocus,\n    onBlur,\n    inputProps,\n    format,\n    wrapperProps,\n    readOnly,\n    withPicker,\n    swatches,\n    disabled,\n    leftSection,\n    rightSection,\n    swatchesPerRow,\n    ...others\n  } = useInputProps('ColorInput', defaultProps, _props);\n\n  const getStyles = useStyles<ColorInputFactory>({\n    name: 'ColorInput',\n    props,\n    classes,\n    classNames,\n    styles,\n    unstyled,\n    rootSelector: 'wrapper',\n    vars: props.vars,\n    varsResolver,\n  });\n\n  const { resolvedClassNames, resolvedStyles } = useResolvedStylesApi<ColorInputFactory>({\n    classNames,\n    styles,\n    props,\n  });\n\n  const [dropdownOpened, setDropdownOpened] = useState(false);\n  const [lastValidValue, setLastValidValue] = useState('');\n  const [_value, setValue] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: '',\n    onChange,\n  });\n\n  const { supported: eyeDropperSupported, open: openEyeDropper } = useEyeDropper();\n\n  const eyeDropper = (\n    <ActionIcon\n      {...eyeDropperButtonProps}\n      {...getStyles('eyeDropperButton', {\n        className: eyeDropperButtonProps?.className,\n        style: eyeDropperButtonProps?.style,\n      })}\n      variant=\"subtle\"\n      color=\"gray\"\n      size={inputProps.size}\n      unstyled={unstyled}\n      onClick={() =>\n        openEyeDropper()\n          .then((payload) => {\n            if (payload?.sRGBHex) {\n              const color = convertHsvaTo(format!, parseColor(payload.sRGBHex));\n              setValue(color);\n              onChangeEnd?.(color);\n            }\n          })\n          .catch(() => {})\n      }\n    >\n      {eyeDropperIcon || <EyeDropperIcon {...getStyles('eyeDropperIcon')} />}\n    </ActionIcon>\n  );\n\n  const handleInputFocus = (event: React.FocusEvent<HTMLInputElement>) => {\n    onFocus?.(event);\n    setDropdownOpened(true);\n  };\n\n  const handleInputBlur = (event: React.FocusEvent<HTMLInputElement>) => {\n    fixOnBlur && setValue(lastValidValue);\n    onBlur?.(event);\n    setDropdownOpened(false);\n  };\n\n  const handleInputClick = (event: React.MouseEvent<HTMLInputElement>) => {\n    onClick?.(event);\n    setDropdownOpened(true);\n  };\n\n  useEffect(() => {\n    if (isColorValid(_value) || _value.trim() === '') {\n      setLastValidValue(_value);\n    }\n  }, [_value]);\n\n  useDidUpdate(() => {\n    if (isColorValid(_value)) {\n      setValue(convertHsvaTo(format!, parseColor(_value)));\n    }\n  }, [format]);\n\n  return (\n    <Input.Wrapper\n      {...wrapperProps}\n      classNames={resolvedClassNames}\n      styles={resolvedStyles}\n      __staticSelector=\"ColorInput\"\n    >\n      <Popover\n        __staticSelector=\"ColorInput\"\n        position=\"bottom-start\"\n        offset={5}\n        {...popoverProps}\n        opened={dropdownOpened}\n        classNames={resolvedClassNames}\n        styles={resolvedStyles}\n        unstyled={unstyled}\n        withRoles={false}\n        disabled={\n          readOnly || (withPicker === false && (!Array.isArray(swatches) || swatches.length === 0))\n        }\n      >\n        <Popover.Target>\n          <Input<'input'>\n            autoComplete=\"off\"\n            {...others}\n            {...inputProps}\n            classNames={resolvedClassNames}\n            styles={resolvedStyles}\n            disabled={disabled}\n            ref={ref}\n            __staticSelector=\"ColorInput\"\n            onFocus={handleInputFocus}\n            onBlur={handleInputBlur}\n            onClick={handleInputClick}\n            spellCheck={false}\n            value={_value}\n            onChange={(event) => {\n              const inputValue = event.currentTarget.value;\n              setValue(inputValue);\n              if (isColorValid(inputValue)) {\n                onChangeEnd?.(convertHsvaTo(format!, parseColor(inputValue)));\n              }\n            }}\n            leftSection={\n              leftSection ||\n              (withPreview ? (\n                <ColorSwatch\n                  color={isColorValid(_value) ? _value : '#fff'}\n                  size=\"var(--ci-preview-size)\"\n                  {...getStyles('colorPreview')}\n                />\n              ) : null)\n            }\n            readOnly={disallowInput || readOnly}\n            pointer={disallowInput}\n            unstyled={unstyled}\n            rightSection={\n              rightSection ||\n              (withEyeDropper && !disabled && !readOnly && eyeDropperSupported ? eyeDropper : null)\n            }\n          />\n        </Popover.Target>\n\n        <Popover.Dropdown\n          onMouseDown={(event) => event.preventDefault()}\n          className={classes.dropdown}\n        >\n          <ColorPicker\n            __staticSelector=\"ColorInput\"\n            value={_value}\n            onChange={setValue}\n            onChangeEnd={onChangeEnd}\n            format={format}\n            swatches={swatches}\n            swatchesPerRow={swatchesPerRow}\n            withPicker={withPicker}\n            size={inputProps.size}\n            focusable={false}\n            unstyled={unstyled}\n            styles={resolvedStyles}\n            classNames={resolvedClassNames}\n            onColorSwatchClick={() => closeOnColorSwatchClick && setDropdownOpened(false)}\n          />\n        </Popover.Dropdown>\n      </Popover>\n    </Input.Wrapper>\n  );\n});\n\nColorInput.classes = InputBase.classes;\nColorInput.displayName = '@mantine/core/ColorInput';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 6079, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6084, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/ColorSwatch/ColorSwatch.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ColorSwatch = registerClientReference(\n    function() { throw new Error(\"Attempted to call ColorSwatch() from the server but ColorSwatch is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/ColorSwatch/ColorSwatch.mjs\",\n    \"ColorSwatch\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,cAAc,2RACvB;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,mFACA"}},
    {"offset": {"line": 6093, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6098, "column": 0}, "map": {"version":3,"sources":["../../../src/components/ColorSwatch/ColorSwatch.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  getRadius,\n  MantineRadius,\n  polymorphicFactory,\n  PolymorphicFactory,\n  rem,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport classes from './ColorSwatch.module.css';\n\nexport type ColorSwatchStylesNames =\n  | 'root'\n  | 'alphaOverlay'\n  | 'shadowOverlay'\n  | 'colorOverlay'\n  | 'childrenOverlay';\n\nexport type ColorSwatchCssVariables = {\n  root: '--cs-radius' | '--cs-size';\n};\n\nexport interface ColorSwatchProps extends BoxProps, StylesApiProps<ColorSwatchFactory> {\n  /** Color to display, not related to `theme.colors` – supports only CSS color values */\n  color: string;\n\n  /** Controls `width` and `height` of the swatch, any valid CSS value, numbers are converted to rem */\n  size?: React.CSSProperties['width'];\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius`, numbers are converted to rem */\n  radius?: MantineRadius;\n\n  /** Determines whether the swatch should have inner `box-shadow`, `true` by default */\n  withShadow?: boolean;\n\n  /** Content rendered inside the swatch */\n  children?: React.ReactNode;\n}\n\nexport type ColorSwatchFactory = PolymorphicFactory<{\n  props: ColorSwatchProps;\n  defaultRef: HTMLDivElement;\n  defaultComponent: 'div';\n  stylesNames: ColorSwatchStylesNames;\n  vars: ColorSwatchCssVariables;\n}>;\n\nconst defaultProps: Partial<ColorSwatchProps> = {\n  withShadow: true,\n};\n\nconst varsResolver = createVarsResolver<ColorSwatchFactory>((_, { radius, size }) => ({\n  root: {\n    '--cs-radius': radius === undefined ? undefined : getRadius(radius),\n    '--cs-size': rem(size),\n  },\n}));\n\nexport const ColorSwatch = polymorphicFactory<ColorSwatchFactory>((_props, ref) => {\n  const props = useProps('ColorSwatch', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    color,\n    size,\n    radius,\n    withShadow,\n    children,\n    variant,\n    ...others\n  } = useProps('ColorSwatch', defaultProps, props);\n\n  const getStyles = useStyles<ColorSwatchFactory>({\n    name: 'ColorSwatch',\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <Box\n      ref={ref}\n      variant={variant}\n      size={size}\n      {...getStyles('root', { focusable: true })}\n      {...others}\n    >\n      <span {...getStyles('alphaOverlay')} />\n      {withShadow && <span {...getStyles('shadowOverlay')} />}\n      <span {...getStyles('colorOverlay', { style: { backgroundColor: color } })} />\n      <span {...getStyles('childrenOverlay')}>{children}</span>\n    </Box>\n  );\n});\n\nColorSwatch.classes = classes;\nColorSwatch.displayName = '@mantine/core/ColorSwatch';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 6103, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6108, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Combobox/get-parsed-combobox-data/get-parsed-combobox-data.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const getParsedComboboxData = registerClientReference(\n    function() { throw new Error(\"Attempted to call getParsedComboboxData() from the server but getParsedComboboxData is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Combobox/get-parsed-combobox-data/get-parsed-combobox-data.mjs\",\n    \"getParsedComboboxData\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,wBAAwB,2RACjC;IAAa,MAAM,IAAI,MAAM;AAA0P,GACvR,sHACA"}},
    {"offset": {"line": 6117, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6122, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Combobox/get-parsed-combobox-data/get-parsed-combobox-data.ts"],"sourcesContent":["import {\n  ComboboxData,\n  ComboboxItem,\n  ComboboxItemGroup,\n  ComboboxParsedItem,\n  ComboboxParsedItemGroup,\n  ComboboxStringData,\n  ComboboxStringItem,\n} from '../Combobox.types';\n\nfunction parseItem(\n  item: string | ComboboxItem | ComboboxStringItem | ComboboxItemGroup\n): ComboboxItem | ComboboxParsedItemGroup {\n  if (typeof item === 'string') {\n    return { value: item, label: item };\n  }\n\n  if ('value' in item && !('label' in item)) {\n    return { value: item.value, label: item.value, disabled: item.disabled };\n  }\n\n  if (typeof item === 'number') {\n    return { value: (item as number).toString(), label: (item as number).toString() };\n  }\n\n  if ('group' in item) {\n    return {\n      group: item.group,\n      items: item.items.map((i) => parseItem(i) as ComboboxItem),\n    };\n  }\n\n  return item;\n}\n\nexport function getParsedComboboxData(\n  data: ComboboxData | ComboboxStringData | undefined\n): ComboboxParsedItem[] {\n  if (!data) {\n    return [];\n  }\n\n  return data.map((item) => parseItem(item as ComboboxItem));\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 6127, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6132, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Combobox/get-options-lockup/get-options-lockup.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const getLabelsLockup = registerClientReference(\n    function() { throw new Error(\"Attempted to call getLabelsLockup() from the server but getLabelsLockup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Combobox/get-options-lockup/get-options-lockup.mjs\",\n    \"getLabelsLockup\",\n);\nexport const getOptionsLockup = registerClientReference(\n    function() { throw new Error(\"Attempted to call getOptionsLockup() from the server but getOptionsLockup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Combobox/get-options-lockup/get-options-lockup.mjs\",\n    \"getOptionsLockup\",\n);\n"],"names":[],"mappings":";;;;;;;AACO,MAAM,kBAAkB,2RAC3B;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,0GACA;AAEG,MAAM,mBAAmB,2RAC5B;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,0GACA"}},
    {"offset": {"line": 6145, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6150, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Combobox/get-options-lockup/get-options-lockup.ts"],"sourcesContent":["import { ComboboxItem, ComboboxParsedItem } from '../Combobox.types';\n\nexport function getOptionsLockup(options: ComboboxParsedItem[]): Record<string, ComboboxItem> {\n  return options.reduce<Record<string, ComboboxItem>>((acc, item) => {\n    if ('group' in item) {\n      return { ...acc, ...getOptionsLockup(item.items) };\n    }\n\n    acc[(item as any).value] = item;\n\n    return acc;\n  }, {});\n}\n\nexport function getLabelsLockup(options: ComboboxParsedItem[]): Record<string, string> {\n  return options.reduce<Record<string, string>>((acc, item) => {\n    if ('group' in item) {\n      return { ...acc, ...getLabelsLockup(item.items) };\n    }\n\n    acc[(item as any).label] = item as any;\n\n    return acc;\n  }, {});\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 6155, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6160, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Combobox/ComboboxChevron/ComboboxChevron.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ComboboxChevron = registerClientReference(\n    function() { throw new Error(\"Attempted to call ComboboxChevron() from the server but ComboboxChevron is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Combobox/ComboboxChevron/ComboboxChevron.mjs\",\n    \"ComboboxChevron\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,kBAAkB,2RAC3B;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,oGACA"}},
    {"offset": {"line": 6169, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6174, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Combobox/ComboboxChevron/ComboboxChevron.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  Factory,\n  factory,\n  getSize,\n  MantineSize,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../../core';\nimport classes from '../Combobox.module.css';\n\nexport type ComboboxChevronStylesNames = 'chevron';\nexport type ComboboxChevronCSSVariables = {\n  chevron: '--combobox-chevron-size';\n};\n\nexport interface ComboboxChevronProps\n  extends BoxProps,\n    StylesApiProps<ComboboxChevronFactory>,\n    ElementProps<'svg', 'opacity' | 'display'> {\n  size?: MantineSize | (string & {});\n  error?: React.ReactNode;\n}\n\nexport type ComboboxChevronFactory = Factory<{\n  props: ComboboxChevronProps;\n  ref: SVGSVGElement;\n  stylesNames: ComboboxChevronStylesNames;\n  vars: ComboboxChevronCSSVariables;\n}>;\n\nconst defaultProps: Partial<ComboboxChevronProps> = {\n  error: null,\n};\n\nconst varsResolver = createVarsResolver<ComboboxChevronFactory>((_, { size }) => ({\n  chevron: {\n    '--combobox-chevron-size': getSize(size, 'combobox-chevron-size'),\n  },\n}));\n\nexport const ComboboxChevron = factory<ComboboxChevronFactory>((_props, ref) => {\n  const props = useProps('ComboboxChevron', defaultProps, _props);\n  const { size, error, style, className, classNames, styles, unstyled, vars, mod, ...others } =\n    props;\n\n  const getStyles = useStyles<ComboboxChevronFactory>({\n    name: 'ComboboxChevron',\n    classes,\n    props,\n    style,\n    className,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n    rootSelector: 'chevron',\n  });\n\n  return (\n    <Box\n      component=\"svg\"\n      {...others}\n      {...getStyles('chevron')}\n      size={size}\n      viewBox=\"0 0 15 15\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      mod={['combobox-chevron', { error }, mod]}\n      ref={ref}\n    >\n      <path\n        d=\"M4.93179 5.43179C4.75605 5.60753 4.75605 5.89245 4.93179 6.06819C5.10753 6.24392 5.39245 6.24392 5.56819 6.06819L7.49999 4.13638L9.43179 6.06819C9.60753 6.24392 9.89245 6.24392 10.0682 6.06819C10.2439 5.89245 10.2439 5.60753 10.0682 5.43179L7.81819 3.18179C7.73379 3.0974 7.61933 3.04999 7.49999 3.04999C7.38064 3.04999 7.26618 3.0974 7.18179 3.18179L4.93179 5.43179ZM10.0682 9.56819C10.2439 9.39245 10.2439 9.10753 10.0682 8.93179C9.89245 8.75606 9.60753 8.75606 9.43179 8.93179L7.49999 10.8636L5.56819 8.93179C5.39245 8.75606 5.10753 8.75606 4.93179 8.93179C4.75605 9.10753 4.75605 9.39245 4.93179 9.56819L7.18179 11.8182C7.35753 11.9939 7.64245 11.9939 7.81819 11.8182L10.0682 9.56819Z\"\n        fill=\"currentColor\"\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n      />\n    </Box>\n  );\n});\n\nComboboxChevron.classes = classes;\nComboboxChevron.displayName = '@mantine/core/ComboboxChevron';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 6179, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6184, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Combobox/Combobox.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Combobox = registerClientReference(\n    function() { throw new Error(\"Attempted to call Combobox() from the server but Combobox is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Combobox/Combobox.mjs\",\n    \"Combobox\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,WAAW,2RACpB;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,6EACA"}},
    {"offset": {"line": 6193, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6198, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Combobox/Combobox.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  createVarsResolver,\n  ExtendComponent,\n  Factory,\n  getFontSize,\n  getSize,\n  MantineSize,\n  MantineThemeComponent,\n  rem,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { __PopoverProps, Popover } from '../Popover';\nimport { ComboboxProvider } from './Combobox.context';\nimport { ComboboxChevron } from './ComboboxChevron/ComboboxChevron';\nimport { ComboboxClearButton } from './ComboboxClearButton/ComboboxClearButton';\nimport { ComboboxDropdown } from './ComboboxDropdown/ComboboxDropdown';\nimport { ComboboxDropdownTarget } from './ComboboxDropdownTarget/ComboboxDropdownTarget';\nimport { ComboboxEmpty } from './ComboboxEmpty/ComboboxEmpty';\nimport { ComboboxEventsTarget } from './ComboboxEventsTarget/ComboboxEventsTarget';\nimport { ComboboxFooter } from './ComboboxFooter/ComboboxFooter';\nimport { ComboboxGroup } from './ComboboxGroup/ComboboxGroup';\nimport { ComboboxHeader } from './ComboboxHeader/ComboboxHeader';\nimport { ComboboxHiddenInput } from './ComboboxHiddenInput/ComboboxHiddenInput';\nimport { ComboboxOption, ComboboxOptionProps } from './ComboboxOption/ComboboxOption';\nimport { ComboboxOptions } from './ComboboxOptions/ComboboxOptions';\nimport { ComboboxSearch } from './ComboboxSearch/ComboboxSearch';\nimport { ComboboxTarget } from './ComboboxTarget/ComboboxTarget';\nimport { ComboboxStore, useCombobox } from './use-combobox/use-combobox';\nimport classes from './Combobox.module.css';\n\nexport type ComboboxStylesNames =\n  | 'options'\n  | 'dropdown'\n  | 'option'\n  | 'search'\n  | 'empty'\n  | 'footer'\n  | 'header'\n  | 'group'\n  | 'groupLabel';\n\nexport type ComboboxCSSVariables = {\n  options: '--combobox-option-fz' | '--combobox-option-padding';\n  dropdown: '--combobox-padding' | '--combobox-option-fz' | '--combobox-option-padding';\n};\n\nexport interface ComboboxProps extends __PopoverProps, StylesApiProps<ComboboxFactory> {\n  __staticSelector?: string;\n\n  /** Combobox content */\n  children?: React.ReactNode;\n\n  /** Combobox store, can be used to control combobox state */\n  store?: ComboboxStore;\n\n  /** Called when item is selected with `Enter` key or by clicking it */\n  onOptionSubmit?: (value: string, optionProps: ComboboxOptionProps) => void;\n\n  /** Controls items `font-size` and `padding`, `'sm'` by default */\n  size?: MantineSize | (string & {});\n\n  /** Controls `padding` of the dropdown, `4` by default */\n  dropdownPadding?: React.CSSProperties['padding'];\n\n  /** Determines whether selection should be reset when option is hovered, `false` by default */\n  resetSelectionOnOptionHover?: boolean;\n\n  /** Determines whether Combobox value can be changed */\n  readOnly?: boolean;\n}\n\nexport type ComboboxFactory = Factory<{\n  props: ComboboxProps;\n  ref: HTMLDivElement;\n  stylesNames: ComboboxStylesNames;\n  vars: ComboboxCSSVariables;\n  staticComponents: {\n    Target: typeof ComboboxTarget;\n    Dropdown: typeof ComboboxDropdown;\n    Options: typeof ComboboxOptions;\n    Option: typeof ComboboxOption;\n    Search: typeof ComboboxSearch;\n    Empty: typeof ComboboxEmpty;\n    Chevron: typeof ComboboxChevron;\n    Footer: typeof ComboboxFooter;\n    Header: typeof ComboboxHeader;\n    EventsTarget: typeof ComboboxEventsTarget;\n    DropdownTarget: typeof ComboboxDropdownTarget;\n    Group: typeof ComboboxGroup;\n    ClearButton: typeof ComboboxClearButton;\n    HiddenInput: typeof ComboboxHiddenInput;\n  };\n}>;\n\nconst defaultProps: Partial<ComboboxProps> = {\n  keepMounted: true,\n  withinPortal: true,\n  resetSelectionOnOptionHover: false,\n  width: 'target',\n  transitionProps: { transition: 'fade', duration: 0 },\n};\n\nconst varsResolver = createVarsResolver<ComboboxFactory>((_, { size, dropdownPadding }) => ({\n  options: {\n    '--combobox-option-fz': getFontSize(size),\n    '--combobox-option-padding': getSize(size, 'combobox-option-padding'),\n  },\n\n  dropdown: {\n    '--combobox-padding': dropdownPadding === undefined ? undefined : rem(dropdownPadding),\n    '--combobox-option-fz': getFontSize(size),\n    '--combobox-option-padding': getSize(size, 'combobox-option-padding'),\n  },\n}));\n\nexport function Combobox(_props: ComboboxProps) {\n  const props = useProps('Combobox', defaultProps, _props);\n  const {\n    classNames,\n    styles,\n    unstyled,\n    children,\n    store: controlledStore,\n    vars,\n    onOptionSubmit,\n    onClose,\n    size,\n    dropdownPadding,\n    resetSelectionOnOptionHover,\n    __staticSelector,\n    readOnly,\n    ...others\n  } = props;\n\n  const uncontrolledStore = useCombobox();\n  const store = controlledStore || uncontrolledStore;\n\n  const getStyles = useStyles<ComboboxFactory>({\n    name: __staticSelector || 'Combobox',\n    classes,\n    props,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  const onDropdownClose = () => {\n    onClose?.();\n    store.closeDropdown();\n  };\n\n  return (\n    <ComboboxProvider\n      value={{\n        getStyles,\n        store,\n        onOptionSubmit,\n        size: size!,\n        resetSelectionOnOptionHover,\n        readOnly,\n      }}\n    >\n      <Popover\n        opened={store.dropdownOpened}\n        {...others}\n        onClose={onDropdownClose}\n        withRoles={false}\n        unstyled={unstyled}\n      >\n        {children}\n      </Popover>\n    </ComboboxProvider>\n  );\n}\n\nconst extendCombobox = (c: ExtendComponent<ComboboxFactory>): MantineThemeComponent => c;\n\nCombobox.extend = extendCombobox;\nCombobox.classes = classes;\nCombobox.displayName = '@mantine/core/Combobox';\nCombobox.Target = ComboboxTarget;\nCombobox.Dropdown = ComboboxDropdown;\nCombobox.Options = ComboboxOptions;\nCombobox.Option = ComboboxOption;\nCombobox.Search = ComboboxSearch;\nCombobox.Empty = ComboboxEmpty;\nCombobox.Chevron = ComboboxChevron;\nCombobox.Footer = ComboboxFooter;\nCombobox.Header = ComboboxHeader;\nCombobox.EventsTarget = ComboboxEventsTarget;\nCombobox.DropdownTarget = ComboboxDropdownTarget;\nCombobox.Group = ComboboxGroup;\nCombobox.ClearButton = ComboboxClearButton;\nCombobox.HiddenInput = ComboboxHiddenInput;\n"],"names":[],"mappings":""}},
    {"offset": {"line": 6203, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6208, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Combobox/ComboboxDropdown/ComboboxDropdown.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ComboboxDropdown = registerClientReference(\n    function() { throw new Error(\"Attempted to call ComboboxDropdown() from the server but ComboboxDropdown is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Combobox/ComboboxDropdown/ComboboxDropdown.mjs\",\n    \"ComboboxDropdown\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,mBAAmB,2RAC5B;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,sGACA"}},
    {"offset": {"line": 6217, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6222, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Combobox/ComboboxDropdown/ComboboxDropdown.tsx"],"sourcesContent":["import React from 'react';\nimport { factory, Factory, useProps } from '../../../core';\nimport { Popover, PopoverDropdownProps } from '../../Popover';\nimport { useComboboxContext } from '../Combobox.context';\nimport classes from '../Combobox.module.css';\n\nexport type ComboboxDropdownStylesNames = 'dropdown';\n\nexport interface ComboboxDropdownProps extends PopoverDropdownProps {\n  /** Determines whether the dropdown should be hidden, for example, when there are no options to display */\n  hidden?: boolean;\n}\n\nexport type ComboboxDropdownFactory = Factory<{\n  props: ComboboxDropdownProps;\n  ref: HTMLDivElement;\n  stylesNames: ComboboxDropdownStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<ComboboxDropdownProps> = {};\n\nexport const ComboboxDropdown = factory<ComboboxDropdownFactory>((props, ref) => {\n  const { classNames, styles, className, style, hidden, ...others } = useProps(\n    'ComboboxDropdown',\n    defaultProps,\n    props\n  );\n\n  const ctx = useComboboxContext();\n\n  return (\n    <Popover.Dropdown\n      {...others}\n      ref={ref}\n      role=\"presentation\"\n      data-hidden={hidden || undefined}\n      {...ctx.getStyles('dropdown', { className, style, classNames, styles })}\n    />\n  );\n});\n\nComboboxDropdown.classes = classes;\nComboboxDropdown.displayName = '@mantine/core/ComboboxDropdown';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 6227, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6232, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Combobox/ComboboxOptions/ComboboxOptions.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ComboboxOptions = registerClientReference(\n    function() { throw new Error(\"Attempted to call ComboboxOptions() from the server but ComboboxOptions is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Combobox/ComboboxOptions/ComboboxOptions.mjs\",\n    \"ComboboxOptions\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,kBAAkB,2RAC3B;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,oGACA"}},
    {"offset": {"line": 6241, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6246, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Combobox/ComboboxOptions/ComboboxOptions.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useId } from '@mantine/hooks';\nimport {\n  Box,\n  BoxProps,\n  CompoundStylesApiProps,\n  ElementProps,\n  factory,\n  Factory,\n  useProps,\n} from '../../../core';\nimport { useComboboxContext } from '../Combobox.context';\nimport classes from '../Combobox.module.css';\n\nexport type ComboboxOptionsStylesNames = 'options';\n\nexport interface ComboboxOptionsProps\n  extends BoxProps,\n    CompoundStylesApiProps<ComboboxOptionsFactory>,\n    ElementProps<'div'> {\n  /** Id of the element that should label the options list */\n  labelledBy?: string;\n}\n\nexport type ComboboxOptionsFactory = Factory<{\n  props: ComboboxOptionsProps;\n  ref: HTMLDivElement;\n  stylesNames: ComboboxOptionsStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<ComboboxOptionsProps> = {};\n\nexport const ComboboxOptions = factory<ComboboxOptionsFactory>((_props, ref) => {\n  const props = useProps('ComboboxOptions', defaultProps, _props);\n  const { classNames, className, style, styles, id, onMouseDown, labelledBy, ...others } = props;\n  const ctx = useComboboxContext();\n  const _id = useId(id);\n\n  useEffect(() => {\n    ctx.store.setListId(_id);\n  }, [_id]);\n\n  return (\n    <Box\n      ref={ref}\n      {...ctx.getStyles('options', { className, style, classNames, styles })}\n      {...others}\n      id={_id}\n      role=\"listbox\"\n      aria-labelledby={labelledBy}\n      onMouseDown={(event) => {\n        event.preventDefault();\n        onMouseDown?.(event);\n      }}\n    />\n  );\n});\n\nComboboxOptions.classes = classes;\nComboboxOptions.displayName = '@mantine/core/ComboboxOptions';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 6251, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6256, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Combobox/ComboboxOption/ComboboxOption.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ComboboxOption = registerClientReference(\n    function() { throw new Error(\"Attempted to call ComboboxOption() from the server but ComboboxOption is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Combobox/ComboboxOption/ComboboxOption.mjs\",\n    \"ComboboxOption\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,iBAAiB,2RAC1B;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,kGACA"}},
    {"offset": {"line": 6265, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6270, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Combobox/ComboboxOption/ComboboxOption.tsx"],"sourcesContent":["import React, { useId } from 'react';\nimport {\n  Box,\n  BoxProps,\n  CompoundStylesApiProps,\n  ElementProps,\n  factory,\n  Factory,\n  useProps,\n} from '../../../core';\nimport { useComboboxContext } from '../Combobox.context';\nimport classes from '../Combobox.module.css';\n\nexport type ComboboxOptionStylesNames = 'option';\n\nexport interface ComboboxOptionProps\n  extends BoxProps,\n    CompoundStylesApiProps<ComboboxOptionFactory>,\n    ElementProps<'div'> {\n  /** Option value */\n  value: string;\n\n  /** Determines whether the option is selected */\n  active?: boolean;\n\n  /** Determines whether the option can be selected */\n  disabled?: boolean;\n\n  /** Determines whether item is selected, useful for virtualized comboboxes */\n  selected?: boolean;\n}\n\nexport type ComboboxOptionFactory = Factory<{\n  props: ComboboxOptionProps;\n  ref: HTMLDivElement;\n  stylesNames: ComboboxOptionStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<ComboboxOptionProps> = {};\n\nexport const ComboboxOption = factory<ComboboxOptionFactory>((_props, ref) => {\n  const props = useProps('ComboboxOption', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    vars,\n    onClick,\n    id,\n    active,\n    onMouseDown,\n    onMouseOver,\n    disabled,\n    selected,\n    mod,\n    ...others\n  } = props;\n\n  const ctx = useComboboxContext();\n  const uuid = useId();\n  const _id = id || uuid;\n\n  return (\n    <Box\n      {...ctx.getStyles('option', { className, classNames, styles, style })}\n      {...others}\n      ref={ref}\n      id={_id}\n      mod={[\n        'combobox-option',\n        { 'combobox-active': active, 'combobox-disabled': disabled, 'combobox-selected': selected },\n        mod,\n      ]}\n      role=\"option\"\n      onClick={(event) => {\n        if (!disabled) {\n          ctx.onOptionSubmit?.(props.value, props);\n          onClick?.(event);\n        } else {\n          event.preventDefault();\n        }\n      }}\n      onMouseDown={(event) => {\n        event.preventDefault();\n        onMouseDown?.(event);\n      }}\n      onMouseOver={(event) => {\n        if (ctx.resetSelectionOnOptionHover) {\n          ctx.store.resetSelectedOption();\n        }\n        onMouseOver?.(event);\n      }}\n    />\n  );\n});\n\nComboboxOption.classes = classes;\nComboboxOption.displayName = '@mantine/core/ComboboxOption';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 6275, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6280, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Combobox/ComboboxTarget/ComboboxTarget.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ComboboxTarget = registerClientReference(\n    function() { throw new Error(\"Attempted to call ComboboxTarget() from the server but ComboboxTarget is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Combobox/ComboboxTarget/ComboboxTarget.mjs\",\n    \"ComboboxTarget\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,iBAAiB,2RAC1B;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,kGACA"}},
    {"offset": {"line": 6289, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6294, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Combobox/ComboboxTarget/ComboboxTarget.tsx"],"sourcesContent":["import React, { cloneElement } from 'react';\nimport { useMergedRef } from '@mantine/hooks';\nimport { factory, Factory, isElement, useProps } from '../../../core';\nimport { Popover } from '../../Popover';\nimport { useComboboxContext } from '../Combobox.context';\nimport { useComboboxTargetProps } from '../use-combobox-target-props/use-combobox-target-props';\n\nexport interface ComboboxTargetProps {\n  /** Target element */\n  children: React.ReactNode;\n\n  /** Key of the prop that should be used to access element ref */\n  refProp?: string;\n\n  /** Determines whether component should respond to keyboard events, `true` by default */\n  withKeyboardNavigation?: boolean;\n\n  /** Determines whether the target should have `aria-` attributes, `true` by default */\n  withAriaAttributes?: boolean;\n\n  /** Determines whether the target should have `aria-expanded` attribute, `false` by default */\n  withExpandedAttribute?: boolean;\n\n  /** Determines which events should be handled by the target element.\n   * `button` target type handles `Space` and `Enter` keys to toggle dropdown opened state.\n   * `input` by default.\n   * */\n  targetType?: 'button' | 'input';\n\n  /** Input autocomplete attribute */\n  autoComplete?: string;\n}\n\nconst defaultProps: Partial<ComboboxTargetProps> = {\n  refProp: 'ref',\n  targetType: 'input',\n  withKeyboardNavigation: true,\n  withAriaAttributes: true,\n  withExpandedAttribute: false,\n  autoComplete: 'off',\n};\n\nexport type ComboboxTargetFactory = Factory<{\n  props: ComboboxTargetProps;\n  ref: HTMLElement;\n  compound: true;\n}>;\n\nexport const ComboboxTarget = factory<ComboboxTargetFactory>((props, ref) => {\n  const {\n    children,\n    refProp,\n    withKeyboardNavigation,\n    withAriaAttributes,\n    withExpandedAttribute,\n    targetType,\n    autoComplete,\n    ...others\n  } = useProps('ComboboxTarget', defaultProps, props);\n\n  if (!isElement(children)) {\n    throw new Error(\n      'Combobox.Target component children should be an element or a component that accepts ref. Fragments, strings, numbers and other primitive values are not supported'\n    );\n  }\n\n  const ctx = useComboboxContext();\n\n  const targetProps = useComboboxTargetProps({\n    targetType,\n    withAriaAttributes,\n    withKeyboardNavigation,\n    withExpandedAttribute,\n    onKeyDown: children.props.onKeyDown,\n    autoComplete,\n  });\n\n  const clonedElement = cloneElement(children, {\n    ...targetProps,\n    ...others,\n  });\n\n  return (\n    <Popover.Target ref={useMergedRef(ref, ctx.store.targetRef)}>{clonedElement}</Popover.Target>\n  );\n});\n\nComboboxTarget.displayName = '@mantine/core/ComboboxTarget';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 6299, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6304, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Combobox/ComboboxSearch/ComboboxSearch.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ComboboxSearch = registerClientReference(\n    function() { throw new Error(\"Attempted to call ComboboxSearch() from the server but ComboboxSearch is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Combobox/ComboboxSearch/ComboboxSearch.mjs\",\n    \"ComboboxSearch\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,iBAAiB,2RAC1B;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,kGACA"}},
    {"offset": {"line": 6313, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6318, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Combobox/ComboboxSearch/ComboboxSearch.tsx"],"sourcesContent":["import React from 'react';\nimport { useMergedRef } from '@mantine/hooks';\nimport { ElementProps, factory, Factory, useProps } from '../../../core';\nimport { Input, InputProps, InputStylesNames } from '../../Input/Input';\nimport { useComboboxContext } from '../Combobox.context';\nimport { useComboboxTargetProps } from '../use-combobox-target-props/use-combobox-target-props';\nimport classes from '../Combobox.module.css';\n\nexport type ComboboxSearchStylesNames = InputStylesNames;\n\nexport interface ComboboxSearchProps extends InputProps, ElementProps<'input', 'size'> {\n  /** Determines whether the search input should have `aria-` attribute, `true` by default */\n  withAriaAttributes?: boolean;\n\n  /** Determines whether the search input should handle keyboard navigation, `true` by default */\n  withKeyboardNavigation?: boolean;\n}\n\nexport type ComboboxSearchFactory = Factory<{\n  props: ComboboxSearchProps;\n  ref: HTMLInputElement;\n  stylesNames: ComboboxSearchStylesNames;\n}>;\n\nconst defaultProps: Partial<ComboboxSearchProps> = {\n  withAriaAttributes: true,\n  withKeyboardNavigation: true,\n};\n\nexport const ComboboxSearch = factory<ComboboxSearchFactory>((_props, ref) => {\n  const props = useProps('ComboboxSearch', defaultProps, _props);\n  const {\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    withAriaAttributes,\n    onKeyDown,\n    withKeyboardNavigation,\n    size,\n    ...others\n  } = props;\n\n  const ctx = useComboboxContext();\n  const _styles = ctx.getStyles('search');\n\n  const targetProps = useComboboxTargetProps({\n    targetType: 'input',\n    withAriaAttributes,\n    withKeyboardNavigation,\n    withExpandedAttribute: false,\n    onKeyDown,\n    autoComplete: 'off',\n  });\n\n  return (\n    <Input\n      ref={useMergedRef(ref, ctx.store.searchRef)}\n      classNames={[{ input: _styles.className }, classNames] as any}\n      styles={[{ input: _styles.style }, styles] as any}\n      size={size || ctx.size}\n      {...targetProps}\n      {...others}\n      __staticSelector=\"Combobox\"\n    />\n  );\n});\n\nComboboxSearch.classes = classes;\nComboboxSearch.displayName = '@mantine/core/ComboboxSearch';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 6323, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6328, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Combobox/ComboboxEmpty/ComboboxEmpty.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ComboboxEmpty = registerClientReference(\n    function() { throw new Error(\"Attempted to call ComboboxEmpty() from the server but ComboboxEmpty is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Combobox/ComboboxEmpty/ComboboxEmpty.mjs\",\n    \"ComboboxEmpty\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,gBAAgB,2RACzB;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,gGACA"}},
    {"offset": {"line": 6337, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6342, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Combobox/ComboboxEmpty/ComboboxEmpty.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  CompoundStylesApiProps,\n  ElementProps,\n  factory,\n  Factory,\n  useProps,\n} from '../../../core';\nimport { useComboboxContext } from '../Combobox.context';\nimport classes from '../Combobox.module.css';\n\nexport type ComboboxEmptyStylesNames = 'empty';\n\nexport interface ComboboxEmptyProps\n  extends BoxProps,\n    CompoundStylesApiProps<ComboboxEmptyFactory>,\n    ElementProps<'div'> {}\n\nexport type ComboboxEmptyFactory = Factory<{\n  props: ComboboxEmptyProps;\n  ref: HTMLDivElement;\n  stylesNames: ComboboxEmptyStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<ComboboxEmptyProps> = {};\n\nexport const ComboboxEmpty = factory<ComboboxEmptyFactory>((props, ref) => {\n  const { classNames, className, style, styles, vars, ...others } = useProps(\n    'ComboboxEmpty',\n    defaultProps,\n    props\n  );\n\n  const ctx = useComboboxContext();\n\n  return (\n    <Box\n      ref={ref}\n      {...ctx.getStyles('empty', { className, classNames, styles, style })}\n      {...others}\n    />\n  );\n});\n\nComboboxEmpty.classes = classes;\nComboboxEmpty.displayName = '@mantine/core/ComboboxEmpty';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 6347, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6352, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Combobox/ComboboxFooter/ComboboxFooter.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ComboboxFooter = registerClientReference(\n    function() { throw new Error(\"Attempted to call ComboboxFooter() from the server but ComboboxFooter is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Combobox/ComboboxFooter/ComboboxFooter.mjs\",\n    \"ComboboxFooter\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,iBAAiB,2RAC1B;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,kGACA"}},
    {"offset": {"line": 6361, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6366, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Combobox/ComboboxFooter/ComboboxFooter.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  CompoundStylesApiProps,\n  ElementProps,\n  factory,\n  Factory,\n  useProps,\n} from '../../../core';\nimport { useComboboxContext } from '../Combobox.context';\nimport classes from '../Combobox.module.css';\n\nexport type ComboboxFooterStylesNames = 'footer';\n\nexport interface ComboboxFooterProps\n  extends BoxProps,\n    CompoundStylesApiProps<ComboboxFooterFactory>,\n    ElementProps<'div'> {}\n\nexport type ComboboxFooterFactory = Factory<{\n  props: ComboboxFooterProps;\n  ref: HTMLDivElement;\n  stylesNames: ComboboxFooterStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<ComboboxFooterProps> = {};\n\nexport const ComboboxFooter = factory<ComboboxFooterFactory>((props, ref) => {\n  const { classNames, className, style, styles, vars, ...others } = useProps(\n    'ComboboxFooter',\n    defaultProps,\n    props\n  );\n\n  const ctx = useComboboxContext();\n\n  return (\n    <Box\n      ref={ref}\n      {...ctx.getStyles('footer', { className, classNames, style, styles })}\n      {...others}\n    />\n  );\n});\n\nComboboxFooter.classes = classes;\nComboboxFooter.displayName = '@mantine/core/ComboboxFooter';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 6371, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6376, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Combobox/ComboboxHeader/ComboboxHeader.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ComboboxHeader = registerClientReference(\n    function() { throw new Error(\"Attempted to call ComboboxHeader() from the server but ComboboxHeader is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Combobox/ComboboxHeader/ComboboxHeader.mjs\",\n    \"ComboboxHeader\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,iBAAiB,2RAC1B;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,kGACA"}},
    {"offset": {"line": 6385, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6390, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Combobox/ComboboxHeader/ComboboxHeader.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  CompoundStylesApiProps,\n  ElementProps,\n  factory,\n  Factory,\n  useProps,\n} from '../../../core';\nimport { useComboboxContext } from '../Combobox.context';\nimport classes from '../Combobox.module.css';\n\nexport type ComboboxHeaderStylesNames = 'header';\n\nexport interface ComboboxHeaderProps\n  extends BoxProps,\n    CompoundStylesApiProps<ComboboxHeaderFactory>,\n    ElementProps<'div'> {}\n\nexport type ComboboxHeaderFactory = Factory<{\n  props: ComboboxHeaderProps;\n  ref: HTMLDivElement;\n  stylesNames: ComboboxHeaderStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<ComboboxHeaderProps> = {};\n\nexport const ComboboxHeader = factory<ComboboxHeaderFactory>((props, ref) => {\n  const { classNames, className, style, styles, vars, ...others } = useProps(\n    'ComboboxHeader',\n    defaultProps,\n    props\n  );\n\n  const ctx = useComboboxContext();\n\n  return (\n    <Box\n      ref={ref}\n      {...ctx.getStyles('header', { className, classNames, style, styles })}\n      {...others}\n    />\n  );\n});\n\nComboboxHeader.classes = classes;\nComboboxHeader.displayName = '@mantine/core/ComboboxHeader';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 6395, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6400, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Combobox/ComboboxEventsTarget/ComboboxEventsTarget.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ComboboxEventsTarget = registerClientReference(\n    function() { throw new Error(\"Attempted to call ComboboxEventsTarget() from the server but ComboboxEventsTarget is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Combobox/ComboboxEventsTarget/ComboboxEventsTarget.mjs\",\n    \"ComboboxEventsTarget\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,uBAAuB,2RAChC;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,8GACA"}},
    {"offset": {"line": 6409, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6414, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Combobox/ComboboxEventsTarget/ComboboxEventsTarget.tsx"],"sourcesContent":["import React, { cloneElement } from 'react';\nimport { useMergedRef } from '@mantine/hooks';\nimport { factory, Factory, isElement, useProps } from '../../../core';\nimport { useComboboxContext } from '../Combobox.context';\nimport { useComboboxTargetProps } from '../use-combobox-target-props/use-combobox-target-props';\n\nexport interface ComboboxEventsTargetProps {\n  /** Target element */\n  children: React.ReactNode;\n\n  /** Key of the prop that should be used to access element ref */\n  refProp?: string;\n\n  /** Determines whether component should respond to keyboard events, `true` by default */\n  withKeyboardNavigation?: boolean;\n\n  /** Determines whether the target should have `aria-` attributes, `true` by default */\n  withAriaAttributes?: boolean;\n\n  /** Determines whether the target should have `aria-expanded` attribute, `false` by default */\n  withExpandedAttribute?: boolean;\n\n  /** Determines which events should be handled by the target element.\n   * `button` target type handles `Space` and `Enter` keys to toggle dropdown opened state.\n   * `input` by default.\n   * */\n  targetType?: 'button' | 'input';\n\n  /** Input autocomplete attribute */\n  autoComplete?: string;\n}\n\nconst defaultProps: Partial<ComboboxEventsTargetProps> = {\n  refProp: 'ref',\n  targetType: 'input',\n  withKeyboardNavigation: true,\n  withAriaAttributes: true,\n  withExpandedAttribute: false,\n  autoComplete: 'off',\n};\n\nexport type ComboboxEventsTargetFactory = Factory<{\n  props: ComboboxEventsTargetProps;\n  ref: HTMLElement;\n  compound: true;\n}>;\n\nexport const ComboboxEventsTarget = factory<ComboboxEventsTargetFactory>((props, ref) => {\n  const {\n    children,\n    refProp,\n    withKeyboardNavigation,\n    withAriaAttributes,\n    withExpandedAttribute,\n    targetType,\n    autoComplete,\n    ...others\n  } = useProps('ComboboxEventsTarget', defaultProps, props);\n\n  if (!isElement(children)) {\n    throw new Error(\n      'Combobox.EventsTarget component children should be an element or a component that accepts ref. Fragments, strings, numbers and other primitive values are not supported'\n    );\n  }\n\n  const ctx = useComboboxContext();\n  const targetProps = useComboboxTargetProps({\n    targetType,\n    withAriaAttributes,\n    withKeyboardNavigation,\n    withExpandedAttribute,\n    onKeyDown: children.props.onKeyDown,\n    autoComplete,\n  });\n\n  return cloneElement(children, {\n    ...targetProps,\n    ...others,\n    [refProp!]: useMergedRef(ref, ctx.store.targetRef, (children as any)?.ref),\n  });\n});\n\nComboboxEventsTarget.displayName = '@mantine/core/ComboboxEventsTarget';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 6419, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6424, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Combobox/ComboboxDropdownTarget/ComboboxDropdownTarget.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ComboboxDropdownTarget = registerClientReference(\n    function() { throw new Error(\"Attempted to call ComboboxDropdownTarget() from the server but ComboboxDropdownTarget is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Combobox/ComboboxDropdownTarget/ComboboxDropdownTarget.mjs\",\n    \"ComboboxDropdownTarget\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,yBAAyB,2RAClC;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,kHACA"}},
    {"offset": {"line": 6433, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6438, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Combobox/ComboboxDropdownTarget/ComboboxDropdownTarget.tsx"],"sourcesContent":["import React from 'react';\nimport { factory, Factory, isElement, useProps } from '../../../core';\nimport { Popover } from '../../Popover';\nimport { useComboboxContext } from '../Combobox.context';\n\nexport interface ComboboxDropdownTargetProps {\n  /** Target element */\n  children: React.ReactNode;\n\n  /** Key of the prop that should be used to access element ref */\n  refProp?: string;\n}\n\nconst defaultProps: Partial<ComboboxDropdownTargetProps> = {\n  refProp: 'ref',\n};\n\nexport type ComboboxDropdownTargetFactory = Factory<{\n  props: ComboboxDropdownTargetProps;\n  ref: HTMLElement;\n  compound: true;\n}>;\n\nexport const ComboboxDropdownTarget = factory<ComboboxDropdownTargetFactory>((props, ref) => {\n  const { children, refProp } = useProps('ComboboxDropdownTarget', defaultProps, props);\n  useComboboxContext();\n\n  if (!isElement(children)) {\n    throw new Error(\n      'Combobox.DropdownTarget component children should be an element or a component that accepts ref. Fragments, strings, numbers and other primitive values are not supported'\n    );\n  }\n\n  return (\n    <Popover.Target ref={ref} refProp={refProp}>\n      {children}\n    </Popover.Target>\n  );\n});\n\nComboboxDropdownTarget.displayName = '@mantine/core/ComboboxDropdownTarget';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 6443, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6448, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Combobox/ComboboxGroup/ComboboxGroup.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ComboboxGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call ComboboxGroup() from the server but ComboboxGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Combobox/ComboboxGroup/ComboboxGroup.mjs\",\n    \"ComboboxGroup\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,gBAAgB,2RACzB;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,gGACA"}},
    {"offset": {"line": 6457, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6462, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Combobox/ComboboxGroup/ComboboxGroup.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  CompoundStylesApiProps,\n  ElementProps,\n  factory,\n  Factory,\n  useProps,\n} from '../../../core';\nimport { useComboboxContext } from '../Combobox.context';\nimport classes from '../Combobox.module.css';\n\nexport type ComboboxGroupStylesNames = 'group' | 'groupLabel';\n\nexport interface ComboboxGroupProps\n  extends BoxProps,\n    CompoundStylesApiProps<ComboboxGroupFactory>,\n    ElementProps<'div'> {\n  /** Group label */\n  label?: React.ReactNode;\n}\n\nexport type ComboboxGroupFactory = Factory<{\n  props: ComboboxGroupProps;\n  ref: HTMLDivElement;\n  stylesNames: ComboboxGroupStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<ComboboxGroupProps> = {};\n\nexport const ComboboxGroup = factory<ComboboxGroupFactory>((props, ref) => {\n  const { classNames, className, style, styles, vars, children, label, ...others } = useProps(\n    'ComboboxGroup',\n    defaultProps,\n    props\n  );\n\n  const ctx = useComboboxContext();\n\n  return (\n    <Box\n      ref={ref}\n      {...ctx.getStyles('group', { className, classNames, style, styles })}\n      {...others}\n    >\n      {label && <div {...ctx.getStyles('groupLabel', { classNames, styles })}>{label}</div>}\n      {children}\n    </Box>\n  );\n});\n\nComboboxGroup.classes = classes;\nComboboxGroup.displayName = '@mantine/core/ComboboxGroup';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 6467, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6472, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Combobox/ComboboxClearButton/ComboboxClearButton.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ComboboxClearButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call ComboboxClearButton() from the server but ComboboxClearButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Combobox/ComboboxClearButton/ComboboxClearButton.mjs\",\n    \"ComboboxClearButton\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,sBAAsB,2RAC/B;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,4GACA"}},
    {"offset": {"line": 6481, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6486, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Combobox/ComboboxClearButton/ComboboxClearButton.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport { ElementProps, MantineSize } from '../../../core';\nimport { __CloseButtonProps, CloseButton } from '../../CloseButton';\n\nexport interface ComboboxClearButtonProps extends __CloseButtonProps, ElementProps<'button'> {\n  size?: MantineSize | (string & {}) | number;\n  onClear: () => void;\n}\n\nexport const ComboboxClearButton = forwardRef<HTMLButtonElement, ComboboxClearButtonProps>(\n  ({ size, onMouseDown, onClick, onClear, ...others }, ref) => (\n    <CloseButton\n      ref={ref}\n      size={size || 'sm'}\n      variant=\"transparent\"\n      tabIndex={-1}\n      aria-hidden\n      {...others}\n      onMouseDown={(event) => {\n        event.preventDefault();\n        onMouseDown?.(event);\n      }}\n      onClick={(event) => {\n        onClear();\n        onClick?.(event);\n      }}\n    />\n  )\n);\n\nComboboxClearButton.displayName = '@mantine/core/ComboboxClearButton';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 6491, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6496, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Combobox/ComboboxHiddenInput/ComboboxHiddenInput.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ComboboxHiddenInput = registerClientReference(\n    function() { throw new Error(\"Attempted to call ComboboxHiddenInput() from the server but ComboboxHiddenInput is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Combobox/ComboboxHiddenInput/ComboboxHiddenInput.mjs\",\n    \"ComboboxHiddenInput\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,sBAAsB,2RAC/B;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,4GACA"}},
    {"offset": {"line": 6505, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6510, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Combobox/ComboboxHiddenInput/ComboboxHiddenInput.tsx"],"sourcesContent":["import React from 'react';\n\nexport interface ComboboxHiddenInputProps\n  extends Omit<React.ComponentPropsWithoutRef<'input'>, 'value'> {\n  /** Input value */\n  value: string | string[] | null;\n\n  /** Divider character that is used to transform array values to string, `','` by default */\n  valuesDivider?: string;\n}\n\nexport function ComboboxHiddenInput({\n  value,\n  valuesDivider = ',',\n  ...others\n}: ComboboxHiddenInputProps) {\n  return (\n    <input\n      type=\"hidden\"\n      value={Array.isArray(value) ? value.join(valuesDivider) : value || ''}\n      {...others}\n    />\n  );\n}\n\nComboboxHiddenInput.displayName = '@mantine/core/ComboboxHiddenInput';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 6515, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6520, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Combobox/OptionsDropdown/OptionsDropdown.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const OptionsDropdown = registerClientReference(\n    function() { throw new Error(\"Attempted to call OptionsDropdown() from the server but OptionsDropdown is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Combobox/OptionsDropdown/OptionsDropdown.mjs\",\n    \"OptionsDropdown\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,kBAAkB,2RAC3B;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,oGACA"}},
    {"offset": {"line": 6529, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6534, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Combobox/OptionsDropdown/OptionsDropdown.tsx"],"sourcesContent":["import React from 'react';\nimport cx from 'clsx';\nimport { CheckIcon } from '../../Checkbox';\nimport { ScrollArea, ScrollAreaProps } from '../../ScrollArea/ScrollArea';\nimport { Combobox } from '../Combobox';\nimport { ComboboxItem, ComboboxLikeRenderOptionInput, ComboboxParsedItem } from '../Combobox.types';\nimport { defaultOptionsFilter, FilterOptionsInput } from './default-options-filter';\nimport { isEmptyComboboxData } from './is-empty-combobox-data';\nimport { isOptionsGroup } from './is-options-group';\nimport { validateOptions } from './validate-options';\nimport classes from '../Combobox.module.css';\n\nexport type OptionsFilter = (input: FilterOptionsInput) => ComboboxParsedItem[];\n\nexport interface OptionsGroup {\n  group: string;\n  items: ComboboxItem[];\n}\n\nexport type OptionsData = (ComboboxItem | OptionsGroup)[];\n\ninterface OptionProps {\n  data: ComboboxItem | OptionsGroup;\n  withCheckIcon?: boolean;\n  value?: string | string[] | null;\n  checkIconPosition?: 'left' | 'right';\n  unstyled: boolean | undefined;\n  renderOption?: (input: ComboboxLikeRenderOptionInput<any>) => React.ReactNode;\n}\n\nfunction isValueChecked(value: string | string[] | undefined | null, optionValue: string) {\n  return Array.isArray(value) ? value.includes(optionValue) : value === optionValue;\n}\n\nfunction Option({\n  data,\n  withCheckIcon,\n  value,\n  checkIconPosition,\n  unstyled,\n  renderOption,\n}: OptionProps) {\n  if (!isOptionsGroup(data)) {\n    const checked = isValueChecked(value, data.value);\n    const check = withCheckIcon && checked && (\n      <CheckIcon className={classes.optionsDropdownCheckIcon} />\n    );\n\n    const defaultContent = (\n      <>\n        {checkIconPosition === 'left' && check}\n        <span>{data.label}</span>\n        {checkIconPosition === 'right' && check}\n      </>\n    );\n\n    return (\n      <Combobox.Option\n        value={data.value}\n        disabled={data.disabled}\n        className={cx({ [classes.optionsDropdownOption]: !unstyled })}\n        data-reverse={checkIconPosition === 'right' || undefined}\n        data-checked={checked || undefined}\n        aria-selected={checked}\n        active={checked}\n      >\n        {typeof renderOption === 'function'\n          ? renderOption({ option: data, checked })\n          : defaultContent}\n      </Combobox.Option>\n    );\n  }\n\n  const options = data.items.map((item) => (\n    <Option\n      data={item}\n      value={value}\n      key={item.value}\n      unstyled={unstyled}\n      withCheckIcon={withCheckIcon}\n      checkIconPosition={checkIconPosition}\n      renderOption={renderOption}\n    />\n  ));\n\n  return <Combobox.Group label={data.group}>{options}</Combobox.Group>;\n}\n\nexport interface OptionsDropdownProps {\n  data: OptionsData;\n  filter: OptionsFilter | undefined;\n  search: string | undefined;\n  limit: number | undefined;\n  withScrollArea: boolean | undefined;\n  maxDropdownHeight: number | string | undefined;\n  hidden?: boolean;\n  hiddenWhenEmpty?: boolean;\n  filterOptions?: boolean;\n  withCheckIcon?: boolean;\n  value?: string | string[] | null;\n  checkIconPosition?: 'left' | 'right';\n  nothingFoundMessage?: React.ReactNode;\n  unstyled: boolean | undefined;\n  labelId: string;\n  renderOption?: (input: ComboboxLikeRenderOptionInput<any>) => React.ReactNode;\n  scrollAreaProps: ScrollAreaProps | undefined;\n}\n\nexport function OptionsDropdown({\n  data,\n  hidden,\n  hiddenWhenEmpty,\n  filter,\n  search,\n  limit,\n  maxDropdownHeight,\n  withScrollArea = true,\n  filterOptions = true,\n  withCheckIcon = false,\n  value,\n  checkIconPosition,\n  nothingFoundMessage,\n  unstyled,\n  labelId,\n  renderOption,\n  scrollAreaProps,\n}: OptionsDropdownProps) {\n  validateOptions(data);\n\n  const shouldFilter = typeof search === 'string';\n  const filteredData = shouldFilter\n    ? (filter || defaultOptionsFilter)({\n        options: data,\n        search: filterOptions ? search : '',\n        limit: limit ?? Infinity,\n      })\n    : data;\n  const isEmpty = isEmptyComboboxData(filteredData);\n\n  const options = filteredData.map((item) => (\n    <Option\n      data={item}\n      key={isOptionsGroup(item) ? item.group : item.value}\n      withCheckIcon={withCheckIcon}\n      value={value}\n      checkIconPosition={checkIconPosition}\n      unstyled={unstyled}\n      renderOption={renderOption}\n    />\n  ));\n\n  return (\n    <Combobox.Dropdown hidden={hidden || (hiddenWhenEmpty && isEmpty)}>\n      <Combobox.Options labelledBy={labelId}>\n        {withScrollArea ? (\n          <ScrollArea.Autosize\n            mah={maxDropdownHeight ?? 220}\n            type=\"scroll\"\n            scrollbarSize=\"var(--combobox-padding)\"\n            offsetScrollbars=\"y\"\n            {...scrollAreaProps}\n          >\n            {options}\n          </ScrollArea.Autosize>\n        ) : (\n          options\n        )}\n        {isEmpty && nothingFoundMessage && <Combobox.Empty>{nothingFoundMessage}</Combobox.Empty>}\n      </Combobox.Options>\n    </Combobox.Dropdown>\n  );\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 6539, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6544, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Combobox/use-combobox/use-combobox.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const useCombobox = registerClientReference(\n    function() { throw new Error(\"Attempted to call useCombobox() from the server but useCombobox is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Combobox/use-combobox/use-combobox.mjs\",\n    \"useCombobox\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,cAAc,2RACvB;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,8FACA"}},
    {"offset": {"line": 6553, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6558, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Combobox/use-combobox/use-combobox.ts"],"sourcesContent":["import { useCallback, useEffect, useRef } from 'react';\nimport { useUncontrolled } from '@mantine/hooks';\nimport { getFirstIndex, getNextIndex, getPreviousIndex } from './get-index/get-index';\n\nexport type ComboboxDropdownEventSource = 'keyboard' | 'mouse' | 'unknown';\n\nexport interface ComboboxStore {\n  /** Current dropdown opened state */\n  dropdownOpened: boolean;\n\n  /** Opens dropdown */\n  openDropdown: (eventSource?: ComboboxDropdownEventSource) => void;\n\n  /** Closes dropdown */\n  closeDropdown: (eventSource?: ComboboxDropdownEventSource) => void;\n\n  /** Toggles dropdown opened state */\n  toggleDropdown: (eventSource?: ComboboxDropdownEventSource) => void;\n\n  /** Selected option index ref */\n  selectedOptionIndex: number;\n\n  /** Returns currently selected option index or `-1` if none of the options is selected */\n  getSelectedOptionIndex: () => number;\n\n  /** Selects `Combobox.Option` by index */\n  selectOption: (index: number) => void;\n\n  /** Selects first `Combobox.Option` with `active` prop.\n   *  If there are no such options, the function does nothing.\n   */\n  selectActiveOption: () => string | null;\n\n  /** Selects first `Combobox.Option` that is not disabled.\n   *  If there are no such options, the function does nothing.\n   * */\n  selectFirstOption: () => string | null;\n\n  /** Selects next `Combobox.Option` that is not disabled.\n   *  If the current option is the last one, the function selects first option, if `loop` is true.\n   */\n  selectNextOption: () => string | null;\n\n  /** Selects previous `Combobox.Option` that is not disabled.\n   *  If the current option is the first one, the function selects last option, if `loop` is true.\n   * */\n  selectPreviousOption: () => string | null;\n\n  /** Resets selected option index to -1, removes `data-combobox-selected` from selected option */\n  resetSelectedOption: () => void;\n\n  /** Triggers `onClick` event of selected option.\n   *  If there is no selected option, the function does nothing.\n   */\n  clickSelectedOption: () => void;\n\n  /** Updates selected option index to currently selected or active option.\n   *  The function is required to be used with searchable components to update selected option index\n   *  when options list changes based on search query.\n   */\n  updateSelectedOptionIndex: (\n    target?: 'active' | 'selected',\n    options?: { scrollIntoView?: boolean }\n  ) => void;\n\n  /** List id, used for `aria-*` attributes */\n  listId: string | null;\n\n  /** Sets list id */\n  setListId: (id: string) => void;\n\n  /** Ref of `Combobox.Search` input */\n  searchRef: React.MutableRefObject<HTMLInputElement | null>;\n\n  /** Moves focus to `Combobox.Search` input */\n  focusSearchInput: () => void;\n\n  /** Ref of the target element */\n  targetRef: React.MutableRefObject<HTMLElement | null>;\n\n  /** Moves focus to the target element */\n  focusTarget: () => void;\n}\n\nexport interface UseComboboxOptions {\n  /** Default value for `dropdownOpened`, `false` by default */\n  defaultOpened?: boolean;\n\n  /** Controlled `dropdownOpened` state */\n  opened?: boolean;\n\n  /** Called when `dropdownOpened` state changes */\n  onOpenedChange?: (opened: boolean) => void;\n\n  /** Called when dropdown closes with event source: keyboard, mouse or unknown */\n  onDropdownClose?: (eventSource: ComboboxDropdownEventSource) => void;\n\n  /** Called when dropdown opens with event source: keyboard, mouse or unknown */\n  onDropdownOpen?: (eventSource: ComboboxDropdownEventSource) => void;\n\n  /** Determines whether arrow key presses should loop though items (first to last and last to first), `true` by default */\n  loop?: boolean;\n\n  /** `behavior` passed down to `element.scrollIntoView`, `'instant'` by default */\n  scrollBehavior?: ScrollBehavior;\n}\n\nexport function useCombobox({\n  defaultOpened,\n  opened,\n  onOpenedChange,\n  onDropdownClose,\n  onDropdownOpen,\n  loop = true,\n  scrollBehavior = 'instant',\n}: UseComboboxOptions = {}): ComboboxStore {\n  const [dropdownOpened, setDropdownOpened] = useUncontrolled({\n    value: opened,\n    defaultValue: defaultOpened,\n    finalValue: false,\n    onChange: onOpenedChange,\n  });\n\n  const listId = useRef<string | null>(null);\n  const selectedOptionIndex = useRef<number>(-1);\n  const searchRef = useRef<HTMLInputElement | null>(null);\n  const targetRef = useRef<HTMLElement | null>(null);\n  const focusSearchTimeout = useRef<number>(-1);\n  const focusTargetTimeout = useRef<number>(-1);\n  const selectedIndexUpdateTimeout = useRef<number>(-1);\n\n  const openDropdown: ComboboxStore['openDropdown'] = useCallback(\n    (eventSource = 'unknown') => {\n      if (!dropdownOpened) {\n        setDropdownOpened(true);\n        onDropdownOpen?.(eventSource);\n      }\n    },\n    [setDropdownOpened, onDropdownOpen, dropdownOpened]\n  );\n\n  const closeDropdown: ComboboxStore['closeDropdown'] = useCallback(\n    (eventSource = 'unknown') => {\n      if (dropdownOpened) {\n        setDropdownOpened(false);\n        onDropdownClose?.(eventSource);\n      }\n    },\n    [setDropdownOpened, onDropdownClose, dropdownOpened]\n  );\n\n  const toggleDropdown: ComboboxStore['toggleDropdown'] = useCallback(\n    (eventSource = 'unknown') => {\n      if (dropdownOpened) {\n        closeDropdown(eventSource);\n      } else {\n        openDropdown(eventSource);\n      }\n    },\n    [closeDropdown, openDropdown, dropdownOpened]\n  );\n\n  const clearSelectedItem = useCallback(() => {\n    const selected = document.querySelector(`#${listId.current} [data-combobox-selected]`);\n    selected?.removeAttribute('data-combobox-selected');\n    selected?.removeAttribute('aria-selected');\n  }, []);\n\n  const selectOption = useCallback(\n    (index: number) => {\n      const list = document.getElementById(listId.current!);\n      const items = list?.querySelectorAll('[data-combobox-option]');\n\n      if (!items) {\n        return null;\n      }\n\n      const nextIndex = index >= items!.length ? 0 : index < 0 ? items!.length - 1 : index;\n      selectedOptionIndex.current = nextIndex;\n\n      if (items?.[nextIndex] && !items[nextIndex].hasAttribute('data-combobox-disabled')) {\n        clearSelectedItem();\n        items[nextIndex].setAttribute('data-combobox-selected', 'true');\n        items[nextIndex].setAttribute('aria-selected', 'true');\n        items[nextIndex].scrollIntoView({ block: 'nearest', behavior: scrollBehavior });\n        return items[nextIndex].id;\n      }\n\n      return null;\n    },\n    [scrollBehavior, clearSelectedItem]\n  );\n\n  const selectActiveOption = useCallback(() => {\n    const activeOption = document.querySelector<HTMLDivElement>(\n      `#${listId.current} [data-combobox-active]`\n    );\n\n    if (activeOption) {\n      const items = document.querySelectorAll<HTMLDivElement>(\n        `#${listId.current} [data-combobox-option]`\n      );\n      const index = Array.from(items).findIndex((option) => option === activeOption);\n      return selectOption(index);\n    }\n\n    return selectOption(0);\n  }, [selectOption]);\n\n  const selectNextOption = useCallback(\n    () =>\n      selectOption(\n        getNextIndex(\n          selectedOptionIndex.current,\n          document.querySelectorAll<HTMLDivElement>(`#${listId.current} [data-combobox-option]`),\n          loop\n        )\n      ),\n    [selectOption, loop]\n  );\n\n  const selectPreviousOption = useCallback(\n    () =>\n      selectOption(\n        getPreviousIndex(\n          selectedOptionIndex.current,\n          document.querySelectorAll<HTMLDivElement>(`#${listId.current} [data-combobox-option]`),\n          loop\n        )\n      ),\n    [selectOption, loop]\n  );\n\n  const selectFirstOption = useCallback(\n    () =>\n      selectOption(\n        getFirstIndex(\n          document.querySelectorAll<HTMLDivElement>(`#${listId.current} [data-combobox-option]`)\n        )\n      ),\n    [selectOption]\n  );\n\n  const updateSelectedOptionIndex = useCallback(\n    (target: 'active' | 'selected' = 'selected', options?: { scrollIntoView?: boolean }) => {\n      selectedIndexUpdateTimeout.current = window.setTimeout(() => {\n        const items = document.querySelectorAll<HTMLDivElement>(\n          `#${listId.current} [data-combobox-option]`\n        );\n        const index = Array.from(items).findIndex((option) =>\n          option.hasAttribute(`data-combobox-${target}`)\n        );\n\n        selectedOptionIndex.current = index;\n\n        if (options?.scrollIntoView) {\n          items[index]?.scrollIntoView({ block: 'nearest', behavior: scrollBehavior });\n        }\n      }, 0);\n    },\n    []\n  );\n\n  const resetSelectedOption = useCallback(() => {\n    selectedOptionIndex.current = -1;\n    clearSelectedItem();\n  }, [clearSelectedItem]);\n\n  const clickSelectedOption = useCallback(() => {\n    const items = document.querySelectorAll<HTMLDivElement>(\n      `#${listId.current} [data-combobox-option]`\n    );\n    const item = items?.[selectedOptionIndex.current];\n    item?.click();\n  }, []);\n\n  const setListId = useCallback((id: string) => {\n    listId.current = id;\n  }, []);\n\n  const focusSearchInput = useCallback(() => {\n    focusSearchTimeout.current = window.setTimeout(() => searchRef.current!.focus(), 0);\n  }, []);\n\n  const focusTarget = useCallback(() => {\n    focusTargetTimeout.current = window.setTimeout(() => targetRef.current!.focus(), 0);\n  }, []);\n\n  const getSelectedOptionIndex = useCallback(() => selectedOptionIndex.current, []);\n\n  useEffect(\n    () => () => {\n      window.clearTimeout(focusSearchTimeout.current);\n      window.clearTimeout(focusTargetTimeout.current);\n      window.clearTimeout(selectedIndexUpdateTimeout.current);\n    },\n    []\n  );\n\n  return {\n    dropdownOpened,\n    openDropdown,\n    closeDropdown,\n    toggleDropdown,\n\n    selectedOptionIndex: selectedOptionIndex.current,\n    getSelectedOptionIndex,\n    selectOption,\n    selectFirstOption,\n    selectActiveOption,\n    selectNextOption,\n    selectPreviousOption,\n    resetSelectedOption,\n    updateSelectedOptionIndex,\n\n    listId: listId.current,\n    setListId,\n    clickSelectedOption,\n\n    searchRef,\n    focusSearchInput,\n\n    targetRef,\n    focusTarget,\n  };\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 6563, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6568, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Combobox/use-combobox/use-virtualized-combobox.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const useVirtualizedCombobox = registerClientReference(\n    function() { throw new Error(\"Attempted to call useVirtualizedCombobox() from the server but useVirtualizedCombobox is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Combobox/use-combobox/use-virtualized-combobox.mjs\",\n    \"useVirtualizedCombobox\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,yBAAyB,2RAClC;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,0GACA"}},
    {"offset": {"line": 6577, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6582, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Combobox/use-combobox/use-virtualized-combobox.ts"],"sourcesContent":["// WIP, not planned to be released in 7.0, maybe in 7.x\nimport { useCallback, useEffect, useRef } from 'react';\nimport { useUncontrolled } from '@mantine/hooks';\nimport { getFirstIndex, getNextIndex, getPreviousIndex } from './get-index/get-virtualized-index';\nimport { ComboboxStore } from './use-combobox';\n\ninterface UseComboboxOptions {\n  /** Default value for `dropdownOpened`, `false` by default */\n  defaultOpened?: boolean;\n\n  /** Controlled `dropdownOpened` state */\n  opened?: boolean;\n\n  /** Called when `dropdownOpened` state changes */\n  onOpenedChange?: (opened: boolean) => void;\n\n  /** Called when dropdown closes */\n  onDropdownClose?: () => void;\n\n  /** Called when dropdown opens */\n  onDropdownOpen?: () => void;\n\n  /** Determines whether arrow key presses should loop though items (first to last and last to first), `true` by default */\n  loop?: boolean;\n\n  /** Function to determine whether the option is disabled */\n  isOptionDisabled?: (optionIndex: number) => boolean;\n\n  totalOptionsCount: number;\n\n  getOptionId: (index: number) => string | null;\n\n  selectedOptionIndex: number;\n\n  setSelectedOptionIndex: (index: number) => void;\n\n  activeOptionIndex?: number;\n\n  onSelectedOptionSubmit: (index: number) => void;\n}\n\nexport function useVirtualizedCombobox(\n  {\n    defaultOpened,\n    opened,\n    onOpenedChange,\n    onDropdownClose,\n    onDropdownOpen,\n    loop = true,\n    totalOptionsCount,\n    isOptionDisabled = () => false,\n    getOptionId,\n    selectedOptionIndex,\n    setSelectedOptionIndex,\n    activeOptionIndex,\n    onSelectedOptionSubmit,\n  }: UseComboboxOptions = {\n    totalOptionsCount: 0,\n    getOptionId: () => null,\n    selectedOptionIndex: 1,\n    setSelectedOptionIndex: () => {},\n    onSelectedOptionSubmit: () => {},\n  }\n): ComboboxStore {\n  const [dropdownOpened, setDropdownOpened] = useUncontrolled({\n    value: opened,\n    defaultValue: defaultOpened,\n    finalValue: false,\n    onChange: onOpenedChange,\n  });\n\n  const listId = useRef<string | null>(null);\n  const searchRef = useRef<HTMLInputElement | null>(null);\n  const targetRef = useRef<HTMLElement | null>(null);\n  const focusSearchTimeout = useRef<number>(-1);\n  const focusTargetTimeout = useRef<number>(-1);\n\n  const openDropdown = () => {\n    if (!dropdownOpened) {\n      setDropdownOpened(true);\n      onDropdownOpen?.();\n    }\n  };\n\n  const closeDropdown = () => {\n    if (dropdownOpened) {\n      setDropdownOpened(false);\n      onDropdownClose?.();\n    }\n  };\n\n  const toggleDropdown = () => {\n    if (dropdownOpened) {\n      closeDropdown();\n    } else {\n      openDropdown();\n    }\n  };\n\n  const selectOption = (index: number) => {\n    const nextIndex = index >= totalOptionsCount ? 0 : index < 0 ? totalOptionsCount - 1 : index;\n    setSelectedOptionIndex(nextIndex);\n    return getOptionId(nextIndex);\n  };\n\n  const selectActiveOption = () => selectOption(activeOptionIndex ?? 0);\n\n  const selectNextOption = () =>\n    selectOption(\n      getNextIndex({ currentIndex: selectedOptionIndex, isOptionDisabled, totalOptionsCount, loop })\n    );\n\n  const selectPreviousOption = () =>\n    selectOption(\n      getPreviousIndex({\n        currentIndex: selectedOptionIndex,\n        isOptionDisabled,\n        totalOptionsCount,\n        loop,\n      })\n    );\n\n  const selectFirstOption = () =>\n    selectOption(getFirstIndex({ isOptionDisabled, totalOptionsCount }));\n\n  const resetSelectedOption = () => {\n    setSelectedOptionIndex(-1);\n  };\n\n  const clickSelectedOption = () => {\n    onSelectedOptionSubmit?.(selectedOptionIndex);\n  };\n\n  const setListId = (id: string) => {\n    listId.current = id;\n  };\n\n  const focusSearchInput = () => {\n    focusSearchTimeout.current = window.setTimeout(() => searchRef.current!.focus(), 0);\n  };\n\n  const focusTarget = () => {\n    focusTargetTimeout.current = window.setTimeout(() => targetRef.current!.focus(), 0);\n  };\n\n  useEffect(\n    () => () => {\n      window.clearTimeout(focusSearchTimeout.current);\n      window.clearTimeout(focusTargetTimeout.current);\n    },\n    []\n  );\n\n  const getSelectedOptionIndex = useCallback(() => selectedOptionIndex, []);\n\n  return {\n    dropdownOpened,\n    openDropdown,\n    closeDropdown,\n    toggleDropdown,\n\n    selectedOptionIndex,\n    getSelectedOptionIndex,\n    selectOption,\n    selectFirstOption,\n    selectActiveOption,\n    selectNextOption,\n    selectPreviousOption,\n    resetSelectedOption,\n    updateSelectedOptionIndex: () => {},\n\n    listId: listId.current,\n    setListId,\n    clickSelectedOption,\n\n    searchRef,\n    focusSearchInput,\n\n    targetRef,\n    focusTarget,\n  };\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 6587, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6592, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Combobox/use-combobox-target-props/use-combobox-target-props.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const useComboboxTargetProps = registerClientReference(\n    function() { throw new Error(\"Attempted to call useComboboxTargetProps() from the server but useComboboxTargetProps is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Combobox/use-combobox-target-props/use-combobox-target-props.mjs\",\n    \"useComboboxTargetProps\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,yBAAyB,2RAClC;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,wHACA"}},
    {"offset": {"line": 6601, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6606, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Combobox/use-combobox-target-props/use-combobox-target-props.ts"],"sourcesContent":["import { useState } from 'react';\nimport { useComboboxContext } from '../Combobox.context';\n\ninterface UseComboboxTargetPropsInput {\n  targetType: 'input' | 'button' | undefined;\n  withAriaAttributes: boolean | undefined;\n  withKeyboardNavigation: boolean | undefined;\n  withExpandedAttribute: boolean | undefined;\n  onKeyDown: React.KeyboardEventHandler<HTMLInputElement> | undefined;\n  autoComplete: string | undefined;\n}\n\nexport function useComboboxTargetProps({\n  onKeyDown,\n  withKeyboardNavigation,\n  withAriaAttributes,\n  withExpandedAttribute,\n  targetType,\n  autoComplete,\n}: UseComboboxTargetPropsInput) {\n  const ctx = useComboboxContext();\n  const [selectedOptionId, setSelectedOptionId] = useState<string | null>(null);\n\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    onKeyDown?.(event);\n\n    if (ctx.readOnly) {\n      return;\n    }\n\n    if (withKeyboardNavigation) {\n      // Ignore during composition in IME\n      if (event.nativeEvent.isComposing) return;\n\n      if (event.nativeEvent.code === 'ArrowDown') {\n        event.preventDefault();\n\n        if (!ctx.store.dropdownOpened) {\n          ctx.store.openDropdown('keyboard');\n          setSelectedOptionId(ctx.store.selectActiveOption());\n        } else {\n          setSelectedOptionId(ctx.store.selectNextOption());\n        }\n      }\n\n      if (event.nativeEvent.code === 'ArrowUp') {\n        event.preventDefault();\n\n        if (!ctx.store.dropdownOpened) {\n          ctx.store.openDropdown('keyboard');\n          setSelectedOptionId(ctx.store.selectActiveOption());\n        } else {\n          setSelectedOptionId(ctx.store.selectPreviousOption());\n        }\n      }\n\n      if (event.nativeEvent.code === 'Enter' || event.nativeEvent.code === 'NumpadEnter') {\n        // This is a workaround for handling differences in behavior of isComposing property in Safari\n        // See: https://dninomiya.github.io/form-guide/stop-enter-submit\n        if (event.nativeEvent.keyCode === 229) return;\n\n        const selectedOptionIndex = ctx.store.getSelectedOptionIndex();\n\n        if (ctx.store.dropdownOpened && selectedOptionIndex !== -1) {\n          event.preventDefault();\n          ctx.store.clickSelectedOption();\n        } else if (targetType === 'button') {\n          event.preventDefault();\n          ctx.store.openDropdown('keyboard');\n        }\n      }\n\n      if (event.nativeEvent.code === 'Escape') {\n        ctx.store.closeDropdown('keyboard');\n      }\n\n      if (event.nativeEvent.code === 'Space') {\n        if (targetType === 'button') {\n          event.preventDefault();\n          ctx.store.toggleDropdown('keyboard');\n        }\n      }\n    }\n  };\n\n  const ariaAttributes = withAriaAttributes\n    ? {\n        'aria-haspopup': 'listbox',\n        'aria-expanded':\n          (withExpandedAttribute && !!(ctx.store.listId && ctx.store.dropdownOpened)) || undefined,\n        'aria-controls': ctx.store.listId,\n        'aria-activedescendant': ctx.store.dropdownOpened\n          ? selectedOptionId || undefined\n          : undefined,\n        autoComplete,\n        'data-expanded': ctx.store.dropdownOpened || undefined,\n        'data-mantine-stop-propagation': ctx.store.dropdownOpened || undefined,\n      }\n    : {};\n\n  return {\n    ...ariaAttributes,\n    onKeyDown: handleKeyDown,\n  };\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 6611, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6616, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Combobox/OptionsDropdown/is-options-group.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const isOptionsGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call isOptionsGroup() from the server but isOptionsGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Combobox/OptionsDropdown/is-options-group.mjs\",\n    \"isOptionsGroup\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,iBAAiB,2RAC1B;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,qGACA"}},
    {"offset": {"line": 6625, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6630, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Combobox/OptionsDropdown/is-options-group.ts"],"sourcesContent":["import { ComboboxParsedItem, ComboboxParsedItemGroup } from '../Combobox.types';\n\nexport function isOptionsGroup(item: ComboboxParsedItem): item is ComboboxParsedItemGroup {\n  return 'group' in item;\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 6635, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6640, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Combobox/OptionsDropdown/default-options-filter.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const defaultOptionsFilter = registerClientReference(\n    function() { throw new Error(\"Attempted to call defaultOptionsFilter() from the server but defaultOptionsFilter is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Combobox/OptionsDropdown/default-options-filter.mjs\",\n    \"defaultOptionsFilter\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,uBAAuB,2RAChC;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,2GACA"}},
    {"offset": {"line": 6649, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6654, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Combobox/OptionsDropdown/default-options-filter.ts"],"sourcesContent":["import { ComboboxItem, ComboboxParsedItem } from '../Combobox.types';\nimport { isOptionsGroup } from './is-options-group';\n\nexport interface FilterOptionsInput {\n  options: ComboboxParsedItem[];\n  search: string;\n  limit: number;\n}\n\nexport function defaultOptionsFilter({\n  options,\n  search,\n  limit,\n}: FilterOptionsInput): ComboboxParsedItem[] {\n  const parsedSearch = search.trim().toLowerCase();\n  const result: ComboboxParsedItem[] = [];\n\n  for (let i = 0; i < options.length; i += 1) {\n    const item = options[i];\n\n    if (result.length === limit) {\n      return result;\n    }\n\n    if (isOptionsGroup(item)) {\n      result.push({\n        group: item.group,\n        items: defaultOptionsFilter({\n          options: item.items,\n          search,\n          limit: limit - result.length,\n        }) as ComboboxItem[],\n      });\n    }\n\n    if (!isOptionsGroup(item)) {\n      if (item.label.toLowerCase().includes(parsedSearch)) {\n        result.push(item);\n      }\n    }\n  }\n\n  return result;\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 6659, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6664, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Container/Container.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Container = registerClientReference(\n    function() { throw new Error(\"Attempted to call Container() from the server but Container is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Container/Container.mjs\",\n    \"Container\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,YAAY,2RACrB;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,+EACA"}},
    {"offset": {"line": 6673, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6678, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Container/Container.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getSize,\n  MantineSize,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport classes from './Container.module.css';\n\nexport type ContainerStylesNames = 'root';\nexport type ContainerCssVariables = {\n  root: '--container-size';\n};\n\nexport interface ContainerProps\n  extends BoxProps,\n    StylesApiProps<ContainerFactory>,\n    ElementProps<'div'> {\n  /** Sets `max-width` of the container, value is not responsive – it is the same for all screen sizes. Numbers are converted to rem. Ignored when `fluid` prop is set. `'md'` by default */\n  size?: MantineSize | (string & {}) | number;\n\n  /** Determines whether the container should take 100% of its parent width. If set, `size` prop is ignored. `false` by default. */\n  fluid?: boolean;\n}\n\nexport type ContainerFactory = Factory<{\n  props: ContainerProps;\n  ref: HTMLDivElement;\n  stylesNames: ContainerStylesNames;\n  vars: ContainerCssVariables;\n}>;\n\nconst defaultProps: Partial<ContainerProps> = {};\n\nconst varsResolver = createVarsResolver<ContainerFactory>((_, { size, fluid }) => ({\n  root: {\n    '--container-size': fluid ? undefined : getSize(size, 'container-size'),\n  },\n}));\n\nexport const Container = factory<ContainerFactory>((_props, ref) => {\n  const props = useProps('Container', defaultProps, _props);\n  const { classNames, className, style, styles, unstyled, vars, fluid, mod, ...others } = props;\n\n  const getStyles = useStyles<ContainerFactory>({\n    name: 'Container',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return <Box ref={ref} mod={[{ fluid }, mod]} {...getStyles('root')} {...others} />;\n});\n\nContainer.classes = classes;\nContainer.displayName = '@mantine/core/Container';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 6683, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6688, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/CopyButton/CopyButton.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const CopyButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call CopyButton() from the server but CopyButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/CopyButton/CopyButton.mjs\",\n    \"CopyButton\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,aAAa,2RACtB;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,iFACA"}},
    {"offset": {"line": 6697, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6702, "column": 0}, "map": {"version":3,"sources":["../../../src/components/CopyButton/CopyButton.tsx"],"sourcesContent":["import React from 'react';\nimport { useClipboard } from '@mantine/hooks';\nimport { useProps } from '../../core';\n\nexport interface CopyButtonProps {\n  /** Children callback, provides current status and copy function as an argument */\n  children: (payload: { copied: boolean; copy: () => void }) => React.ReactNode;\n\n  /** Value that will be copied to the clipboard when the button is clicked */\n  value: string;\n\n  /** Copied status timeout in ms, `1000` by default */\n  timeout?: number;\n}\n\nconst defaultProps: Partial<CopyButtonProps> = {\n  timeout: 1000,\n};\n\nexport function CopyButton(props: CopyButtonProps) {\n  const { children, timeout, value, ...others } = useProps('CopyButton', defaultProps, props);\n  const clipboard = useClipboard({ timeout });\n  const copy = () => clipboard.copy(value);\n  return <>{children({ copy, copied: clipboard.copied, ...others })}</>;\n}\n\nCopyButton.displayName = '@mantine/core/CopyButton';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 6707, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6712, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Dialog/Dialog.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Dialog = registerClientReference(\n    function() { throw new Error(\"Attempted to call Dialog() from the server but Dialog is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Dialog/Dialog.mjs\",\n    \"Dialog\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,SAAS,2RAClB;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,yEACA"}},
    {"offset": {"line": 6721, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6726, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Dialog/Dialog.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getSize,\n  MantineSize,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { Affix, AffixBaseProps } from '../Affix';\nimport { CloseButton } from '../CloseButton';\nimport { Paper, PaperBaseProps } from '../Paper';\nimport { Transition, TransitionOverride } from '../Transition';\nimport classes from './Dialog.module.css';\n\nexport type DialogStylesNames = 'root' | 'closeButton';\nexport type DialogCssVariables = {\n  root: '--dialog-size';\n};\n\nexport interface DialogProps\n  extends BoxProps,\n    AffixBaseProps,\n    PaperBaseProps,\n    StylesApiProps<DialogFactory>,\n    ElementProps<'div'> {\n  /** If set dialog will not be unmounted from the DOM when it is hidden, display: none styles will be added instead */\n  keepMounted?: boolean;\n\n  /** Determines whether the close button should be displayed, `true` by default */\n  withCloseButton?: boolean;\n\n  /** Called when the close button is clicked */\n  onClose?: () => void;\n\n  /** Dialog content */\n  children?: React.ReactNode;\n\n  /** Opened state */\n  opened: boolean;\n\n  /** Overrides default transition, `{ transition: 'pop-top-right', duration: 200 }` by default */\n  transitionProps?: TransitionOverride;\n\n  /** Controls `width` of the dialog, `'md'` by default */\n  size?: MantineSize | (string & {}) | number;\n}\n\nexport type DialogFactory = Factory<{\n  props: DialogProps;\n  ref: HTMLDivElement;\n  stylesNames: DialogStylesNames;\n  vars: DialogCssVariables;\n}>;\n\nconst defaultProps: Partial<DialogProps> = {\n  shadow: 'md',\n  p: 'md',\n  withBorder: false,\n  transitionProps: { transition: 'pop-top-right', duration: 200 },\n  position: {\n    bottom: 30,\n    right: 30,\n  },\n};\n\nconst varsResolver = createVarsResolver<DialogFactory>((_, { size }) => ({\n  root: {\n    '--dialog-size': getSize(size, 'dialog-size'),\n  },\n}));\n\nexport const Dialog = factory<DialogFactory>((_props, ref) => {\n  const props = useProps('Dialog', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    zIndex,\n    position,\n    keepMounted,\n    opened,\n    transitionProps,\n    withCloseButton,\n    withinPortal,\n    children,\n    onClose,\n    portalProps,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<DialogFactory>({\n    name: 'Dialog',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <Affix\n      zIndex={zIndex}\n      position={position}\n      ref={ref}\n      withinPortal={withinPortal}\n      portalProps={portalProps}\n      unstyled={unstyled}\n    >\n      <Transition keepMounted={keepMounted} mounted={opened} {...transitionProps}>\n        {(transitionStyles) => (\n          <Paper\n            unstyled={unstyled}\n            {...getStyles('root', { style: transitionStyles })}\n            {...others}\n          >\n            {withCloseButton && (\n              <CloseButton onClick={onClose} unstyled={unstyled} {...getStyles('closeButton')} />\n            )}\n            {children}\n          </Paper>\n        )}\n      </Transition>\n    </Affix>\n  );\n});\n\nDialog.classes = classes;\nDialog.displayName = '@mantine/core/Dialog';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 6731, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6736, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Divider/Divider.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Divider = registerClientReference(\n    function() { throw new Error(\"Attempted to call Divider() from the server but Divider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Divider/Divider.mjs\",\n    \"Divider\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,UAAU,2RACnB;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,2EACA"}},
    {"offset": {"line": 6745, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6750, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Divider/Divider.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getSize,\n  getThemeColor,\n  MantineColor,\n  MantineSize,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport classes from './Divider.module.css';\n\nexport type DividerStylesNames = 'root' | 'label';\nexport type DividerVariant = 'solid' | 'dashed' | 'dotted';\nexport type DividerCssVariables = {\n  root: '--divider-color' | '--divider-border-style' | '--divider-size';\n};\n\nexport interface DividerProps\n  extends BoxProps,\n    StylesApiProps<DividerFactory>,\n    ElementProps<'div'> {\n  /** Key of `theme.colors` or any valid CSS color value, by default value depends on color scheme */\n  color?: MantineColor;\n\n  /** Controls width/height (depends on orientation), `'xs'` by default */\n  size?: MantineSize | number | (string & {});\n\n  /** Divider label, visible only when `orientation` is `horizontal` */\n  label?: React.ReactNode;\n\n  /** Controls label position, `'left'` by default */\n  labelPosition?: 'left' | 'center' | 'right';\n\n  /** Controls orientation, `'horizontal'` by default */\n  orientation?: 'horizontal' | 'vertical';\n}\n\nexport type DividerFactory = Factory<{\n  props: DividerProps;\n  ref: HTMLDivElement;\n  stylesNames: DividerStylesNames;\n  vars: DividerCssVariables;\n  variant: DividerVariant;\n}>;\n\nconst defaultProps: Partial<DividerProps> = {\n  orientation: 'horizontal',\n};\n\nconst varsResolver = createVarsResolver<DividerFactory>((theme, { color, variant, size }) => ({\n  root: {\n    '--divider-color': color ? getThemeColor(color, theme) : undefined,\n    '--divider-border-style': variant,\n    '--divider-size': getSize(size, 'divider-size'),\n  },\n}));\n\nexport const Divider = factory<DividerFactory>((_props, ref) => {\n  const props = useProps('Divider', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    color,\n    orientation,\n    label,\n    labelPosition,\n    mod,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<DividerFactory>({\n    name: 'Divider',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <Box\n      ref={ref}\n      mod={[{ orientation, 'with-label': !!label }, mod]}\n      {...getStyles('root')}\n      {...others}\n      role=\"separator\"\n    >\n      {label && (\n        <Box component=\"span\" mod={{ position: labelPosition }} {...getStyles('label')}>\n          {label}\n        </Box>\n      )}\n    </Box>\n  );\n});\n\nDivider.classes = classes;\nDivider.displayName = '@mantine/core/Divider';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 6755, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6760, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Drawer/Drawer.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Drawer = registerClientReference(\n    function() { throw new Error(\"Attempted to call Drawer() from the server but Drawer is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Drawer/Drawer.mjs\",\n    \"Drawer\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,SAAS,2RAClB;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,yEACA"}},
    {"offset": {"line": 6769, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6774, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Drawer/Drawer.tsx"],"sourcesContent":["import React from 'react';\nimport { factory, Factory, getDefaultZIndex, useProps } from '../../core';\nimport { ModalBaseCloseButtonProps, ModalBaseOverlayProps } from '../ModalBase';\nimport { DrawerBody } from './DrawerBody';\nimport { DrawerCloseButton } from './DrawerCloseButton';\nimport { DrawerContent } from './DrawerContent';\nimport { DrawerHeader } from './DrawerHeader';\nimport { DrawerOverlay } from './DrawerOverlay';\nimport {\n  DrawerRoot,\n  DrawerRootCssVariables,\n  DrawerRootProps,\n  DrawerRootStylesNames,\n} from './DrawerRoot';\nimport { DrawerTitle } from './DrawerTitle';\nimport classes from './Drawer.module.css';\n\nexport type DrawerStylesNames = DrawerRootStylesNames;\nexport type DrawerCssVariables = DrawerRootCssVariables;\n\nexport interface DrawerProps extends DrawerRootProps {\n  /** Drawer title */\n  title?: React.ReactNode;\n\n  /** Determines whether the overlay should be rendered, `true` by default */\n  withOverlay?: boolean;\n\n  /** Props passed down to the `Overlay` component, can be used to configure opacity, `background-color`, styles and other properties */\n  overlayProps?: ModalBaseOverlayProps;\n\n  /** Drawer content */\n  children?: React.ReactNode;\n\n  /** Determines whether the close button should be rendered, `true` by default */\n  withCloseButton?: boolean;\n\n  /** Props passed down to the close button */\n  closeButtonProps?: ModalBaseCloseButtonProps;\n}\n\nexport type DrawerFactory = Factory<{\n  props: DrawerProps;\n  ref: HTMLDivElement;\n  stylesNames: DrawerStylesNames;\n  vars: DrawerCssVariables;\n  staticComponents: {\n    Root: typeof DrawerRoot;\n    Overlay: typeof DrawerOverlay;\n    Content: typeof DrawerContent;\n    Body: typeof DrawerBody;\n    Header: typeof DrawerHeader;\n    Title: typeof DrawerTitle;\n    CloseButton: typeof DrawerCloseButton;\n  };\n}>;\n\nconst defaultProps: Partial<DrawerProps> = {\n  closeOnClickOutside: true,\n  withinPortal: true,\n  lockScroll: true,\n  trapFocus: true,\n  returnFocus: true,\n  closeOnEscape: true,\n  keepMounted: false,\n  zIndex: getDefaultZIndex('modal'),\n  withOverlay: true,\n  withCloseButton: true,\n};\n\nexport const Drawer = factory<DrawerFactory>((_props, ref) => {\n  const {\n    title,\n    withOverlay,\n    overlayProps,\n    withCloseButton,\n    closeButtonProps,\n    children,\n    ...others\n  } = useProps('Drawer', defaultProps, _props);\n\n  const hasHeader = !!title || withCloseButton;\n\n  return (\n    <DrawerRoot ref={ref} {...others}>\n      {withOverlay && <DrawerOverlay {...overlayProps} />}\n      <DrawerContent>\n        {hasHeader && (\n          <DrawerHeader>\n            {title && <DrawerTitle>{title}</DrawerTitle>}\n            {withCloseButton && <DrawerCloseButton {...closeButtonProps} />}\n          </DrawerHeader>\n        )}\n\n        <DrawerBody>{children}</DrawerBody>\n      </DrawerContent>\n    </DrawerRoot>\n  );\n});\n\nDrawer.classes = classes;\nDrawer.displayName = '@mantine/core/Drawer';\nDrawer.Root = DrawerRoot;\nDrawer.Overlay = DrawerOverlay;\nDrawer.Content = DrawerContent;\nDrawer.Body = DrawerBody;\nDrawer.Header = DrawerHeader;\nDrawer.Title = DrawerTitle;\nDrawer.CloseButton = DrawerCloseButton;\n"],"names":[],"mappings":""}},
    {"offset": {"line": 6779, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6784, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Drawer/DrawerRoot.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const DrawerRoot = registerClientReference(\n    function() { throw new Error(\"Attempted to call DrawerRoot() from the server but DrawerRoot is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Drawer/DrawerRoot.mjs\",\n    \"DrawerRoot\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,aAAa,2RACtB;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,6EACA"}},
    {"offset": {"line": 6793, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6798, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Drawer/DrawerRoot.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  createVarsResolver,\n  factory,\n  Factory,\n  getDefaultZIndex,\n  getSize,\n  MantineRadius,\n  rem,\n  StylesApiProps,\n  useDirection,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { ModalBase, ModalBaseProps, ModalBaseStylesNames } from '../ModalBase';\nimport { MantineTransition } from '../Transition';\nimport { DrawerProvider, ScrollAreaComponent } from './Drawer.context';\nimport classes from './Drawer.module.css';\n\ntype DrawerPosition = 'bottom' | 'left' | 'right' | 'top';\n\nfunction getDrawerAlign(position: DrawerPosition | undefined) {\n  switch (position) {\n    case 'top':\n      return 'flex-start';\n    case 'bottom':\n      return 'flex-end';\n    default:\n      return undefined;\n  }\n}\n\nfunction getDrawerFlex(position: DrawerPosition | undefined) {\n  if (position === 'top' || position === 'bottom') {\n    return '0 0 calc(100% - var(--drawer-offset, 0rem) * 2)';\n  }\n\n  return undefined;\n}\n\nexport type DrawerRootStylesNames = ModalBaseStylesNames;\nexport type DrawerRootCssVariables = {\n  root:\n    | '--drawer-size'\n    | '--drawer-flex'\n    | '--drawer-height'\n    | '--drawer-align'\n    | '--drawer-justify'\n    | '--drawer-offset';\n};\n\nexport interface DrawerRootProps extends StylesApiProps<DrawerRootFactory>, ModalBaseProps {\n  /** Scroll area component, native `div` element by default */\n  scrollAreaComponent?: ScrollAreaComponent;\n\n  /** Side of the screen on which drawer will be opened, `'left'` by default */\n  position?: DrawerPosition;\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius`, numbers are converted to rem, `0` by default */\n  radius?: MantineRadius;\n\n  /** Drawer container offset from the viewport end, `0` by default */\n  offset?: number | string;\n}\n\nexport type DrawerRootFactory = Factory<{\n  props: DrawerRootProps;\n  ref: HTMLDivElement;\n  stylesNames: DrawerRootStylesNames;\n  vars: DrawerRootCssVariables;\n  compound: true;\n}>;\n\nconst transitions: Record<DrawerPosition, MantineTransition> = {\n  top: 'slide-down',\n  bottom: 'slide-up',\n  left: 'slide-right',\n  right: 'slide-left',\n};\n\nconst rtlTransitions: Record<DrawerPosition, MantineTransition> = {\n  top: 'slide-down',\n  bottom: 'slide-up',\n  right: 'slide-right',\n  left: 'slide-left',\n};\n\nconst defaultProps: Partial<DrawerRootProps> = {\n  closeOnClickOutside: true,\n  withinPortal: true,\n  lockScroll: true,\n  trapFocus: true,\n  returnFocus: true,\n  closeOnEscape: true,\n  keepMounted: false,\n  zIndex: getDefaultZIndex('modal'),\n  position: 'left',\n};\n\nconst varsResolver = createVarsResolver<DrawerRootFactory>((_, { position, size, offset }) => ({\n  root: {\n    '--drawer-size': getSize(size, 'drawer-size'),\n    '--drawer-flex': getDrawerFlex(position),\n    '--drawer-height':\n      position === 'left' || position === 'right' ? undefined : 'var(--drawer-size)',\n    '--drawer-align': getDrawerAlign(position),\n    '--drawer-justify': position === 'right' ? 'flex-end' : undefined,\n    '--drawer-offset': rem(offset),\n  },\n}));\n\nexport const DrawerRoot = factory<DrawerRootFactory>((_props, ref) => {\n  const props = useProps('DrawerRoot', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    scrollAreaComponent,\n    position,\n    transitionProps,\n    radius,\n    ...others\n  } = props;\n\n  const { dir } = useDirection();\n\n  const getStyles = useStyles<DrawerRootFactory>({\n    name: 'Drawer',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  const drawerTransition = (dir === 'rtl' ? rtlTransitions : transitions)[position!];\n\n  return (\n    <DrawerProvider value={{ scrollAreaComponent, getStyles, radius }}>\n      <ModalBase\n        ref={ref}\n        {...getStyles('root')}\n        transitionProps={{ transition: drawerTransition, ...transitionProps }}\n        unstyled={unstyled}\n        {...others}\n      />\n    </DrawerProvider>\n  );\n});\n\nDrawerRoot.classes = classes;\nDrawerRoot.displayName = '@mantine/core/DrawerRoot';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 6803, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6808, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Drawer/DrawerBody.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const DrawerBody = registerClientReference(\n    function() { throw new Error(\"Attempted to call DrawerBody() from the server but DrawerBody is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Drawer/DrawerBody.mjs\",\n    \"DrawerBody\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,aAAa,2RACtB;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,6EACA"}},
    {"offset": {"line": 6817, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6822, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Drawer/DrawerBody.tsx"],"sourcesContent":["import React from 'react';\nimport { CompoundStylesApiProps, factory, Factory, useProps } from '../../core';\nimport { ModalBaseBody, ModalBaseBodyProps } from '../ModalBase';\nimport { useDrawerContext } from './Drawer.context';\nimport classes from './Drawer.module.css';\n\nexport type DrawerBodyStylesNames = 'body';\n\nexport interface DrawerBodyProps\n  extends ModalBaseBodyProps,\n    CompoundStylesApiProps<DrawerBodyFactory> {}\n\nexport type DrawerBodyFactory = Factory<{\n  props: DrawerBodyProps;\n  ref: HTMLDivElement;\n  stylesNames: DrawerBodyStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<DrawerBodyProps> = {};\n\nexport const DrawerBody = factory<DrawerBodyFactory>((_props, ref) => {\n  const props = useProps('DrawerBody', defaultProps, _props);\n  const { classNames, className, style, styles, vars, ...others } = props;\n\n  const ctx = useDrawerContext();\n\n  return (\n    <ModalBaseBody\n      ref={ref}\n      {...ctx.getStyles('body', { classNames, style, styles, className })}\n      {...others}\n    />\n  );\n});\n\nDrawerBody.classes = classes;\nDrawerBody.displayName = '@mantine/core/DrawerBody';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 6827, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6832, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Drawer/DrawerCloseButton.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const DrawerCloseButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call DrawerCloseButton() from the server but DrawerCloseButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Drawer/DrawerCloseButton.mjs\",\n    \"DrawerCloseButton\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,oBAAoB,2RAC7B;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,oFACA"}},
    {"offset": {"line": 6841, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6846, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Drawer/DrawerCloseButton.tsx"],"sourcesContent":["import React from 'react';\nimport { CompoundStylesApiProps, factory, Factory, useProps } from '../../core';\nimport { ModalBaseCloseButton, ModalBaseCloseButtonProps } from '../ModalBase';\nimport { useDrawerContext } from './Drawer.context';\nimport classes from './Drawer.module.css';\n\nexport type DrawerCloseButtonStylesNames = 'close';\n\nexport interface DrawerCloseButtonProps\n  extends ModalBaseCloseButtonProps,\n    CompoundStylesApiProps<DrawerCloseButtonFactory> {}\n\nexport type DrawerCloseButtonFactory = Factory<{\n  props: DrawerCloseButtonProps;\n  ref: HTMLButtonElement;\n  stylesNames: DrawerCloseButtonStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<DrawerCloseButtonProps> = {};\n\nexport const DrawerCloseButton = factory<DrawerCloseButtonFactory>((_props, ref) => {\n  const props = useProps('DrawerCloseButton', defaultProps, _props);\n  const { classNames, className, style, styles, vars, ...others } = props;\n\n  const ctx = useDrawerContext();\n\n  return (\n    <ModalBaseCloseButton\n      ref={ref}\n      {...ctx.getStyles('close', { classNames, style, styles, className })}\n      {...others}\n    />\n  );\n});\n\nDrawerCloseButton.classes = classes;\nDrawerCloseButton.displayName = '@mantine/core/DrawerCloseButton';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 6851, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6856, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Drawer/DrawerContent.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const DrawerContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call DrawerContent() from the server but DrawerContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Drawer/DrawerContent.mjs\",\n    \"DrawerContent\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,gBAAgB,2RACzB;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,gFACA"}},
    {"offset": {"line": 6865, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6870, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Drawer/DrawerContent.tsx"],"sourcesContent":["import React from 'react';\nimport { CompoundStylesApiProps, factory, Factory, useProps } from '../../core';\nimport { ModalBaseContent, ModalBaseContentProps, NativeScrollArea } from '../ModalBase';\nimport { useDrawerContext } from './Drawer.context';\nimport classes from './Drawer.module.css';\n\nexport type DrawerContentStylesNames = 'content' | 'inner';\n\nexport interface DrawerContentProps\n  extends ModalBaseContentProps,\n    CompoundStylesApiProps<DrawerContentFactory> {}\n\nexport type DrawerContentFactory = Factory<{\n  props: DrawerContentProps;\n  ref: HTMLDivElement;\n  stylesNames: DrawerContentStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<DrawerContentProps> = {};\n\nexport const DrawerContent = factory<DrawerContentFactory>((_props, ref) => {\n  const props = useProps('DrawerContent', defaultProps, _props);\n  const { classNames, className, style, styles, vars, children, radius, ...others } = props;\n\n  const ctx = useDrawerContext();\n  const Scroll: React.FC<any> = ctx.scrollAreaComponent || NativeScrollArea;\n\n  return (\n    <ModalBaseContent\n      {...ctx.getStyles('content', { className, style, styles, classNames })}\n      innerProps={ctx.getStyles('inner', { className, style, styles, classNames })}\n      ref={ref}\n      {...others}\n      radius={radius || ctx.radius || 0}\n    >\n      <Scroll style={{ height: '100vh' }}>{children}</Scroll>\n    </ModalBaseContent>\n  );\n});\n\nDrawerContent.classes = classes;\nDrawerContent.displayName = '@mantine/core/DrawerContent';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 6875, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6880, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Drawer/DrawerHeader.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const DrawerHeader = registerClientReference(\n    function() { throw new Error(\"Attempted to call DrawerHeader() from the server but DrawerHeader is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Drawer/DrawerHeader.mjs\",\n    \"DrawerHeader\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,eAAe,2RACxB;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,+EACA"}},
    {"offset": {"line": 6889, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6894, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Drawer/DrawerHeader.tsx"],"sourcesContent":["import React from 'react';\nimport { CompoundStylesApiProps, factory, Factory, useProps } from '../../core';\nimport { ModalBaseHeader, ModalBaseHeaderProps } from '../ModalBase';\nimport { useDrawerContext } from './Drawer.context';\nimport classes from './Drawer.module.css';\n\nexport type DrawerHeaderStylesNames = 'header';\n\nexport interface DrawerHeaderProps\n  extends ModalBaseHeaderProps,\n    CompoundStylesApiProps<DrawerHeaderFactory> {}\n\nexport type DrawerHeaderFactory = Factory<{\n  props: DrawerHeaderProps;\n  ref: HTMLElement;\n  stylesNames: DrawerHeaderStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<DrawerHeaderProps> = {};\n\nexport const DrawerHeader = factory<DrawerHeaderFactory>((_props, ref) => {\n  const props = useProps('DrawerHeader', defaultProps, _props);\n  const { classNames, className, style, styles, vars, ...others } = props;\n\n  const ctx = useDrawerContext();\n\n  return (\n    <ModalBaseHeader\n      ref={ref}\n      {...ctx.getStyles('header', { classNames, style, styles, className })}\n      {...others}\n    />\n  );\n});\n\nDrawerHeader.classes = classes;\nDrawerHeader.displayName = '@mantine/core/DrawerHeader';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 6899, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6904, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Drawer/DrawerOverlay.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const DrawerOverlay = registerClientReference(\n    function() { throw new Error(\"Attempted to call DrawerOverlay() from the server but DrawerOverlay is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Drawer/DrawerOverlay.mjs\",\n    \"DrawerOverlay\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,gBAAgB,2RACzB;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,gFACA"}},
    {"offset": {"line": 6913, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6918, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Drawer/DrawerOverlay.tsx"],"sourcesContent":["import React from 'react';\nimport { CompoundStylesApiProps, factory, Factory, useProps } from '../../core';\nimport { ModalBaseOverlay, ModalBaseOverlayProps } from '../ModalBase';\nimport { useDrawerContext } from './Drawer.context';\nimport classes from './Drawer.module.css';\n\nexport type DrawerOverlayStylesNames = 'overlay';\n\nexport interface DrawerOverlayProps\n  extends ModalBaseOverlayProps,\n    CompoundStylesApiProps<DrawerOverlayFactory> {}\n\nexport type DrawerOverlayFactory = Factory<{\n  props: DrawerOverlayProps;\n  ref: HTMLDivElement;\n  stylesNames: DrawerOverlayStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<DrawerOverlayProps> = {};\n\nexport const DrawerOverlay = factory<DrawerOverlayFactory>((_props, ref) => {\n  const props = useProps('DrawerOverlay', defaultProps, _props);\n  const { classNames, className, style, styles, vars, ...others } = props;\n\n  const ctx = useDrawerContext();\n\n  return (\n    <ModalBaseOverlay\n      ref={ref}\n      {...ctx.getStyles('overlay', { classNames, style, styles, className })}\n      {...others}\n    />\n  );\n});\n\nDrawerOverlay.classes = classes;\nDrawerOverlay.displayName = '@mantine/core/DrawerOverlay';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 6923, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6928, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Drawer/DrawerTitle.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const DrawerTitle = registerClientReference(\n    function() { throw new Error(\"Attempted to call DrawerTitle() from the server but DrawerTitle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Drawer/DrawerTitle.mjs\",\n    \"DrawerTitle\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,cAAc,2RACvB;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,8EACA"}},
    {"offset": {"line": 6937, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6942, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Drawer/DrawerTitle.tsx"],"sourcesContent":["import React from 'react';\nimport { CompoundStylesApiProps, factory, Factory, useProps } from '../../core';\nimport { ModalBaseTitle, ModalBaseTitleProps } from '../ModalBase';\nimport { useDrawerContext } from './Drawer.context';\nimport classes from './Drawer.module.css';\n\nexport type DrawerTitleStylesNames = 'title';\n\nexport interface DrawerTitleProps\n  extends ModalBaseTitleProps,\n    CompoundStylesApiProps<DrawerTitleFactory> {}\n\nexport type DrawerTitleFactory = Factory<{\n  props: DrawerTitleProps;\n  ref: HTMLHeadingElement;\n  stylesNames: DrawerTitleStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<DrawerTitleProps> = {};\n\nexport const DrawerTitle = factory<DrawerTitleFactory>((_props, ref) => {\n  const props = useProps('DrawerTitle', defaultProps, _props);\n  const { classNames, className, style, styles, vars, ...others } = props;\n\n  const ctx = useDrawerContext();\n\n  return (\n    <ModalBaseTitle\n      ref={ref}\n      {...ctx.getStyles('title', { classNames, style, styles, className })}\n      {...others}\n    />\n  );\n});\n\nDrawerTitle.classes = classes;\nDrawerTitle.displayName = '@mantine/core/DrawerTitle';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 6947, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6952, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Fieldset/Fieldset.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Fieldset = registerClientReference(\n    function() { throw new Error(\"Attempted to call Fieldset() from the server but Fieldset is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Fieldset/Fieldset.mjs\",\n    \"Fieldset\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,WAAW,2RACpB;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,6EACA"}},
    {"offset": {"line": 6961, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6966, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Fieldset/Fieldset.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getRadius,\n  MantineRadius,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport classes from './Fieldset.module.css';\n\nexport type FieldsetStylesNames = 'root' | 'legend';\nexport type FieldsetVariant = 'default' | 'filled' | 'unstyled';\nexport type FieldsetCSSVariables = {\n  root: '--fieldset-radius';\n};\n\nexport interface FieldsetProps\n  extends BoxProps,\n    StylesApiProps<FieldsetFactory>,\n    ElementProps<'fieldset'> {\n  /** Fieldset legend */\n  legend?: React.ReactNode;\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius`, `theme.defaultRadius` by default */\n  radius?: MantineRadius;\n}\n\nexport type FieldsetFactory = Factory<{\n  props: FieldsetProps;\n  ref: HTMLFieldSetElement;\n  stylesNames: FieldsetStylesNames;\n  vars: FieldsetCSSVariables;\n  variant: FieldsetVariant;\n}>;\n\nconst defaultProps: Partial<FieldsetProps> = {\n  variant: 'default',\n};\n\nconst varsResolver = createVarsResolver<FieldsetFactory>((_, { radius }) => ({\n  root: {\n    '--fieldset-radius': radius === undefined ? undefined : getRadius(radius),\n  },\n}));\n\nexport const Fieldset = factory<FieldsetFactory>((_props, ref) => {\n  const props = useProps('Fieldset', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    legend,\n    variant,\n    children,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<FieldsetFactory>({\n    name: 'Fieldset',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <Box\n      component=\"fieldset\"\n      ref={ref}\n      variant={variant}\n      {...getStyles('root', { variant })}\n      {...others}\n    >\n      {legend && <legend {...getStyles('legend', { variant })}>{legend}</legend>}\n      {children}\n    </Box>\n  );\n});\n\nFieldset.classes = classes;\nFieldset.displayName = '@mantine/core/Fieldset';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 6971, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6976, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/FileButton/FileButton.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const FileButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call FileButton() from the server but FileButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/FileButton/FileButton.mjs\",\n    \"FileButton\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,aAAa,2RACtB;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,iFACA"}},
    {"offset": {"line": 6985, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6990, "column": 0}, "map": {"version":3,"sources":["../../../src/components/FileButton/FileButton.tsx"],"sourcesContent":["import React, { forwardRef, useRef } from 'react';\nimport { assignRef, useMergedRef } from '@mantine/hooks';\nimport { useProps } from '../../core';\n\nexport interface FileButtonProps<Multiple extends boolean = false> {\n  /** Called when files are picked */\n  onChange: (payload: Multiple extends true ? File[] : File | null) => void;\n\n  /** Function that receives button props and returns react node that should be rendered */\n  children: (props: { onClick: () => void }) => React.ReactNode;\n\n  /** Determines whether user can pick more than one file */\n  multiple?: Multiple;\n\n  /** File input accept attribute, for example, `\"image/png,image/jpeg\"` */\n  accept?: string;\n\n  /** Input name attribute */\n  name?: string;\n\n  /** Input form attribute */\n  form?: string;\n\n  /** Reference of the function that should be called when value changes to null or empty array */\n  resetRef?: React.ForwardedRef<() => void>;\n\n  /** Disables file picker */\n  disabled?: boolean;\n\n  /** Specifies that, optionally, a new file should be captured, and which device should be used to capture that new media of a type defined by the accept attribute. */\n  capture?: boolean | 'user' | 'environment';\n\n  /** Passes down props to the input element used to capture files */\n  inputProps?: React.ComponentPropsWithoutRef<'input'>;\n}\n\nconst defaultProps: Partial<FileButtonProps> = {\n  multiple: false,\n};\n\ntype FileButtonComponent = (<Multiple extends boolean = false>(\n  props: FileButtonProps<Multiple>\n) => React.ReactElement) & { displayName?: string };\n\nexport const FileButton: FileButtonComponent = forwardRef<HTMLInputElement, FileButtonProps>(\n  (props, ref) => {\n    const {\n      onChange,\n      children,\n      multiple,\n      accept,\n      name,\n      form,\n      resetRef,\n      disabled,\n      capture,\n      inputProps,\n      ...others\n    } = useProps('FileButton', defaultProps, props);\n\n    const inputRef = useRef<HTMLInputElement>();\n\n    const onClick = () => {\n      !disabled && inputRef.current?.click();\n    };\n\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      if (multiple) {\n        onChange(Array.from(event.currentTarget!.files!) as any);\n      } else {\n        onChange(event.currentTarget!.files![0] || null);\n      }\n    };\n\n    const reset = () => {\n      inputRef.current!.value = '';\n    };\n\n    assignRef(resetRef!, reset);\n\n    return (\n      <>\n        {children({ onClick, ...others })}\n\n        <input\n          style={{ display: 'none' }}\n          type=\"file\"\n          accept={accept}\n          multiple={multiple}\n          onChange={handleChange}\n          ref={useMergedRef(ref, inputRef)}\n          name={name}\n          form={form}\n          capture={capture}\n          {...inputProps}\n        />\n      </>\n    );\n  }\n) as any;\n\nFileButton.displayName = '@mantine/core/FileButton';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 6995, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7000, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/FileInput/FileInput.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const FileInput = registerClientReference(\n    function() { throw new Error(\"Attempted to call FileInput() from the server but FileInput is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/FileInput/FileInput.mjs\",\n    \"FileInput\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,YAAY,2RACrB;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,+EACA"}},
    {"offset": {"line": 7009, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7014, "column": 0}, "map": {"version":3,"sources":["../../../src/components/FileInput/FileInput.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { useUncontrolled } from '@mantine/hooks';\nimport { BoxProps, ElementProps, factory, Factory, StylesApiProps, useProps } from '../../core';\nimport { CloseButton } from '../CloseButton';\nimport { FileButton } from '../FileButton';\nimport { __BaseInputProps, __InputStylesNames, Input, InputVariant } from '../Input';\nimport { InputBase } from '../InputBase/InputBase';\n\nexport interface FileInputProps<Multiple = false>\n  extends BoxProps,\n    __BaseInputProps,\n    StylesApiProps<FileInputFactory>,\n    ElementProps<'button', 'value' | 'defaultValue' | 'onChange' | 'placeholder'> {\n  /** Called when value changes */\n  onChange?: (payload: Multiple extends true ? File[] : File | null) => void;\n\n  /** Controlled component value */\n  value?: Multiple extends true ? File[] : File | null;\n\n  /** Uncontrolled component default value */\n  defaultValue?: Multiple extends true ? File[] : File | null;\n\n  /** Determines whether user can pick more than one file, `false` by default */\n  multiple?: Multiple;\n\n  /** File input accept attribute, for example, `\"image/png,image/jpeg\"` */\n  accept?: string;\n\n  /** Input name attribute */\n  name?: string;\n\n  /** Input form attribute */\n  form?: string;\n\n  /** Value renderer. By default, file name is displayed. */\n  valueComponent?: React.FC<{ value: null | File | File[] }>;\n\n  /** Determines whether clear button should be displayed in the right section, `false` by default */\n  clearable?: boolean;\n\n  /** Props passed down to the clear button */\n  clearButtonProps?: React.ComponentPropsWithoutRef<'button'>;\n\n  /** If set, the input value cannot be changed  */\n  readOnly?: boolean;\n\n  /** Specifies that, optionally, a new file should be captured, and which device should be used to capture that new media of a type defined by the accept attribute. */\n  capture?: boolean | 'user' | 'environment';\n\n  /** Props passed down to the hidden input element which is used to capture files */\n  fileInputProps?: React.ComponentPropsWithoutRef<'input'>;\n\n  /** Input placeholder */\n  placeholder?: React.ReactNode;\n}\n\nexport type FileInputFactory = Factory<{\n  props: FileInputProps;\n  ref: HTMLButtonElement;\n  stylesNames: __InputStylesNames;\n  variant: InputVariant;\n}>;\n\nconst DefaultValue: FileInputProps['valueComponent'] = ({ value }) => (\n  <div style={{ overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap' }}>\n    {Array.isArray(value) ? value.map((file) => file.name).join(', ') : value?.name}\n  </div>\n);\n\nconst defaultProps: Partial<FileInputProps> = {\n  valueComponent: DefaultValue,\n};\n\nconst _FileInput = factory<FileInputFactory>((_props, ref) => {\n  const props = useProps('FileInput', defaultProps, _props);\n  const {\n    unstyled,\n    vars,\n    onChange,\n    value,\n    defaultValue,\n    multiple,\n    accept,\n    name,\n    form,\n    valueComponent,\n    clearable,\n    clearButtonProps,\n    readOnly,\n    capture,\n    fileInputProps,\n    rightSection,\n    size,\n    placeholder,\n    ...others\n  } = props;\n\n  const resetRef = useRef<() => void>(null);\n\n  const [_value, setValue] = useUncontrolled<null | File | File[]>({\n    value,\n    defaultValue,\n    onChange: onChange as any,\n    finalValue: multiple ? [] : null,\n  });\n\n  const hasValue = Array.isArray(_value) ? _value.length !== 0 : _value !== null;\n\n  const _rightSection =\n    rightSection ||\n    (clearable && hasValue && !readOnly ? (\n      <CloseButton\n        {...clearButtonProps}\n        variant=\"subtle\"\n        onClick={() => setValue(multiple ? [] : null)}\n        size={size}\n        unstyled={unstyled}\n      />\n    ) : null);\n\n  useEffect(() => {\n    if ((Array.isArray(_value) && _value.length === 0) || _value === null) {\n      resetRef.current?.();\n    }\n  }, [_value]);\n\n  const ValueComponent = valueComponent!;\n\n  return (\n    <FileButton\n      onChange={setValue}\n      multiple={multiple}\n      accept={accept}\n      name={name}\n      form={form}\n      resetRef={resetRef}\n      disabled={readOnly}\n      capture={capture}\n      inputProps={fileInputProps}\n    >\n      {(fileButtonProps) => (\n        <InputBase\n          component=\"button\"\n          ref={ref}\n          rightSection={_rightSection}\n          {...fileButtonProps}\n          {...others}\n          __staticSelector=\"FileInput\"\n          multiline\n          type=\"button\"\n          pointer\n          __stylesApiProps={props}\n          unstyled={unstyled}\n          size={size}\n        >\n          {!hasValue ? (\n            <Input.Placeholder>{placeholder}</Input.Placeholder>\n          ) : (\n            <ValueComponent value={_value} />\n          )}\n        </InputBase>\n      )}\n    </FileButton>\n  );\n});\n\n_FileInput.classes = InputBase.classes;\n_FileInput.displayName = '@mantine/core/FileInput';\n\ntype FileInputComponent = (<Multiple extends boolean = false>(\n  props: FileInputProps<Multiple> & {\n    ref?: React.ForwardedRef<HTMLButtonElement>;\n  }\n) => JSX.Element) & { extend: typeof _FileInput.extend };\n\nexport const FileInput: FileInputComponent = _FileInput as any;\n"],"names":[],"mappings":""}},
    {"offset": {"line": 7019, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7024, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Floating/use-delayed-hover.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const useDelayedHover = registerClientReference(\n    function() { throw new Error(\"Attempted to call useDelayedHover() from the server but useDelayedHover is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Floating/use-delayed-hover.mjs\",\n    \"useDelayedHover\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,kBAAkB,2RAC3B;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,sFACA"}},
    {"offset": {"line": 7033, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7038, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Floating/use-delayed-hover.ts"],"sourcesContent":["import { useEffect, useRef } from 'react';\n\ninterface UseDelayedHoverInput {\n  open: () => void;\n  close: () => void;\n  openDelay: number | undefined;\n  closeDelay: number | undefined;\n}\n\nexport function useDelayedHover({ open, close, openDelay, closeDelay }: UseDelayedHoverInput) {\n  const openTimeout = useRef(-1);\n  const closeTimeout = useRef(-1);\n\n  const clearTimeouts = () => {\n    window.clearTimeout(openTimeout.current);\n    window.clearTimeout(closeTimeout.current);\n  };\n\n  const openDropdown = () => {\n    clearTimeouts();\n\n    if (openDelay === 0 || openDelay === undefined) {\n      open();\n    } else {\n      openTimeout.current = window.setTimeout(open, openDelay);\n    }\n  };\n\n  const closeDropdown = () => {\n    clearTimeouts();\n\n    if (closeDelay === 0 || closeDelay === undefined) {\n      close();\n    } else {\n      closeTimeout.current = window.setTimeout(close, closeDelay);\n    }\n  };\n\n  useEffect(() => clearTimeouts, []);\n\n  return { openDropdown, closeDropdown };\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 7043, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7048, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Floating/use-floating-auto-update.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const useFloatingAutoUpdate = registerClientReference(\n    function() { throw new Error(\"Attempted to call useFloatingAutoUpdate() from the server but useFloatingAutoUpdate is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Floating/use-floating-auto-update.mjs\",\n    \"useFloatingAutoUpdate\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,wBAAwB,2RACjC;IAAa,MAAM,IAAI,MAAM;AAA0P,GACvR,6FACA"}},
    {"offset": {"line": 7057, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7062, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Floating/use-floating-auto-update.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { autoUpdate } from '@floating-ui/react';\nimport { useDidUpdate } from '@mantine/hooks';\nimport { FloatingPosition } from './types';\n\ninterface Payload {\n  opened: boolean | undefined;\n  floating: {\n    update: () => void;\n    refs: {\n      floating: React.MutableRefObject<any>;\n      reference: React.MutableRefObject<any>;\n    };\n  };\n  positionDependencies: any[];\n  position: FloatingPosition;\n}\n\nexport function useFloatingAutoUpdate({\n  opened,\n  floating,\n  position,\n  positionDependencies,\n}: Payload) {\n  const [delayedUpdate, setDelayedUpdate] = useState(0);\n\n  useEffect(() => {\n    if (floating.refs.reference.current && floating.refs.floating.current) {\n      return autoUpdate(\n        floating.refs.reference.current,\n        floating.refs.floating.current,\n        floating.update\n      );\n    }\n\n    return undefined;\n  }, [\n    floating.refs.reference.current,\n    floating.refs.floating.current,\n    opened,\n    delayedUpdate,\n    position,\n  ]);\n\n  useDidUpdate(() => {\n    floating.update();\n  }, positionDependencies);\n\n  useDidUpdate(() => {\n    setDelayedUpdate((c) => c + 1);\n  }, [opened]);\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 7067, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7072, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Floating/get-floating-position/get-floating-position.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const getFloatingPosition = registerClientReference(\n    function() { throw new Error(\"Attempted to call getFloatingPosition() from the server but getFloatingPosition is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Floating/get-floating-position/get-floating-position.mjs\",\n    \"getFloatingPosition\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,sBAAsB,2RAC/B;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,gHACA"}},
    {"offset": {"line": 7081, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7086, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Floating/get-floating-position/get-floating-position.ts"],"sourcesContent":["import type { FloatingPlacement, FloatingPosition, FloatingSide } from '../types';\n\nexport function getFloatingPosition(\n  dir: 'rtl' | 'ltr',\n  position: FloatingPosition\n): FloatingPosition {\n  if (dir === 'rtl' && (position.includes('right') || position.includes('left'))) {\n    const [side, placement] = position.split('-') as [FloatingSide, FloatingPlacement];\n    const flippedPosition = side === 'right' ? 'left' : 'right';\n    return placement === undefined ? flippedPosition : `${flippedPosition}-${placement}`;\n  }\n\n  return position;\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 7091, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7096, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Floating/FloatingArrow/FloatingArrow.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const FloatingArrow = registerClientReference(\n    function() { throw new Error(\"Attempted to call FloatingArrow() from the server but FloatingArrow is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Floating/FloatingArrow/FloatingArrow.mjs\",\n    \"FloatingArrow\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,gBAAgB,2RACzB;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,gGACA"}},
    {"offset": {"line": 7105, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7110, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Floating/FloatingArrow/FloatingArrow.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport { useDirection } from '../../../core';\nimport { ArrowPosition, FloatingPosition } from '../types';\nimport { getArrowPositionStyles } from './get-arrow-position-styles';\n\ninterface FloatingArrowProps extends React.ComponentPropsWithoutRef<'div'> {\n  position: FloatingPosition;\n  arrowSize: number;\n  arrowOffset: number;\n  arrowRadius: number;\n  arrowPosition: ArrowPosition;\n  arrowX: number | undefined;\n  arrowY: number | undefined;\n  visible: boolean | undefined;\n}\n\nexport const FloatingArrow = forwardRef<HTMLDivElement, FloatingArrowProps>(\n  (\n    {\n      position,\n      arrowSize,\n      arrowOffset,\n      arrowRadius,\n      arrowPosition,\n      visible,\n      arrowX,\n      arrowY,\n      style,\n      ...others\n    },\n    ref\n  ) => {\n    const { dir } = useDirection();\n    if (!visible) {\n      return null;\n    }\n\n    return (\n      <div\n        {...others}\n        ref={ref}\n        style={{\n          ...style,\n          ...getArrowPositionStyles({\n            position,\n            arrowSize,\n            arrowOffset,\n            arrowRadius,\n            arrowPosition,\n            dir,\n            arrowX,\n            arrowY,\n          }),\n        }}\n      />\n    );\n  }\n);\n\nFloatingArrow.displayName = '@mantine/core/FloatingArrow';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 7115, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7120, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/FocusTrap/FocusTrap.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const FocusTrap = registerClientReference(\n    function() { throw new Error(\"Attempted to call FocusTrap() from the server but FocusTrap is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/FocusTrap/FocusTrap.mjs\",\n    \"FocusTrap\",\n);\nexport const FocusTrapInitialFocus = registerClientReference(\n    function() { throw new Error(\"Attempted to call FocusTrapInitialFocus() from the server but FocusTrapInitialFocus is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/FocusTrap/FocusTrap.mjs\",\n    \"FocusTrapInitialFocus\",\n);\n"],"names":[],"mappings":";;;;;;;AACO,MAAM,YAAY,2RACrB;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,+EACA;AAEG,MAAM,wBAAwB,2RACjC;IAAa,MAAM,IAAI,MAAM;AAA0P,GACvR,+EACA"}},
    {"offset": {"line": 7133, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7138, "column": 0}, "map": {"version":3,"sources":["../../../src/components/FocusTrap/FocusTrap.tsx"],"sourcesContent":["import React, { cloneElement } from 'react';\nimport { useFocusTrap, useMergedRef } from '@mantine/hooks';\nimport { isElement } from '../../core';\nimport { VisuallyHidden } from '../VisuallyHidden';\n\nexport interface FocusTrapProps {\n  /** Element at which focus should be trapped, should support ref prop */\n  children: any;\n\n  /** Determines whether focus should be trapped within child element */\n  active?: boolean;\n\n  /** Prop that should be used to access component ref */\n  refProp?: string;\n}\n\nexport function FocusTrap({\n  children,\n  active = true,\n  refProp = 'ref',\n}: FocusTrapProps): React.ReactElement {\n  const focusTrapRef = useFocusTrap(active);\n  const ref = useMergedRef(focusTrapRef, children?.ref);\n\n  if (!isElement(children)) {\n    return children;\n  }\n\n  return cloneElement(children, { [refProp]: ref });\n}\n\nexport function FocusTrapInitialFocus(props: React.ComponentPropsWithoutRef<'span'>) {\n  return <VisuallyHidden tabIndex={-1} data-autofocus {...props} />;\n}\n\nFocusTrap.displayName = '@mantine/core/FocusTrap';\nFocusTrapInitialFocus.displayName = '@mantine/core/FocusTrapInitialFocus';\nFocusTrap.InitialFocus = FocusTrapInitialFocus;\n"],"names":[],"mappings":""}},
    {"offset": {"line": 7143, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7148, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Grid/Grid.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Grid = registerClientReference(\n    function() { throw new Error(\"Attempted to call Grid() from the server but Grid is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Grid/Grid.mjs\",\n    \"Grid\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,OAAO,2RAChB;IAAa,MAAM,IAAI,MAAM;AAAwN,GACrP,qEACA"}},
    {"offset": {"line": 7157, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7162, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Grid/Grid.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  MantineSpacing,\n  StyleProp,\n  StylesApiProps,\n  useProps,\n  useRandomClassName,\n  useStyles,\n} from '../../core';\nimport { GridProvider } from './Grid.context';\nimport { GridCol } from './GridCol/GridCol';\nimport { GridVariables } from './GridVariables';\nimport classes from './Grid.module.css';\n\nexport type GridStylesNames = 'root' | 'col' | 'inner';\nexport type GridCssVariables = {\n  root: '--grid-justify' | '--grid-align' | '--grid-overflow';\n};\n\nexport interface GridProps extends BoxProps, StylesApiProps<GridFactory>, ElementProps<'div'> {\n  /** Gutter between columns, key of `theme.spacing` or any valid CSS value, `'md'` by default */\n  gutter?: StyleProp<MantineSpacing>;\n\n  /** Determines whether columns in the last row should expand to fill all available space, `false` by default */\n  grow?: boolean;\n\n  /** Sets `justify-content`, `flex-start` by default */\n  justify?: React.CSSProperties['justifyContent'];\n\n  /** Sets `align-items`, `stretch` by default */\n  align?: React.CSSProperties['alignItems'];\n\n  /** Number of columns in each row, `12` by default */\n  columns?: number;\n\n  /** Sets `overflow` CSS property on the root element, `'visible'` by default */\n  overflow?: React.CSSProperties['overflow'];\n}\n\nexport type GridFactory = Factory<{\n  props: GridProps;\n  ref: HTMLDivElement;\n  stylesNames: GridStylesNames;\n  vars: GridCssVariables;\n  staticComponents: {\n    Col: typeof GridCol;\n  };\n}>;\n\nconst defaultProps: Partial<GridProps> = {\n  gutter: 'md',\n  grow: false,\n  columns: 12,\n};\n\nconst varsResolver = createVarsResolver<GridFactory>((_, { justify, align, overflow }) => ({\n  root: {\n    '--grid-justify': justify,\n    '--grid-align': align,\n    '--grid-overflow': overflow,\n  },\n}));\n\nexport const Grid = factory<GridFactory>((_props, ref) => {\n  const props = useProps('Grid', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    grow,\n    gutter,\n    columns,\n    align,\n    justify,\n    children,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<GridFactory>({\n    name: 'Grid',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  const responsiveClassName = useRandomClassName();\n\n  return (\n    <GridProvider value={{ getStyles, grow, columns: columns! }}>\n      <GridVariables selector={`.${responsiveClassName}`} {...props} />\n      <Box ref={ref} {...getStyles('root', { className: responsiveClassName })} {...others}>\n        <div {...getStyles('inner')}>{children}</div>\n      </Box>\n    </GridProvider>\n  );\n});\n\nGrid.classes = classes;\nGrid.displayName = '@mantine/core/Grid';\nGrid.Col = GridCol;\n"],"names":[],"mappings":""}},
    {"offset": {"line": 7167, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7172, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Grid/GridCol/GridCol.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const GridCol = registerClientReference(\n    function() { throw new Error(\"Attempted to call GridCol() from the server but GridCol is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Grid/GridCol/GridCol.mjs\",\n    \"GridCol\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,UAAU,2RACnB;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,gFACA"}},
    {"offset": {"line": 7181, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7186, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Grid/GridCol/GridCol.tsx"],"sourcesContent":["import React from 'react';\nimport cx from 'clsx';\nimport {\n  Box,\n  BoxProps,\n  CompoundStylesApiProps,\n  ElementProps,\n  factory,\n  Factory,\n  StyleProp,\n  useProps,\n  useRandomClassName,\n} from '../../../core';\nimport { useGridContext } from '../Grid.context';\nimport { GridColVariables } from './GridColVariables';\nimport classes from '../Grid.module.css';\n\nexport type GridColStylesNames = 'col';\nexport type ColSpan = number | 'auto' | 'content';\n\nexport interface GridColProps\n  extends BoxProps,\n    CompoundStylesApiProps<GridColFactory>,\n    ElementProps<'div'> {\n  /** Column span, `12` by default */\n  span?: StyleProp<ColSpan>;\n\n  /** Column order, can be used to reorder columns at different viewport sizes */\n  order?: StyleProp<number>;\n\n  /** Column offset on the left side – number of columns that should be left empty before this column */\n  offset?: StyleProp<number>;\n}\n\nexport type GridColFactory = Factory<{\n  props: GridColProps;\n  ref: HTMLDivElement;\n  stylesNames: GridColStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<GridColProps> = {\n  span: 12,\n};\n\nexport const GridCol = factory<GridColFactory>((_props, ref) => {\n  const props = useProps('GridCol', defaultProps, _props);\n  const { classNames, className, style, styles, vars, span, order, offset, ...others } = props;\n  const ctx = useGridContext();\n  const responsiveClassName = useRandomClassName();\n  return (\n    <>\n      <GridColVariables\n        selector={`.${responsiveClassName}`}\n        span={span}\n        order={order}\n        offset={offset}\n      />\n\n      <Box\n        ref={ref}\n        {...ctx.getStyles('col', {\n          className: cx(className, responsiveClassName),\n          style,\n          classNames,\n          styles,\n        })}\n        {...others}\n      />\n    </>\n  );\n});\n\nGridCol.classes = classes;\nGridCol.displayName = '@mantine/core/GridCol';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 7191, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7196, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Highlight/Highlight.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Highlight = registerClientReference(\n    function() { throw new Error(\"Attempted to call Highlight() from the server but Highlight is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Highlight/Highlight.mjs\",\n    \"Highlight\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,YAAY,2RACrB;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,+EACA"}},
    {"offset": {"line": 7205, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7210, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Highlight/Highlight.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  MantineColor,\n  MantineTheme,\n  polymorphicFactory,\n  PolymorphicFactory,\n  useProps,\n} from '../../core';\nimport { Mark } from '../Mark';\nimport { Text, TextProps, TextStylesNames, TextVariant } from '../Text';\nimport { highlighter } from './highlighter/highlighter';\n\nexport interface HighlightProps extends Omit<TextProps, 'color'> {\n  /** Substring or an array of substrings to highlight in `children` */\n  highlight: string | string[];\n\n  /** Key of `theme.colors` or any valid CSS color, passed to `Mark` component `color` prop, `yellow` by default */\n  color?: MantineColor | string;\n\n  /** Styles applied to `mark` elements */\n  highlightStyles?: React.CSSProperties | ((theme: MantineTheme) => React.CSSProperties);\n\n  /** String parts of which must be highlighted */\n  children: string;\n}\n\nexport type HighlightFactory = PolymorphicFactory<{\n  props: HighlightProps;\n  defaultRef: HTMLDivElement;\n  defaultComponent: 'div';\n  stylesNames: TextStylesNames;\n  variant: TextVariant;\n}>;\n\nconst defaultProps: Partial<HighlightProps> = {};\n\nexport const Highlight = polymorphicFactory<HighlightFactory>((props, ref) => {\n  const { unstyled, children, highlight, highlightStyles, color, ...others } = useProps(\n    'Highlight',\n    defaultProps,\n    props\n  );\n\n  const highlightChunks = highlighter(children, highlight);\n\n  return (\n    <Text unstyled={unstyled} ref={ref} {...others} __staticSelector=\"Highlight\">\n      {highlightChunks.map(({ chunk, highlighted }, i) =>\n        highlighted ? (\n          <Mark\n            unstyled={unstyled}\n            key={i}\n            color={color}\n            style={highlightStyles}\n            data-highlight={chunk}\n          >\n            {chunk}\n          </Mark>\n        ) : (\n          <span key={i}>{chunk}</span>\n        )\n      )}\n    </Text>\n  );\n});\n\nHighlight.classes = Text.classes;\nHighlight.displayName = '@mantine/core/Highlight';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 7215, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7220, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/HoverCard/HoverCard.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const HoverCard = registerClientReference(\n    function() { throw new Error(\"Attempted to call HoverCard() from the server but HoverCard is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/HoverCard/HoverCard.mjs\",\n    \"HoverCard\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,YAAY,2RACrB;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,+EACA"}},
    {"offset": {"line": 7229, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7234, "column": 0}, "map": {"version":3,"sources":["../../../src/components/HoverCard/HoverCard.tsx"],"sourcesContent":["import React from 'react';\nimport { useDisclosure } from '@mantine/hooks';\nimport { ExtendComponent, Factory, useProps } from '../../core';\nimport { useDelayedHover } from '../Floating';\nimport { Popover, PopoverProps, PopoverStylesNames } from '../Popover';\nimport { PopoverCssVariables } from '../Popover/Popover';\nimport { HoverCardContextProvider } from './HoverCard.context';\nimport { HoverCardDropdown } from './HoverCardDropdown/HoverCardDropdown';\nimport { HoverCardTarget } from './HoverCardTarget/HoverCardTarget';\n\nexport interface HoverCardProps extends Omit<PopoverProps, 'opened' | 'onChange'> {\n  variant?: string;\n\n  /** Initial opened state */\n  initiallyOpened?: boolean;\n\n  /** Called when dropdown is opened */\n  onOpen?: () => void;\n\n  /** Called when dropdown is closed */\n  onClose?: () => void;\n\n  /** Open delay in ms */\n  openDelay?: number;\n\n  /** Close delay in ms */\n  closeDelay?: number;\n}\n\nexport type HoverCardFactory = Factory<{\n  props: HoverCardProps;\n  stylesNames: PopoverStylesNames;\n  vars: PopoverCssVariables;\n}>;\n\nconst defaultProps: Partial<HoverCardProps> = {\n  openDelay: 0,\n  closeDelay: 150,\n  initiallyOpened: false,\n};\n\nexport function HoverCard(props: HoverCardProps) {\n  const { children, onOpen, onClose, openDelay, closeDelay, initiallyOpened, ...others } = useProps(\n    'HoverCard',\n    defaultProps,\n    props\n  );\n  const [opened, { open, close }] = useDisclosure(initiallyOpened, { onClose, onOpen });\n  const { openDropdown, closeDropdown } = useDelayedHover({ open, close, openDelay, closeDelay });\n\n  return (\n    <HoverCardContextProvider value={{ openDropdown, closeDropdown }}>\n      <Popover {...others} opened={opened} __staticSelector=\"HoverCard\">\n        {children}\n      </Popover>\n    </HoverCardContextProvider>\n  );\n}\n\nHoverCard.displayName = '@mantine/core/HoverCard';\nHoverCard.Target = HoverCardTarget;\nHoverCard.Dropdown = HoverCardDropdown;\nHoverCard.extend = (input: ExtendComponent<HoverCardFactory>) => input;\n"],"names":[],"mappings":""}},
    {"offset": {"line": 7239, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7244, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/HoverCard/HoverCardDropdown/HoverCardDropdown.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const HoverCardDropdown = registerClientReference(\n    function() { throw new Error(\"Attempted to call HoverCardDropdown() from the server but HoverCardDropdown is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/HoverCard/HoverCardDropdown/HoverCardDropdown.mjs\",\n    \"HoverCardDropdown\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,oBAAoB,2RAC7B;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,yGACA"}},
    {"offset": {"line": 7253, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7258, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/HoverCard/HoverCardDropdown/HoverCardDropdown.tsx"],"sourcesContent":["import React from 'react';\nimport { createEventHandler, useProps } from '../../../core';\nimport { Popover, PopoverDropdownProps } from '../../Popover';\nimport { useHoverCardContext } from '../HoverCard.context';\n\nexport interface HoverCardDropdownProps extends PopoverDropdownProps {\n  /** Dropdown content */\n  children?: React.ReactNode;\n}\n\nconst defaultProps: Partial<HoverCardDropdownProps> = {};\n\nexport function HoverCardDropdown(props: HoverCardDropdownProps) {\n  const { children, onMouseEnter, onMouseLeave, ...others } = useProps(\n    'HoverCardDropdown',\n    defaultProps,\n    props\n  );\n\n  const ctx = useHoverCardContext();\n\n  const handleMouseEnter = createEventHandler<any>(onMouseEnter, ctx.openDropdown);\n  const handleMouseLeave = createEventHandler<any>(onMouseLeave!, ctx.closeDropdown);\n\n  return (\n    <Popover.Dropdown onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave} {...others}>\n      {children}\n    </Popover.Dropdown>\n  );\n}\n\nHoverCardDropdown.displayName = '@mantine/core/HoverCardDropdown';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 7263, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7268, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/HoverCard/HoverCardTarget/HoverCardTarget.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const HoverCardTarget = registerClientReference(\n    function() { throw new Error(\"Attempted to call HoverCardTarget() from the server but HoverCardTarget is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/HoverCard/HoverCardTarget/HoverCardTarget.mjs\",\n    \"HoverCardTarget\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,kBAAkB,2RAC3B;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,qGACA"}},
    {"offset": {"line": 7277, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7282, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/HoverCard/HoverCardTarget/HoverCardTarget.tsx"],"sourcesContent":["import React, { cloneElement, forwardRef } from 'react';\nimport { createEventHandler, isElement, useProps } from '../../../core';\nimport { Popover, PopoverTargetProps } from '../../Popover';\nimport { useHoverCardContext } from '../HoverCard.context';\n\nexport interface HoverCardTargetProps extends PopoverTargetProps {\n  /** Key of the prop that is used to pass event listeners, by default event listeners are passed directly to component */\n  eventPropsWrapperName?: string;\n}\n\nconst defaultProps: Partial<HoverCardTargetProps> = {\n  refProp: 'ref',\n};\n\nexport const HoverCardTarget = forwardRef<HTMLElement, HoverCardTargetProps>((props, ref) => {\n  const { children, refProp, eventPropsWrapperName, ...others } = useProps(\n    'HoverCardTarget',\n    defaultProps,\n    props\n  );\n\n  if (!isElement(children)) {\n    throw new Error(\n      'HoverCard.Target component children should be an element or a component that accepts ref. Fragments, strings, numbers and other primitive values are not supported'\n    );\n  }\n\n  const ctx = useHoverCardContext();\n  const onMouseEnter = createEventHandler(children.props.onMouseEnter, ctx.openDropdown);\n  const onMouseLeave = createEventHandler(children.props.onMouseLeave, ctx.closeDropdown);\n\n  const eventListeners = { onMouseEnter, onMouseLeave };\n\n  return (\n    <Popover.Target refProp={refProp} ref={ref} {...others}>\n      {cloneElement(\n        children as React.ReactElement,\n        eventPropsWrapperName ? { [eventPropsWrapperName]: eventListeners } : eventListeners\n      )}\n    </Popover.Target>\n  );\n});\n\nHoverCardTarget.displayName = '@mantine/core/HoverCardTarget';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 7287, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7292, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Image/Image.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Image = registerClientReference(\n    function() { throw new Error(\"Attempted to call Image() from the server but Image is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Image/Image.mjs\",\n    \"Image\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,QAAQ,2RACjB;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,uEACA"}},
    {"offset": {"line": 7301, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7306, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Image/Image.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  getRadius,\n  MantineRadius,\n  polymorphicFactory,\n  PolymorphicFactory,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport classes from './Image.module.css';\n\nexport type ImageStylesNames = 'root';\nexport type ImageCssVariables = {\n  root: '--image-radius' | '--image-object-fit';\n};\n\nexport interface ImageProps extends BoxProps, StylesApiProps<ImageFactory> {\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius`, `0` by default */\n  radius?: MantineRadius;\n\n  /** Controls `object-fit` style, `'cover'` by default */\n  fit?: React.CSSProperties['objectFit'];\n\n  /** Image url that will be used as a fallback in case `src` prop is not set or image cannot be loaded */\n  fallbackSrc?: string;\n\n  /** Image url */\n  src?: any;\n\n  /** Called when image fails to load */\n  onError?: (event: React.SyntheticEvent<HTMLImageElement, Event>) => void;\n}\n\nexport type ImageFactory = PolymorphicFactory<{\n  props: ImageProps;\n  defaultRef: HTMLImageElement;\n  defaultComponent: 'img';\n  stylesNames: ImageStylesNames;\n  vars: ImageCssVariables;\n}>;\n\nconst defaultProps: Partial<ImageProps> = {};\n\nconst varsResolver = createVarsResolver<ImageFactory>((_, { radius, fit }) => ({\n  root: {\n    '--image-radius': radius === undefined ? undefined : getRadius(radius),\n    '--image-object-fit': fit,\n  },\n}));\n\nexport const Image = polymorphicFactory<ImageFactory>((_props, ref) => {\n  const props = useProps('Image', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    onError,\n    src,\n    radius,\n    fit,\n    fallbackSrc,\n    mod,\n    ...others\n  } = props;\n\n  const [error, setError] = useState(!src);\n\n  useEffect(() => setError(!src), [src]);\n\n  const getStyles = useStyles<ImageFactory>({\n    name: 'Image',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  if (error && fallbackSrc) {\n    return (\n      <Box\n        component=\"img\"\n        ref={ref}\n        src={fallbackSrc}\n        {...getStyles('root')}\n        onError={onError}\n        mod={['fallback', mod]}\n        {...others}\n      />\n    );\n  }\n\n  return (\n    <Box\n      component=\"img\"\n      ref={ref}\n      {...getStyles('root')}\n      src={src}\n      onError={(event) => {\n        onError?.(event);\n        setError(true);\n      }}\n      mod={mod}\n      {...others}\n    />\n  );\n});\n\nImage.classes = classes;\nImage.displayName = '@mantine/core/Image';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 7311, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7316, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Indicator/Indicator.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Indicator = registerClientReference(\n    function() { throw new Error(\"Attempted to call Indicator() from the server but Indicator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Indicator/Indicator.mjs\",\n    \"Indicator\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,YAAY,2RACrB;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,+EACA"}},
    {"offset": {"line": 7325, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7330, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Indicator/Indicator.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getAutoContrastValue,\n  getContrastColor,\n  getRadius,\n  getThemeColor,\n  MantineColor,\n  MantineRadius,\n  rem,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { getPositionVariables } from './get-position-variables/get-position-variables';\nimport { IndicatorPosition } from './Indicator.types';\nimport classes from './Indicator.module.css';\n\nexport type IndicatorPositionVariables =\n  | '--indicator-top'\n  | '--indicator-bottom'\n  | '--indicator-left'\n  | '--indicator-right'\n  | '--indicator-translate-x'\n  | '--indicator-translate-y';\n\nexport type IndicatorStylesNames = 'root' | 'indicator';\nexport type IndicatorCssVariables = {\n  root:\n    | '--indicator-color'\n    | '--indicator-text-color'\n    | '--indicator-size'\n    | '--indicator-radius'\n    | '--indicator-z-index'\n    | IndicatorPositionVariables;\n};\n\nexport interface IndicatorProps\n  extends BoxProps,\n    StylesApiProps<IndicatorFactory>,\n    ElementProps<'div'> {\n  /** Indicator position relative to the target element, `'top-end'` by default */\n  position?: IndicatorPosition;\n\n  /** Indicator offset relative to the target element, usually used for elements with border-radius, equals to `size` by default */\n  offset?: number;\n\n  /** Determines whether the indicator container should be an inline element, `false` by default */\n  inline?: boolean;\n\n  /** Indicator width and height, `10` by default */\n  size?: number | string;\n\n  /** Label rendered inside the indicator, for example, notification count */\n  label?: React.ReactNode;\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius`, `100` by default */\n  radius?: MantineRadius;\n\n  /** Key of `theme.colors` or any valid CSS color value, `theme.primaryColor` by default */\n  color?: MantineColor;\n\n  /** Determines whether the indicator should have a border (color of the border is the same as the body element), `false` by default */\n  withBorder?: boolean;\n\n  /** When Indicator is disabled it renders children only */\n  disabled?: boolean;\n\n  /** Determines whether the indicator should have processing animation, `false` by default */\n  processing?: boolean;\n\n  /** Indicator z-index, `200` by default */\n  zIndex?: string | number;\n\n  /** Determines whether text color should depend on `background-color`. If luminosity of the `color` prop is less than `theme.luminosityThreshold`, then `theme.white` will be used for text color, otherwise `theme.black`. Overrides `theme.autoContrast`. */\n  autoContrast?: boolean;\n}\n\nexport type IndicatorFactory = Factory<{\n  props: IndicatorProps;\n  ref: HTMLDivElement;\n  stylesNames: IndicatorStylesNames;\n  vars: IndicatorCssVariables;\n}>;\n\nconst defaultProps: Partial<IndicatorProps> = {\n  position: 'top-end',\n  offset: 0,\n  inline: false,\n  withBorder: false,\n  disabled: false,\n  processing: false,\n};\n\nconst varsResolver = createVarsResolver<IndicatorFactory>(\n  (theme, { color, position, offset, size, radius, zIndex, autoContrast }) => ({\n    root: {\n      '--indicator-color': color ? getThemeColor(color, theme) : undefined,\n      '--indicator-text-color': getAutoContrastValue(autoContrast, theme)\n        ? getContrastColor({ color, theme })\n        : undefined,\n      '--indicator-size': rem(size),\n      '--indicator-radius': radius === undefined ? undefined : getRadius(radius),\n      '--indicator-z-index': zIndex?.toString(),\n      ...getPositionVariables(position, offset),\n    },\n  })\n);\n\nexport const Indicator = factory<IndicatorFactory>((_props, ref) => {\n  const props = useProps('Indicator', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    children,\n    position,\n    offset,\n    inline,\n    label,\n    radius,\n    color,\n    withBorder,\n    disabled,\n    processing,\n    zIndex,\n    autoContrast,\n    mod,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<IndicatorFactory>({\n    name: 'Indicator',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <Box ref={ref} {...getStyles('root')} mod={[{ inline }, mod]} {...others}>\n      {!disabled && (\n        <>\n          <Box\n            mod={{ 'with-label': !!label, 'with-border': withBorder, processing }}\n            {...getStyles('indicator')}\n          >\n            {label}\n          </Box>\n        </>\n      )}\n      {children}\n    </Box>\n  );\n});\n\nIndicator.classes = classes;\nIndicator.displayName = '@mantine/core/Indicator';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 7335, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7340, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/JsonInput/JsonInput.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const JsonInput = registerClientReference(\n    function() { throw new Error(\"Attempted to call JsonInput() from the server but JsonInput is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/JsonInput/JsonInput.mjs\",\n    \"JsonInput\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,YAAY,2RACrB;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,+EACA"}},
    {"offset": {"line": 7349, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7354, "column": 0}, "map": {"version":3,"sources":["../../../src/components/JsonInput/JsonInput.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useUncontrolled } from '@mantine/hooks';\nimport { factory, Factory, useProps } from '../../core';\nimport { __InputStylesNames } from '../Input';\nimport { InputBase } from '../InputBase';\nimport { Textarea, TextareaProps } from '../Textarea';\nimport { validateJson } from './validate-json/validate-json';\n\nexport interface JsonInputProps extends Omit<TextareaProps, 'onChange'> {\n  /** Value for controlled component */\n  value?: string;\n\n  /** Default value for uncontrolled component */\n  defaultValue?: string;\n\n  /** Called when value changes */\n  onChange?: (value: string) => void;\n\n  /** Determines whether the value should be formatted on blur, `false` by default */\n  formatOnBlur?: boolean;\n\n  /** Error message displayed when value is not valid JSON */\n  validationError?: React.ReactNode;\n\n  /** Function to serialize value into a string, used for value formatting, `JSON.stringify` by default */\n  serialize?: typeof JSON.stringify;\n\n  /** Function to deserialize string value, used for value formatting and input JSON validation, must throw error if string cannot be processed, `JSON.parse` by default */\n  deserialize?: typeof JSON.parse;\n}\n\nexport type JsonInputFactory = Factory<{\n  props: JsonInputProps;\n  ref: HTMLTextAreaElement;\n  stylesNames: __InputStylesNames;\n}>;\n\nconst defaultProps: Partial<JsonInputProps> = {\n  serialize: JSON.stringify,\n  deserialize: JSON.parse,\n};\n\nexport const JsonInput = factory<JsonInputFactory>((props, ref) => {\n  const {\n    value,\n    defaultValue,\n    onChange,\n    formatOnBlur,\n    validationError,\n    serialize,\n    deserialize,\n    onFocus,\n    onBlur,\n    readOnly,\n    error,\n    ...others\n  } = useProps('JsonInput', defaultProps, props);\n\n  const [_value, setValue] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: '',\n    onChange,\n  });\n\n  const [valid, setValid] = useState(validateJson(_value, deserialize!));\n\n  const handleFocus = (event: React.FocusEvent<HTMLTextAreaElement>) => {\n    onFocus?.(event);\n    setValid(true);\n  };\n\n  const handleBlur = (event: React.FocusEvent<HTMLTextAreaElement>) => {\n    typeof onBlur === 'function' && onBlur(event);\n    const isValid = validateJson(event.currentTarget.value, deserialize!);\n    formatOnBlur &&\n      !readOnly &&\n      isValid &&\n      event.currentTarget.value.trim() !== '' &&\n      setValue(serialize!(deserialize!(event.currentTarget.value), null, 2));\n    setValid(isValid);\n  };\n\n  return (\n    <Textarea\n      value={_value}\n      onChange={(event) => setValue(event.currentTarget.value)}\n      onFocus={handleFocus}\n      onBlur={handleBlur}\n      ref={ref}\n      readOnly={readOnly}\n      {...others}\n      autoComplete=\"off\"\n      __staticSelector=\"JsonInput\"\n      error={valid ? error : validationError || true}\n      data-monospace\n    />\n  );\n});\n\nJsonInput.classes = InputBase.classes;\nJsonInput.displayName = '@mantine/core/JsonInput';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 7359, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7364, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Kbd/Kbd.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Kbd = registerClientReference(\n    function() { throw new Error(\"Attempted to call Kbd() from the server but Kbd is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Kbd/Kbd.mjs\",\n    \"Kbd\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,MAAM,2RACf;IAAa,MAAM,IAAI,MAAM;AAAsN,GACnP,mEACA"}},
    {"offset": {"line": 7373, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7378, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Kbd/Kbd.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getSize,\n  MantineSize,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport classes from './Kbd.module.css';\n\nexport type KbdStylesNames = 'root';\nexport type KbdCssVariables = {\n  root: '--kbd-padding' | '--kbd-fz';\n};\n\nexport interface KbdProps extends BoxProps, StylesApiProps<KbdFactory>, ElementProps<'kbd'> {\n  /** Controls font-size and padding, `'sm'` by default */\n  size?: MantineSize | (string & {});\n}\n\nexport type KbdFactory = Factory<{\n  props: KbdProps;\n  ref: HTMLElement;\n  stylesNames: KbdStylesNames;\n  vars: KbdCssVariables;\n}>;\n\nconst defaultProps: Partial<KbdProps> = {};\n\nconst varsResolver = createVarsResolver<KbdFactory>((_, { size }) => ({\n  root: {\n    '--kbd-fz': getSize(size, 'kbd-fz'),\n    '--kbd-padding': getSize(size, 'kbd-padding'),\n  },\n}));\n\nexport const Kbd = factory<KbdFactory>((_props, ref) => {\n  const props = useProps('Kbd', defaultProps, _props);\n  const { classNames, className, style, styles, unstyled, vars, ...others } = props;\n\n  const getStyles = useStyles<KbdFactory>({\n    name: 'Kbd',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return <Box component=\"kbd\" ref={ref} {...getStyles('root')} {...others} />;\n});\n\nKbd.classes = classes;\nKbd.displayName = '@mantine/core/Kbd';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 7383, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7388, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/List/List.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const List = registerClientReference(\n    function() { throw new Error(\"Attempted to call List() from the server but List is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/List/List.mjs\",\n    \"List\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,OAAO,2RAChB;IAAa,MAAM,IAAI,MAAM;AAAwN,GACrP,qEACA"}},
    {"offset": {"line": 7397, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7402, "column": 0}, "map": {"version":3,"sources":["../../../src/components/List/List.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getFontSize,\n  getLineHeight,\n  getSpacing,\n  MantineSize,\n  MantineSpacing,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { ListProvider } from './List.context';\nimport { ListItem, ListItemStylesNames } from './ListItem/ListItem';\nimport classes from './List.module.css';\n\nexport type ListStylesNames = 'root' | ListItemStylesNames;\nexport type ListCssVariables = {\n  root: '--list-fz' | '--list-lh' | '--list-spacing';\n};\n\nexport interface ListProps\n  extends BoxProps,\n    StylesApiProps<ListFactory>,\n    ElementProps<'ul', 'type'> {\n  /** `List.Item` components only */\n  children?: React.ReactNode;\n\n  /** List type: `ol` or `ul`, `'unordered'` by default */\n  type?: 'ordered' | 'unordered';\n\n  /** Determines whether list items should be offset with padding, `false` by default */\n  withPadding?: boolean;\n\n  /** Controls `font-size` and `line-height`, `'md'` by default */\n  size?: MantineSize;\n\n  /** Icon that replaces list item dot */\n  icon?: React.ReactNode;\n\n  /** Key of `theme.spacing` or any valid CSS value to set spacing between items, `0` by default */\n  spacing?: MantineSpacing;\n\n  /** Determines whether items must be centered with their icon, `false` by default */\n  center?: boolean;\n\n  /** Controls `list-style-type`, by default inferred from `type` */\n  listStyleType?: React.CSSProperties['listStyleType'];\n}\n\nexport type ListFactory = Factory<{\n  props: ListProps;\n  ref: HTMLUListElement;\n  stylesNames: ListStylesNames;\n  vars: ListCssVariables;\n  staticComponents: {\n    Item: typeof ListItem;\n  };\n}>;\n\nconst defaultProps: Partial<ListProps> = {\n  type: 'unordered',\n};\n\nconst varsResolver = createVarsResolver<ListFactory>((_, { size, spacing }) => ({\n  root: {\n    '--list-fz': getFontSize(size),\n    '--list-lh': getLineHeight(size),\n    '--list-spacing': getSpacing(spacing),\n  },\n}));\n\nexport const List = factory<ListFactory>((_props, ref) => {\n  const props = useProps('List', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    children,\n    type,\n    withPadding,\n    icon,\n    spacing,\n    center,\n    listStyleType,\n    mod,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<ListFactory>({\n    name: 'List',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <ListProvider value={{ center, icon, getStyles }}>\n      <Box<any>\n        {...getStyles('root', { style: { listStyleType } })}\n        component={type === 'unordered' ? ('ul' as const) : ('ol' as const)}\n        mod={[{ 'with-padding': withPadding }, mod]}\n        ref={ref}\n        {...others}\n      >\n        {children}\n      </Box>\n    </ListProvider>\n  );\n});\n\nList.classes = classes;\nList.displayName = '@mantine/core/List';\nList.Item = ListItem;\n"],"names":[],"mappings":""}},
    {"offset": {"line": 7407, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7412, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/List/ListItem/ListItem.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ListItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call ListItem() from the server but ListItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/List/ListItem/ListItem.mjs\",\n    \"ListItem\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,WAAW,2RACpB;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,kFACA"}},
    {"offset": {"line": 7421, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7426, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/List/ListItem/ListItem.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  CompoundStylesApiProps,\n  ElementProps,\n  factory,\n  Factory,\n  useProps,\n} from '../../../core';\nimport { useListContext } from '../List.context';\nimport classes from '../List.module.css';\n\nexport type ListItemStylesNames = 'item' | 'itemWrapper' | 'itemIcon' | 'itemLabel';\n\nexport interface ListItemProps\n  extends BoxProps,\n    CompoundStylesApiProps<ListItemFactory>,\n    ElementProps<'li'> {\n  /** Icon to replace item bullet */\n  icon?: React.ReactNode;\n\n  /** Item content */\n  children?: React.ReactNode;\n}\n\nexport type ListItemFactory = Factory<{\n  props: ListItemProps;\n  ref: HTMLLIElement;\n  stylesNames: ListItemStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<ListItemProps> = {};\n\nexport const ListItem = factory<ListItemFactory>((_props, ref) => {\n  const props = useProps('ListItem', defaultProps, _props);\n  const { classNames, className, style, styles, vars, icon, children, mod, ...others } = props;\n\n  const ctx = useListContext();\n  const _icon = icon || ctx.icon;\n  const stylesApiProps = { classNames, styles };\n\n  return (\n    <Box\n      {...ctx.getStyles('item', { ...stylesApiProps, className, style })}\n      component=\"li\"\n      mod={[{ 'with-icon': !!_icon, centered: ctx.center }, mod]}\n      ref={ref}\n      {...others}\n    >\n      <div {...ctx.getStyles('itemWrapper', stylesApiProps)}>\n        {_icon && <span {...ctx.getStyles('itemIcon', stylesApiProps)}>{_icon}</span>}\n        <span {...ctx.getStyles('itemLabel', stylesApiProps)}>{children}</span>\n      </div>\n    </Box>\n  );\n});\n\nListItem.classes = classes;\nListItem.displayName = '@mantine/core/ListItem';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 7431, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7436, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/LoadingOverlay/LoadingOverlay.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const LoadingOverlay = registerClientReference(\n    function() { throw new Error(\"Attempted to call LoadingOverlay() from the server but LoadingOverlay is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/LoadingOverlay/LoadingOverlay.mjs\",\n    \"LoadingOverlay\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,iBAAiB,2RAC1B;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,yFACA"}},
    {"offset": {"line": 7445, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7450, "column": 0}, "map": {"version":3,"sources":["../../../src/components/LoadingOverlay/LoadingOverlay.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getDefaultZIndex,\n  StylesApiProps,\n  useMantineTheme,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { Loader, LoaderProps } from '../Loader';\nimport { Overlay, OverlayProps } from '../Overlay';\nimport { Transition, TransitionOverride } from '../Transition';\nimport classes from './LoadingOverlay.module.css';\n\nexport type LoadingOverlayStylesNames = 'root' | 'loader' | 'overlay';\nexport type LoadingOverlayCssVariables = {\n  root: '--lo-z-index';\n};\n\nexport interface LoadingOverlayProps\n  extends BoxProps,\n    StylesApiProps<LoadingOverlayFactory>,\n    ElementProps<'div'> {\n  /** Props passed down to `Transition` component, `{ transition: 'fade', duration: 0 }` by default */\n  transitionProps?: TransitionOverride;\n\n  /** Props passed down to `Loader` component */\n  loaderProps?: LoaderProps;\n\n  /** Props passed down to `Overlay` component */\n  overlayProps?: OverlayProps;\n\n  /** Determines whether the overlay should be visible, `false` by default */\n  visible?: boolean;\n\n  /** Controls overlay `z-index`, `400` by default */\n  zIndex?: string | number;\n}\n\nexport type LoadingOverlayFactory = Factory<{\n  props: LoadingOverlayProps;\n  ref: HTMLDivElement;\n  stylesNames: LoadingOverlayStylesNames;\n  vars: LoadingOverlayCssVariables;\n}>;\n\nconst defaultProps: Partial<LoadingOverlayProps> = {\n  transitionProps: { transition: 'fade', duration: 0 },\n  overlayProps: { backgroundOpacity: 0.75 },\n  zIndex: getDefaultZIndex('overlay'),\n};\n\nconst varsResolver = createVarsResolver<LoadingOverlayFactory>((_, { zIndex }) => ({\n  root: {\n    '--lo-z-index': zIndex?.toString(),\n  },\n}));\n\nexport const LoadingOverlay = factory<LoadingOverlayFactory>((_props, ref) => {\n  const props = useProps('LoadingOverlay', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    transitionProps,\n    loaderProps,\n    overlayProps,\n    visible,\n    zIndex,\n    ...others\n  } = props;\n\n  const theme = useMantineTheme();\n\n  const getStyles = useStyles<LoadingOverlayFactory>({\n    name: 'LoadingOverlay',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  const _overlayProps = { ...defaultProps.overlayProps, ...overlayProps };\n\n  return (\n    <Transition transition=\"fade\" {...transitionProps} mounted={!!visible}>\n      {(transitionStyles) => (\n        <Box {...getStyles('root', { style: transitionStyles })} ref={ref} {...others}>\n          <Loader {...getStyles('loader')} unstyled={unstyled} {...loaderProps} />\n\n          <Overlay\n            {..._overlayProps}\n            {...getStyles('overlay')}\n            darkHidden\n            unstyled={unstyled}\n            color={overlayProps?.color || theme.white}\n          />\n\n          <Overlay\n            {..._overlayProps}\n            {...getStyles('overlay')}\n            lightHidden\n            unstyled={unstyled}\n            color={overlayProps?.color || theme.colors.dark[5]}\n          />\n        </Box>\n      )}\n    </Transition>\n  );\n});\n\nLoadingOverlay.classes = classes;\nLoadingOverlay.displayName = '@mantine/core/LoadingOverlay';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 7455, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7460, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Mark/Mark.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Mark = registerClientReference(\n    function() { throw new Error(\"Attempted to call Mark() from the server but Mark is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Mark/Mark.mjs\",\n    \"Mark\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,OAAO,2RAChB;IAAa,MAAM,IAAI,MAAM;AAAwN,GACrP,qEACA"}},
    {"offset": {"line": 7469, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7474, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Mark/Mark.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  MantineColor,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { getMarkColor } from './get-mark-color';\nimport classes from './Mark.module.css';\n\nexport type MarkStylesNames = 'root';\nexport type MarkCssVariables = {\n  root: '--mark-bg-dark' | '--mark-bg-light';\n};\n\nexport interface MarkProps extends BoxProps, StylesApiProps<MarkFactory>, ElementProps<'mark'> {\n  /** Key of `theme.colors` or any valid CSS color, `yellow` by default */\n  color?: MantineColor;\n}\n\nexport type MarkFactory = Factory<{\n  props: MarkProps;\n  ref: HTMLElement;\n  stylesNames: MarkStylesNames;\n  vars: MarkCssVariables;\n}>;\n\nconst defaultProps: Partial<MarkProps> = {\n  color: 'yellow',\n};\n\nconst varsResolver = createVarsResolver<MarkFactory>((theme, { color }) => ({\n  root: {\n    '--mark-bg-dark': getMarkColor({ color, theme, defaultShade: 5 }),\n    '--mark-bg-light': getMarkColor({ color, theme, defaultShade: 2 }),\n  },\n}));\n\nexport const Mark = factory<MarkFactory>((_props, ref) => {\n  const props = useProps('Mark', defaultProps, _props);\n  const { classNames, className, style, styles, unstyled, vars, color, variant, ...others } = props;\n\n  const getStyles = useStyles<MarkFactory>({\n    name: 'Mark',\n    props,\n    className,\n    style,\n    classes,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return <Box component=\"mark\" ref={ref} variant={variant} {...getStyles('root')} {...others} />;\n});\n\nMark.classes = classes;\nMark.displayName = '@mantine/core/Mark';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 7479, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7484, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Menu/Menu.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Menu = registerClientReference(\n    function() { throw new Error(\"Attempted to call Menu() from the server but Menu is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Menu/Menu.mjs\",\n    \"Menu\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,OAAO,2RAChB;IAAa,MAAM,IAAI,MAAM;AAAwN,GACrP,qEACA"}},
    {"offset": {"line": 7493, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7498, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Menu/Menu.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDidUpdate, useUncontrolled } from '@mantine/hooks';\nimport {\n  ExtendComponent,\n  Factory,\n  getContextItemIndex,\n  StylesApiProps,\n  useHovered,\n  useProps,\n  useResolvedStylesApi,\n  useStyles,\n} from '../../core';\nimport { useDelayedHover } from '../Floating';\nimport { __PopoverProps, Popover, PopoverStylesNames } from '../Popover';\nimport { MenuContextProvider } from './Menu.context';\nimport { MenuDivider } from './MenuDivider/MenuDivider';\nimport { MenuDropdown } from './MenuDropdown/MenuDropdown';\nimport { MenuItem } from './MenuItem/MenuItem';\nimport { MenuLabel } from './MenuLabel/MenuLabel';\nimport { MenuTarget } from './MenuTarget/MenuTarget';\nimport classes from './Menu.module.css';\n\nexport type MenuStylesNames =\n  | 'item'\n  | 'itemLabel'\n  | 'itemSection'\n  | 'label'\n  | 'divider'\n  | PopoverStylesNames;\n\nexport type MenuFactory = Factory<{\n  props: MenuProps;\n  ref: HTMLDivElement;\n  stylesNames: MenuStylesNames;\n}>;\n\nexport interface MenuProps extends __PopoverProps, StylesApiProps<MenuFactory> {\n  variant?: string;\n\n  /** Menu content */\n  children?: React.ReactNode;\n\n  /** Controlled menu opened state */\n  opened?: boolean;\n\n  /** Uncontrolled menu initial opened state */\n  defaultOpened?: boolean;\n\n  /** Determines whether dropdown should trap focus of keyboard events */\n  trapFocus?: boolean;\n\n  /** Called when menu opened state changes */\n  onChange?: (opened: boolean) => void;\n\n  /** Called when Menu is opened */\n  onOpen?: () => void;\n\n  /** Called when Menu is closed */\n  onClose?: () => void;\n\n  /** Determines whether Menu should be closed when item is clicked */\n  closeOnItemClick?: boolean;\n\n  /** Determines whether arrow key presses should loop though items (first to last and last to first) */\n  loop?: boolean;\n\n  /** Determines whether dropdown should be closed when Escape key is pressed */\n  closeOnEscape?: boolean;\n\n  /** Event which should open menu */\n  trigger?: 'click' | 'hover' | 'click-hover';\n\n  /** Open delay in ms, applicable only to trigger=\"hover\" variant */\n  openDelay?: number;\n\n  /** Close delay in ms, applicable only to trigger=\"hover\" variant */\n  closeDelay?: number;\n\n  /** Determines whether dropdown should be closed on outside clicks */\n  closeOnClickOutside?: boolean;\n\n  /** Events that trigger outside clicks */\n  clickOutsideEvents?: string[];\n\n  /** id base to create accessibility connections */\n  id?: string;\n\n  /** Set the `tabindex` on all menu items. Defaults to -1 */\n  menuItemTabIndex?: -1 | 0;\n}\n\nconst defaultProps: Partial<MenuProps> = {\n  trapFocus: true,\n  closeOnItemClick: true,\n  clickOutsideEvents: ['mousedown', 'touchstart', 'keydown'],\n  loop: true,\n  trigger: 'click',\n  openDelay: 0,\n  closeDelay: 100,\n  menuItemTabIndex: -1,\n};\n\nexport function Menu(_props: MenuProps) {\n  const props = useProps('Menu', defaultProps, _props);\n  const {\n    children,\n    onOpen,\n    onClose,\n    opened,\n    defaultOpened,\n    trapFocus,\n    onChange,\n    closeOnItemClick,\n    loop,\n    closeOnEscape,\n    trigger,\n    openDelay,\n    closeDelay,\n    classNames,\n    styles,\n    unstyled,\n    variant,\n    vars,\n    menuItemTabIndex,\n    keepMounted,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<MenuFactory>({\n    name: 'Menu',\n    classes,\n    props,\n    classNames,\n    styles,\n    unstyled,\n  });\n\n  const [hovered, { setHovered, resetHovered }] = useHovered();\n  const [_opened, setOpened] = useUncontrolled({\n    value: opened,\n    defaultValue: defaultOpened,\n    finalValue: false,\n    onChange,\n  });\n  const [openedViaClick, setOpenedViaClick] = useState(false);\n\n  const close = () => {\n    setOpened(false);\n    setOpenedViaClick(false);\n    _opened && onClose?.();\n  };\n\n  const open = () => {\n    setOpened(true);\n    !_opened && onOpen?.();\n  };\n\n  const toggleDropdown = () => {\n    _opened ? close() : open();\n  };\n\n  const { openDropdown, closeDropdown } = useDelayedHover({ open, close, closeDelay, openDelay });\n\n  const getItemIndex = (node: HTMLButtonElement) =>\n    getContextItemIndex('[data-menu-item]', '[data-menu-dropdown]', node);\n\n  const { resolvedClassNames, resolvedStyles } = useResolvedStylesApi<MenuFactory>({\n    classNames,\n    styles,\n    props,\n  });\n\n  useDidUpdate(() => {\n    resetHovered();\n  }, [_opened]);\n\n  return (\n    <MenuContextProvider\n      value={{\n        getStyles,\n        opened: _opened,\n        toggleDropdown,\n        getItemIndex,\n        hovered,\n        setHovered,\n        openedViaClick,\n        setOpenedViaClick,\n        closeOnItemClick,\n        closeDropdown: trigger === 'click' ? close : closeDropdown,\n        openDropdown: trigger === 'click' ? open : openDropdown,\n        closeDropdownImmediately: close,\n        loop,\n        trigger,\n        unstyled,\n        menuItemTabIndex,\n      }}\n    >\n      <Popover\n        {...others}\n        opened={_opened}\n        onChange={toggleDropdown}\n        defaultOpened={defaultOpened}\n        trapFocus={keepMounted ? false : trapFocus}\n        closeOnEscape={closeOnEscape}\n        __staticSelector=\"Menu\"\n        classNames={resolvedClassNames}\n        styles={resolvedStyles}\n        unstyled={unstyled}\n        variant={variant}\n        keepMounted={keepMounted}\n      >\n        {children}\n      </Popover>\n    </MenuContextProvider>\n  );\n}\n\nMenu.extend = (input: ExtendComponent<MenuFactory>) => input;\nMenu.classes = classes as Record<string, string>;\nMenu.displayName = '@mantine/core/Menu';\nMenu.Item = MenuItem;\nMenu.Label = MenuLabel;\nMenu.Dropdown = MenuDropdown;\nMenu.Target = MenuTarget;\nMenu.Divider = MenuDivider;\n"],"names":[],"mappings":""}},
    {"offset": {"line": 7503, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7508, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Menu/MenuDivider/MenuDivider.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const MenuDivider = registerClientReference(\n    function() { throw new Error(\"Attempted to call MenuDivider() from the server but MenuDivider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Menu/MenuDivider/MenuDivider.mjs\",\n    \"MenuDivider\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,cAAc,2RACvB;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,wFACA"}},
    {"offset": {"line": 7517, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7522, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Menu/MenuDivider/MenuDivider.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  CompoundStylesApiProps,\n  ElementProps,\n  factory,\n  Factory,\n  useProps,\n} from '../../../core';\nimport { useMenuContext } from '../Menu.context';\nimport classes from '../Menu.module.css';\n\nexport type MenuDividerStylesNames = 'divider';\n\nexport interface MenuDividerProps\n  extends BoxProps,\n    CompoundStylesApiProps<MenuDividerFactory>,\n    ElementProps<'div'> {}\n\nexport type MenuDividerFactory = Factory<{\n  props: MenuDividerProps;\n  ref: HTMLDivElement;\n  stylesNames: MenuDividerStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<MenuDividerProps> = {};\n\nexport const MenuDivider = factory<MenuDividerFactory>((props, ref) => {\n  const { classNames, className, style, styles, vars, ...others } = useProps(\n    'MenuDivider',\n    defaultProps,\n    props\n  );\n  const ctx = useMenuContext();\n\n  return (\n    <Box\n      ref={ref}\n      {...ctx.getStyles('divider', { className, style, styles, classNames })}\n      {...others}\n    />\n  );\n});\n\nMenuDivider.classes = classes;\nMenuDivider.displayName = '@mantine/core/MenuDivider';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 7527, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7532, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Menu/MenuItem/MenuItem.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const MenuItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call MenuItem() from the server but MenuItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Menu/MenuItem/MenuItem.mjs\",\n    \"MenuItem\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,WAAW,2RACpB;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,kFACA"}},
    {"offset": {"line": 7541, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7546, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Menu/MenuItem/MenuItem.tsx"],"sourcesContent":["import React, { useRef } from 'react';\nimport { useMergedRef } from '@mantine/hooks';\nimport {\n  BoxProps,\n  CompoundStylesApiProps,\n  createEventHandler,\n  createScopedKeydownHandler,\n  MantineColor,\n  parseThemeColor,\n  polymorphicFactory,\n  PolymorphicFactory,\n  useDirection,\n  useMantineTheme,\n  useProps,\n} from '../../../core';\nimport { UnstyledButton } from '../../UnstyledButton';\nimport { useMenuContext } from '../Menu.context';\nimport classes from '../Menu.module.css';\n\nexport type MenuItemStylesNames = 'item' | 'itemLabel' | 'itemSection';\n\nexport interface MenuItemProps extends BoxProps, CompoundStylesApiProps<MenuItemFactory> {\n  /** Item label */\n  children?: React.ReactNode;\n\n  /** Key of `theme.colors` or any valid CSS color */\n  color?: MantineColor;\n\n  /** Determines whether the menu should be closed when the item is clicked, overrides `closeOnItemClick` prop on the `Menu` component */\n  closeMenuOnClick?: boolean;\n\n  /** Section displayed on the left side of the label */\n  leftSection?: React.ReactNode;\n\n  /** Section displayed on the right side of the label */\n  rightSection?: React.ReactNode;\n\n  /** Disables item */\n  disabled?: boolean;\n}\n\nexport type MenuItemFactory = PolymorphicFactory<{\n  props: MenuItemProps;\n  defaultRef: HTMLButtonElement;\n  defaultComponent: 'button';\n  stylesNames: MenuItemStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<MenuItemProps> = {};\n\nexport const MenuItem = polymorphicFactory<MenuItemFactory>((props, ref) => {\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    vars,\n    color,\n    closeMenuOnClick,\n    leftSection,\n    rightSection,\n    children,\n    disabled,\n    ...others\n  } = useProps('MenuItem', defaultProps, props);\n\n  const ctx = useMenuContext();\n  const theme = useMantineTheme();\n  const { dir } = useDirection();\n  const itemRef = useRef<HTMLButtonElement>();\n  const itemIndex = ctx.getItemIndex(itemRef.current!);\n  const _others: any = others;\n\n  const handleMouseLeave = createEventHandler(_others.onMouseLeave, () => ctx.setHovered(-1));\n  const handleMouseEnter = createEventHandler(_others.onMouseEnter, () =>\n    ctx.setHovered(ctx.getItemIndex(itemRef.current!))\n  );\n\n  const handleClick = createEventHandler(_others.onClick, () => {\n    if (typeof closeMenuOnClick === 'boolean') {\n      closeMenuOnClick && ctx.closeDropdownImmediately();\n    } else {\n      ctx.closeOnItemClick && ctx.closeDropdownImmediately();\n    }\n  });\n\n  const handleFocus = createEventHandler(_others.onFocus, () =>\n    ctx.setHovered(ctx.getItemIndex(itemRef.current!))\n  );\n\n  const colors = color ? theme.variantColorResolver({ color, theme, variant: 'light' }) : undefined;\n  const parsedThemeColor = color ? parseThemeColor({ color, theme }) : null;\n\n  return (\n    <UnstyledButton\n      {...others}\n      unstyled={ctx.unstyled}\n      tabIndex={ctx.menuItemTabIndex}\n      onFocus={handleFocus}\n      {...ctx.getStyles('item', { className, style, styles, classNames })}\n      ref={useMergedRef(itemRef, ref)}\n      role=\"menuitem\"\n      disabled={disabled}\n      data-menu-item\n      data-disabled={disabled || undefined}\n      data-hovered={ctx.hovered === itemIndex ? true : undefined}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      onClick={handleClick}\n      onKeyDown={createScopedKeydownHandler({\n        siblingSelector: '[data-menu-item]',\n        parentSelector: '[data-menu-dropdown]',\n        activateOnFocus: false,\n        loop: ctx.loop,\n        dir,\n        orientation: 'vertical',\n        onKeyDown: _others.onKeydown,\n      })}\n      __vars={{\n        '--menu-item-color':\n          parsedThemeColor?.isThemeColor && parsedThemeColor?.shade === undefined\n            ? `var(--mantine-color-${parsedThemeColor.color}-6)`\n            : colors?.color,\n        '--menu-item-hover': colors?.hover,\n      }}\n    >\n      {leftSection && (\n        <div {...ctx.getStyles('itemSection', { styles, classNames })} data-position=\"left\">\n          {leftSection}\n        </div>\n      )}\n      {children && <div {...ctx.getStyles('itemLabel', { styles, classNames })}>{children}</div>}\n      {rightSection && (\n        <div {...ctx.getStyles('itemSection', { styles, classNames })} data-position=\"right\">\n          {rightSection}\n        </div>\n      )}\n    </UnstyledButton>\n  );\n});\n\nMenuItem.classes = classes;\nMenuItem.displayName = '@mantine/core/MenuItem';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 7551, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7556, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Menu/MenuLabel/MenuLabel.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const MenuLabel = registerClientReference(\n    function() { throw new Error(\"Attempted to call MenuLabel() from the server but MenuLabel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Menu/MenuLabel/MenuLabel.mjs\",\n    \"MenuLabel\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,YAAY,2RACrB;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,oFACA"}},
    {"offset": {"line": 7565, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7570, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Menu/MenuLabel/MenuLabel.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  CompoundStylesApiProps,\n  ElementProps,\n  factory,\n  Factory,\n  useProps,\n} from '../../../core';\nimport { useMenuContext } from '../Menu.context';\nimport classes from '../Menu.module.css';\n\nexport type MenuLabelStylesNames = 'label';\n\nexport interface MenuLabelProps\n  extends BoxProps,\n    CompoundStylesApiProps<MenuLabelFactory>,\n    ElementProps<'div'> {}\n\nexport type MenuLabelFactory = Factory<{\n  props: MenuLabelProps;\n  ref: HTMLDivElement;\n  stylesNames: MenuLabelStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<MenuLabelProps> = {};\n\nexport const MenuLabel = factory<MenuLabelFactory>((props, ref) => {\n  const { classNames, className, style, styles, vars, ...others } = useProps(\n    'MenuLabel',\n    defaultProps,\n    props\n  );\n  const ctx = useMenuContext();\n\n  return (\n    <Box\n      ref={ref}\n      {...ctx.getStyles('label', { className, style, styles, classNames })}\n      {...others}\n    />\n  );\n});\n\nMenuLabel.classes = classes;\nMenuLabel.displayName = '@mantine/core/MenuLabel';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 7575, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7580, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Menu/MenuDropdown/MenuDropdown.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const MenuDropdown = registerClientReference(\n    function() { throw new Error(\"Attempted to call MenuDropdown() from the server but MenuDropdown is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Menu/MenuDropdown/MenuDropdown.mjs\",\n    \"MenuDropdown\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,eAAe,2RACxB;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,0FACA"}},
    {"offset": {"line": 7589, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7594, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Menu/MenuDropdown/MenuDropdown.tsx"],"sourcesContent":["/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React, { useRef } from 'react';\nimport { useMergedRef } from '@mantine/hooks';\nimport {\n  BoxProps,\n  CompoundStylesApiProps,\n  createEventHandler,\n  ElementProps,\n  factory,\n  Factory,\n  useProps,\n} from '../../../core';\nimport { Popover } from '../../Popover';\nimport { useMenuContext } from '../Menu.context';\nimport classes from '../Menu.module.css';\n\nexport type MenuDropdownStylesNames = 'dropdown';\n\nexport interface MenuDropdownProps\n  extends BoxProps,\n    CompoundStylesApiProps<MenuDropdownFactory>,\n    ElementProps<'div'> {}\n\nexport type MenuDropdownFactory = Factory<{\n  props: MenuDropdownProps;\n  ref: HTMLDivElement;\n  stylesNames: MenuDropdownStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<MenuDropdownProps> = {};\n\nexport const MenuDropdown = factory<MenuDropdownFactory>((props, ref) => {\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    vars,\n    onMouseEnter,\n    onMouseLeave,\n    children,\n    ...others\n  } = useProps('MenuDropdown', defaultProps, props);\n\n  const wrapperRef = useRef<HTMLDivElement>(null);\n  const ctx = useMenuContext();\n\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLDivElement>) => {\n    if (event.key === 'ArrowUp' || event.key === 'ArrowDown') {\n      event.preventDefault();\n      wrapperRef.current\n        ?.querySelectorAll<HTMLButtonElement>('[data-menu-item]:not(:disabled)')[0]\n        ?.focus();\n    }\n  };\n\n  const handleMouseEnter = createEventHandler<any>(\n    onMouseEnter,\n    () => (ctx.trigger === 'hover' || ctx.trigger === 'click-hover') && ctx.openDropdown()\n  );\n\n  const handleMouseLeave = createEventHandler<any>(\n    onMouseLeave,\n    () => (ctx.trigger === 'hover' || ctx.trigger === 'click-hover') && ctx.closeDropdown()\n  );\n\n  return (\n    <Popover.Dropdown\n      {...others}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      role=\"menu\"\n      aria-orientation=\"vertical\"\n      ref={useMergedRef(ref, wrapperRef)}\n      {...ctx.getStyles('dropdown', {\n        className,\n        style,\n        styles,\n        classNames,\n        withStaticClass: false,\n      })}\n      tabIndex={-1}\n      data-menu-dropdown\n      onKeyDown={handleKeyDown}\n    >\n      <div tabIndex={-1} data-autofocus aria-hidden style={{ outline: 0 }} />\n      {children}\n    </Popover.Dropdown>\n  );\n});\n\nMenuDropdown.classes = classes;\nMenuDropdown.displayName = '@mantine/core/MenuDropdown';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 7599, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7604, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Menu/MenuTarget/MenuTarget.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const MenuTarget = registerClientReference(\n    function() { throw new Error(\"Attempted to call MenuTarget() from the server but MenuTarget is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Menu/MenuTarget/MenuTarget.mjs\",\n    \"MenuTarget\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,aAAa,2RACtB;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,sFACA"}},
    {"offset": {"line": 7613, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7618, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Menu/MenuTarget/MenuTarget.tsx"],"sourcesContent":["import React, { cloneElement, forwardRef } from 'react';\nimport { createEventHandler, isElement, useProps } from '../../../core';\nimport { Popover } from '../../Popover';\nimport { useMenuContext } from '../Menu.context';\n\nexport interface MenuTargetProps {\n  /** Target element */\n  children: React.ReactNode;\n\n  /** Key of the prop that should be used to get element ref */\n  refProp?: string;\n}\n\nconst defaultProps: Partial<MenuTargetProps> = {\n  refProp: 'ref',\n};\n\nexport const MenuTarget = forwardRef<HTMLElement, MenuTargetProps>((props, ref) => {\n  const { children, refProp, ...others } = useProps('MenuTarget', defaultProps, props);\n\n  if (!isElement(children)) {\n    throw new Error(\n      'Menu.Target component children should be an element or a component that accepts ref. Fragments, strings, numbers and other primitive values are not supported'\n    );\n  }\n\n  const ctx = useMenuContext();\n\n  const onClick = createEventHandler(children.props.onClick, () => {\n    if (ctx.trigger === 'click') {\n      ctx.toggleDropdown();\n    } else if (ctx.trigger === 'click-hover') {\n      ctx.setOpenedViaClick(true);\n      if (!ctx.opened) {\n        ctx.openDropdown();\n      }\n    }\n  });\n\n  const onMouseEnter = createEventHandler(\n    children.props.onMouseEnter,\n    () => (ctx.trigger === 'hover' || ctx.trigger === 'click-hover') && ctx.openDropdown()\n  );\n\n  const onMouseLeave = createEventHandler(children.props.onMouseLeave, () => {\n    if (ctx.trigger === 'hover') {\n      ctx.closeDropdown();\n    } else if (ctx.trigger === 'click-hover' && !ctx.openedViaClick) {\n      ctx.closeDropdown();\n    }\n  });\n\n  return (\n    <Popover.Target refProp={refProp} popupType=\"menu\" ref={ref} {...others}>\n      {cloneElement(children, {\n        onClick,\n        onMouseEnter,\n        onMouseLeave,\n        'data-expanded': ctx.opened ? true : undefined,\n      })}\n    </Popover.Target>\n  );\n});\n\nMenuTarget.displayName = '@mantine/core/MenuTarget';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 7623, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7628, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Modal/Modal.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Modal = registerClientReference(\n    function() { throw new Error(\"Attempted to call Modal() from the server but Modal is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Modal/Modal.mjs\",\n    \"Modal\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,QAAQ,2RACjB;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,uEACA"}},
    {"offset": {"line": 7637, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7642, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Modal/Modal.tsx"],"sourcesContent":["import React from 'react';\nimport { factory, Factory, getDefaultZIndex, useProps } from '../../core';\nimport { ModalBaseCloseButtonProps, ModalBaseOverlayProps } from '../ModalBase';\nimport { ModalBody } from './ModalBody';\nimport { ModalCloseButton } from './ModalCloseButton';\nimport { ModalContent } from './ModalContent';\nimport { ModalHeader } from './ModalHeader';\nimport { ModalOverlay } from './ModalOverlay';\nimport {\n  ModalRoot,\n  ModalRootCssVariables,\n  ModalRootProps,\n  ModalRootStylesNames,\n} from './ModalRoot';\nimport { ModalTitle } from './ModalTitle';\nimport classes from './Modal.module.css';\n\nexport type ModalStylesNames = ModalRootStylesNames;\nexport type ModalCssVariables = ModalRootCssVariables;\n\nexport interface ModalProps extends ModalRootProps {\n  __staticSelector?: string;\n\n  /** Modal title */\n  title?: React.ReactNode;\n\n  /** Determines whether the overlay should be rendered, `true` by default */\n  withOverlay?: boolean;\n\n  /** Props passed down to the `Overlay` component, use to configure opacity, `background-color`, styles and other properties */\n  overlayProps?: ModalBaseOverlayProps;\n\n  /** Modal content */\n  children?: React.ReactNode;\n\n  /** Determines whether the close button should be rendered, `true` by default */\n  withCloseButton?: boolean;\n\n  /** Props passed down to the close button */\n  closeButtonProps?: ModalBaseCloseButtonProps;\n}\n\nexport type ModalFactory = Factory<{\n  props: ModalProps;\n  ref: HTMLDivElement;\n  stylesNames: ModalStylesNames;\n  vars: ModalCssVariables;\n  staticComponents: {\n    Root: typeof ModalRoot;\n    Overlay: typeof ModalOverlay;\n    Content: typeof ModalContent;\n    Body: typeof ModalBody;\n    Header: typeof ModalHeader;\n    Title: typeof ModalTitle;\n    CloseButton: typeof ModalCloseButton;\n  };\n}>;\n\nconst defaultProps: Partial<ModalProps> = {\n  closeOnClickOutside: true,\n  withinPortal: true,\n  lockScroll: true,\n  trapFocus: true,\n  returnFocus: true,\n  closeOnEscape: true,\n  keepMounted: false,\n  zIndex: getDefaultZIndex('modal'),\n  transitionProps: { duration: 200, transition: 'fade-down' },\n  withOverlay: true,\n  withCloseButton: true,\n};\n\nexport const Modal = factory<ModalFactory>((_props, ref) => {\n  const {\n    title,\n    withOverlay,\n    overlayProps,\n    withCloseButton,\n    closeButtonProps,\n    children,\n    radius,\n    ...others\n  } = useProps('Modal', defaultProps, _props);\n\n  const hasHeader = !!title || withCloseButton;\n\n  return (\n    <ModalRoot ref={ref} radius={radius} {...others}>\n      {withOverlay && <ModalOverlay {...overlayProps} />}\n      <ModalContent radius={radius}>\n        {hasHeader && (\n          <ModalHeader>\n            {title && <ModalTitle>{title}</ModalTitle>}\n            {withCloseButton && <ModalCloseButton {...closeButtonProps} />}\n          </ModalHeader>\n        )}\n\n        <ModalBody>{children}</ModalBody>\n      </ModalContent>\n    </ModalRoot>\n  );\n});\n\nModal.classes = classes;\nModal.displayName = '@mantine/core/Modal';\nModal.Root = ModalRoot;\nModal.Overlay = ModalOverlay;\nModal.Content = ModalContent;\nModal.Body = ModalBody;\nModal.Header = ModalHeader;\nModal.Title = ModalTitle;\nModal.CloseButton = ModalCloseButton;\n"],"names":[],"mappings":""}},
    {"offset": {"line": 7647, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7652, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Modal/ModalRoot.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ModalRoot = registerClientReference(\n    function() { throw new Error(\"Attempted to call ModalRoot() from the server but ModalRoot is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Modal/ModalRoot.mjs\",\n    \"ModalRoot\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,YAAY,2RACrB;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,2EACA"}},
    {"offset": {"line": 7661, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7666, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Modal/ModalRoot.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  createVarsResolver,\n  factory,\n  Factory,\n  getDefaultZIndex,\n  getRadius,\n  getSize,\n  MantineRadius,\n  rem,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { ModalBase, ModalBaseProps, ModalBaseStylesNames } from '../ModalBase';\nimport { ModalProvider, ScrollAreaComponent } from './Modal.context';\nimport classes from './Modal.module.css';\n\nexport type ModalRootStylesNames = ModalBaseStylesNames;\nexport type ModalRootCssVariables = {\n  root: '--modal-radius' | '--modal-size' | '--modal-y-offset' | '--modal-x-offset';\n};\n\nexport interface ModalRootProps extends StylesApiProps<ModalRootFactory>, ModalBaseProps {\n  __staticSelector?: string;\n\n  /** Top/bottom modal offset, `5dvh` by default */\n  yOffset?: React.CSSProperties['marginTop'];\n\n  /** Left/right modal offset, `5vw` by default */\n  xOffset?: React.CSSProperties['marginLeft'];\n\n  /** Scroll area component, native `div` element by default */\n  scrollAreaComponent?: ScrollAreaComponent;\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius`, `theme.defaultRadius` by default */\n  radius?: MantineRadius;\n\n  /** Determines whether the modal should be centered vertically, `false` by default */\n  centered?: boolean;\n\n  /** Determines whether the modal should take the entire screen, `false` by default */\n  fullScreen?: boolean;\n}\n\nexport type ModalRootFactory = Factory<{\n  props: ModalRootProps;\n  ref: HTMLDivElement;\n  stylesNames: ModalRootStylesNames;\n  vars: ModalRootCssVariables;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<ModalRootProps> = {\n  __staticSelector: 'Modal',\n  closeOnClickOutside: true,\n  withinPortal: true,\n  lockScroll: true,\n  trapFocus: true,\n  returnFocus: true,\n  closeOnEscape: true,\n  keepMounted: false,\n  zIndex: getDefaultZIndex('modal'),\n  transitionProps: { duration: 200, transition: 'pop' },\n  yOffset: '5dvh',\n};\n\nconst varsResolver = createVarsResolver<ModalRootFactory>(\n  (_, { radius, size, yOffset, xOffset }) => ({\n    root: {\n      '--modal-radius': radius === undefined ? undefined : getRadius(radius),\n      '--modal-size': getSize(size, 'modal-size'),\n      '--modal-y-offset': rem(yOffset),\n      '--modal-x-offset': rem(xOffset),\n    },\n  })\n);\n\nexport const ModalRoot = factory<ModalRootFactory>((_props, ref) => {\n  const props = useProps('ModalRoot', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    yOffset,\n    scrollAreaComponent,\n    radius,\n    fullScreen,\n    centered,\n    xOffset,\n    __staticSelector,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<ModalRootFactory>({\n    name: __staticSelector!,\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <ModalProvider value={{ yOffset, scrollAreaComponent, getStyles, fullScreen }}>\n      <ModalBase\n        ref={ref}\n        {...getStyles('root')}\n        data-full-screen={fullScreen || undefined}\n        data-centered={centered || undefined}\n        unstyled={unstyled}\n        {...others}\n      />\n    </ModalProvider>\n  );\n});\n\nModalRoot.classes = classes;\nModalRoot.displayName = '@mantine/core/ModalRoot';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 7671, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7676, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Modal/ModalBody.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ModalBody = registerClientReference(\n    function() { throw new Error(\"Attempted to call ModalBody() from the server but ModalBody is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Modal/ModalBody.mjs\",\n    \"ModalBody\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,YAAY,2RACrB;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,2EACA"}},
    {"offset": {"line": 7685, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7690, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Modal/ModalBody.tsx"],"sourcesContent":["import React from 'react';\nimport { CompoundStylesApiProps, factory, Factory, useProps } from '../../core';\nimport { ModalBaseBody, ModalBaseBodyProps } from '../ModalBase';\nimport { useModalContext } from './Modal.context';\nimport classes from './Modal.module.css';\n\nexport type ModalBodyStylesNames = 'body';\n\nexport interface ModalBodyProps\n  extends ModalBaseBodyProps,\n    CompoundStylesApiProps<ModalBodyFactory> {}\n\nexport type ModalBodyFactory = Factory<{\n  props: ModalBodyProps;\n  ref: HTMLDivElement;\n  stylesNames: ModalBodyStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<ModalBodyProps> = {};\n\nexport const ModalBody = factory<ModalBodyFactory>((_props, ref) => {\n  const props = useProps('ModalBody', defaultProps, _props);\n  const { classNames, className, style, styles, vars, ...others } = props;\n\n  const ctx = useModalContext();\n\n  return (\n    <ModalBaseBody\n      ref={ref}\n      {...ctx.getStyles('body', { classNames, style, styles, className })}\n      {...others}\n    />\n  );\n});\n\nModalBody.classes = classes;\nModalBody.displayName = '@mantine/core/ModalBody';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 7695, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7700, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Modal/ModalCloseButton.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ModalCloseButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call ModalCloseButton() from the server but ModalCloseButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Modal/ModalCloseButton.mjs\",\n    \"ModalCloseButton\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,mBAAmB,2RAC5B;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,kFACA"}},
    {"offset": {"line": 7709, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7714, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Modal/ModalCloseButton.tsx"],"sourcesContent":["import React from 'react';\nimport { CompoundStylesApiProps, factory, Factory, useProps } from '../../core';\nimport { ModalBaseCloseButton, ModalBaseCloseButtonProps } from '../ModalBase';\nimport { useModalContext } from './Modal.context';\nimport classes from './Modal.module.css';\n\nexport type ModalCloseButtonStylesNames = 'close';\n\nexport interface ModalCloseButtonProps\n  extends ModalBaseCloseButtonProps,\n    CompoundStylesApiProps<ModalCloseButtonFactory> {}\n\nexport type ModalCloseButtonFactory = Factory<{\n  props: ModalCloseButtonProps;\n  ref: HTMLButtonElement;\n  stylesNames: ModalCloseButtonStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<ModalCloseButtonProps> = {};\n\nexport const ModalCloseButton = factory<ModalCloseButtonFactory>((_props, ref) => {\n  const props = useProps('ModalCloseButton', defaultProps, _props);\n  const { classNames, className, style, styles, vars, ...others } = props;\n\n  const ctx = useModalContext();\n\n  return (\n    <ModalBaseCloseButton\n      ref={ref}\n      {...ctx.getStyles('close', { classNames, style, styles, className })}\n      {...others}\n    />\n  );\n});\n\nModalCloseButton.classes = classes;\nModalCloseButton.displayName = '@mantine/core/ModalCloseButton';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 7719, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7724, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Modal/ModalContent.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ModalContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call ModalContent() from the server but ModalContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Modal/ModalContent.mjs\",\n    \"ModalContent\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,eAAe,2RACxB;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,8EACA"}},
    {"offset": {"line": 7733, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7738, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Modal/ModalContent.tsx"],"sourcesContent":["import React from 'react';\nimport { CompoundStylesApiProps, factory, Factory, rem, useProps } from '../../core';\nimport { ModalBaseContent, ModalBaseContentProps, NativeScrollArea } from '../ModalBase';\nimport { useModalContext } from './Modal.context';\nimport classes from './Modal.module.css';\n\nexport type ModalContentStylesNames = 'content' | 'inner';\n\nexport interface ModalContentProps\n  extends ModalBaseContentProps,\n    CompoundStylesApiProps<ModalContentFactory> {}\n\nexport type ModalContentFactory = Factory<{\n  props: ModalContentProps;\n  ref: HTMLDivElement;\n  stylesNames: ModalContentStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<ModalContentProps> = {};\n\nexport const ModalContent = factory<ModalContentFactory>((_props, ref) => {\n  const props = useProps('ModalContent', defaultProps, _props);\n  const { classNames, className, style, styles, vars, children, ...others } = props;\n\n  const ctx = useModalContext();\n  const Scroll: React.FC<any> = ctx.scrollAreaComponent || NativeScrollArea;\n\n  return (\n    <ModalBaseContent\n      {...ctx.getStyles('content', { className, style, styles, classNames })}\n      innerProps={ctx.getStyles('inner', { className, style, styles, classNames })}\n      data-full-screen={ctx.fullScreen || undefined}\n      data-modal-content\n      ref={ref}\n      {...others}\n    >\n      <Scroll\n        style={{\n          maxHeight: ctx.fullScreen ? '100dvh' : `calc(100dvh - (${rem(ctx.yOffset)} * 2))`,\n        }}\n      >\n        {children}\n      </Scroll>\n    </ModalBaseContent>\n  );\n});\n\nModalContent.classes = classes;\nModalContent.displayName = '@mantine/core/ModalContent';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 7743, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7748, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Modal/ModalHeader.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ModalHeader = registerClientReference(\n    function() { throw new Error(\"Attempted to call ModalHeader() from the server but ModalHeader is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Modal/ModalHeader.mjs\",\n    \"ModalHeader\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,cAAc,2RACvB;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,6EACA"}},
    {"offset": {"line": 7757, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7762, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Modal/ModalHeader.tsx"],"sourcesContent":["import React from 'react';\nimport { CompoundStylesApiProps, factory, Factory, useProps } from '../../core';\nimport { ModalBaseHeader, ModalBaseHeaderProps } from '../ModalBase';\nimport { useModalContext } from './Modal.context';\nimport classes from './Modal.module.css';\n\nexport type ModalHeaderStylesNames = 'header';\n\nexport interface ModalHeaderProps\n  extends ModalBaseHeaderProps,\n    CompoundStylesApiProps<ModalHeaderFactory> {}\n\nexport type ModalHeaderFactory = Factory<{\n  props: ModalHeaderProps;\n  ref: HTMLElement;\n  stylesNames: ModalHeaderStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<ModalHeaderProps> = {};\n\nexport const ModalHeader = factory<ModalHeaderFactory>((_props, ref) => {\n  const props = useProps('ModalHeader', defaultProps, _props);\n  const { classNames, className, style, styles, vars, ...others } = props;\n\n  const ctx = useModalContext();\n\n  return (\n    <ModalBaseHeader\n      ref={ref}\n      {...ctx.getStyles('header', { classNames, style, styles, className })}\n      {...others}\n    />\n  );\n});\n\nModalHeader.classes = classes;\nModalHeader.displayName = '@mantine/core/ModalHeader';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 7767, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7772, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Modal/ModalOverlay.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ModalOverlay = registerClientReference(\n    function() { throw new Error(\"Attempted to call ModalOverlay() from the server but ModalOverlay is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Modal/ModalOverlay.mjs\",\n    \"ModalOverlay\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,eAAe,2RACxB;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,8EACA"}},
    {"offset": {"line": 7781, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7786, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Modal/ModalOverlay.tsx"],"sourcesContent":["import React from 'react';\nimport { CompoundStylesApiProps, factory, Factory, useProps } from '../../core';\nimport { ModalBaseOverlay, ModalBaseOverlayProps } from '../ModalBase';\nimport { useModalContext } from './Modal.context';\nimport classes from './Modal.module.css';\n\nexport type ModalOverlayStylesNames = 'overlay';\n\nexport interface ModalOverlayProps\n  extends ModalBaseOverlayProps,\n    CompoundStylesApiProps<ModalOverlayFactory> {}\n\nexport type ModalOverlayFactory = Factory<{\n  props: ModalOverlayProps;\n  ref: HTMLDivElement;\n  stylesNames: ModalOverlayStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<ModalOverlayProps> = {};\n\nexport const ModalOverlay = factory<ModalOverlayFactory>((_props, ref) => {\n  const props = useProps('ModalOverlay', defaultProps, _props);\n  const { classNames, className, style, styles, vars, ...others } = props;\n\n  const ctx = useModalContext();\n\n  return (\n    <ModalBaseOverlay\n      ref={ref}\n      {...ctx.getStyles('overlay', { classNames, style, styles, className })}\n      {...others}\n    />\n  );\n});\n\nModalOverlay.classes = classes;\nModalOverlay.displayName = '@mantine/core/ModalOverlay';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 7791, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7796, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Modal/ModalTitle.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ModalTitle = registerClientReference(\n    function() { throw new Error(\"Attempted to call ModalTitle() from the server but ModalTitle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Modal/ModalTitle.mjs\",\n    \"ModalTitle\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,aAAa,2RACtB;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,4EACA"}},
    {"offset": {"line": 7805, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7810, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Modal/ModalTitle.tsx"],"sourcesContent":["import React from 'react';\nimport { CompoundStylesApiProps, factory, Factory, useProps } from '../../core';\nimport { ModalBaseTitle, ModalBaseTitleProps } from '../ModalBase';\nimport { useModalContext } from './Modal.context';\nimport classes from './Modal.module.css';\n\nexport type ModalTitleStylesNames = 'title';\n\nexport interface ModalTitleProps\n  extends ModalBaseTitleProps,\n    CompoundStylesApiProps<ModalTitleFactory> {}\n\nexport type ModalTitleFactory = Factory<{\n  props: ModalTitleProps;\n  ref: HTMLHeadingElement;\n  stylesNames: ModalTitleStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<ModalTitleProps> = {};\n\nexport const ModalTitle = factory<ModalTitleFactory>((_props, ref) => {\n  const props = useProps('ModalTitle', defaultProps, _props);\n  const { classNames, className, style, styles, vars, ...others } = props;\n\n  const ctx = useModalContext();\n\n  return (\n    <ModalBaseTitle\n      ref={ref}\n      {...ctx.getStyles('title', { classNames, style, styles, className })}\n      {...others}\n    />\n  );\n});\n\nModalTitle.classes = classes;\nModalTitle.displayName = '@mantine/core/ModalTitle';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 7815, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7820, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/MultiSelect/MultiSelect.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const MultiSelect = registerClientReference(\n    function() { throw new Error(\"Attempted to call MultiSelect() from the server but MultiSelect is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/MultiSelect/MultiSelect.mjs\",\n    \"MultiSelect\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,cAAc,2RACvB;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,mFACA"}},
    {"offset": {"line": 7829, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7834, "column": 0}, "map": {"version":3,"sources":["../../../src/components/MultiSelect/MultiSelect.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useId, useUncontrolled } from '@mantine/hooks';\nimport {\n  BoxProps,\n  ElementProps,\n  extractStyleProps,\n  factory,\n  Factory,\n  StylesApiProps,\n  useProps,\n  useResolvedStylesApi,\n  useStyles,\n} from '../../core';\nimport { __CloseButtonProps } from '../CloseButton';\nimport {\n  Combobox,\n  ComboboxItem,\n  ComboboxLikeProps,\n  ComboboxLikeRenderOptionInput,\n  ComboboxLikeStylesNames,\n  getOptionsLockup,\n  getParsedComboboxData,\n  OptionsDropdown,\n  useCombobox,\n} from '../Combobox';\nimport { __BaseInputProps, __InputStylesNames } from '../Input';\nimport { InputBase } from '../InputBase';\nimport { Pill } from '../Pill';\nimport { PillsInput } from '../PillsInput';\nimport { ScrollAreaProps } from '../ScrollArea';\nimport { filterPickedValues } from './filter-picked-values';\n\nexport type MultiSelectStylesNames =\n  | __InputStylesNames\n  | ComboboxLikeStylesNames\n  | 'pill'\n  | 'pillsList'\n  | 'inputField';\n\nexport interface MultiSelectProps\n  extends BoxProps,\n    __BaseInputProps,\n    ComboboxLikeProps,\n    StylesApiProps<MultiSelectFactory>,\n    ElementProps<'input', 'size' | 'value' | 'defaultValue' | 'onChange'> {\n  /** Controlled component value */\n  value?: string[];\n\n  /** Default value for uncontrolled component */\n  defaultValue?: string[];\n\n  /** Called whe value changes */\n  onChange?: (value: string[]) => void;\n\n  /** Called with `value` of the removed item */\n  onRemove?: (value: string) => void;\n\n  /** Called when the clear button is clicked */\n  onClear?: () => void;\n\n  /** Controlled search value */\n  searchValue?: string;\n\n  /** Default search value */\n  defaultSearchValue?: string;\n\n  /** Called when search changes */\n  onSearchChange?: (value: string) => void;\n\n  /** Maximum number of values, `Infinity` by default */\n  maxValues?: number;\n\n  /** Determines whether the select should be searchable, `false` by default */\n  searchable?: boolean;\n\n  /** Message displayed when no option matched current search query, only applicable when `searchable` prop is set */\n  nothingFoundMessage?: React.ReactNode;\n\n  /** Determines whether check icon should be displayed near the selected option label, `true` by default */\n  withCheckIcon?: boolean;\n\n  /** Position of the check icon relative to the option label, `'left'` by default */\n  checkIconPosition?: 'left' | 'right';\n\n  /** Determines whether picked options should be removed from the options list, `false` by default */\n  hidePickedOptions?: boolean;\n\n  /** Determines whether the clear button should be displayed in the right section when the component has value, `false` by default */\n  clearable?: boolean;\n\n  /** Props passed down to the clear button */\n  clearButtonProps?: __CloseButtonProps & ElementProps<'button'>;\n\n  /** Props passed down to the hidden input */\n  hiddenInputProps?: Omit<React.ComponentPropsWithoutRef<'input'>, 'value'>;\n\n  /** Divider used to separate values in the hidden input `value` attribute, `','` by default */\n  hiddenInputValuesDivider?: string;\n\n  /** A function to render content of the option, replaces the default content of the option */\n  renderOption?: (item: ComboboxLikeRenderOptionInput<ComboboxItem>) => React.ReactNode;\n\n  /** Props passed down to the underlying `ScrollArea` component in the dropdown */\n  scrollAreaProps?: ScrollAreaProps;\n}\n\nexport type MultiSelectFactory = Factory<{\n  props: MultiSelectProps;\n  ref: HTMLInputElement;\n  stylesNames: MultiSelectStylesNames;\n}>;\n\nconst defaultProps: Partial<MultiSelectProps> = {\n  maxValues: Infinity,\n  withCheckIcon: true,\n  checkIconPosition: 'left',\n  hiddenInputValuesDivider: ',',\n};\n\nexport const MultiSelect = factory<MultiSelectFactory>((_props, ref) => {\n  const props = useProps('MultiSelect', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    size,\n    value,\n    defaultValue,\n    onChange,\n    onKeyDown,\n    variant,\n    data,\n    dropdownOpened,\n    defaultDropdownOpened,\n    onDropdownOpen,\n    onDropdownClose,\n    selectFirstOptionOnChange,\n    onOptionSubmit,\n    comboboxProps,\n    filter,\n    limit,\n    withScrollArea,\n    maxDropdownHeight,\n    searchValue,\n    defaultSearchValue,\n    onSearchChange,\n    readOnly,\n    disabled,\n    onFocus,\n    onBlur,\n    onPaste,\n    radius,\n    rightSection,\n    rightSectionWidth,\n    rightSectionPointerEvents,\n    rightSectionProps,\n    leftSection,\n    leftSectionWidth,\n    leftSectionPointerEvents,\n    leftSectionProps,\n    inputContainer,\n    inputWrapperOrder,\n    withAsterisk,\n    labelProps,\n    descriptionProps,\n    errorProps,\n    wrapperProps,\n    description,\n    label,\n    error,\n    maxValues,\n    searchable,\n    nothingFoundMessage,\n    withCheckIcon,\n    checkIconPosition,\n    hidePickedOptions,\n    withErrorStyles,\n    name,\n    form,\n    id,\n    clearable,\n    clearButtonProps,\n    hiddenInputProps,\n    placeholder,\n    hiddenInputValuesDivider,\n    required,\n    mod,\n    renderOption,\n    onRemove,\n    onClear,\n    scrollAreaProps,\n    ...others\n  } = props;\n\n  const _id = useId(id);\n  const parsedData = getParsedComboboxData(data);\n  const optionsLockup = getOptionsLockup(parsedData);\n\n  const combobox = useCombobox({\n    opened: dropdownOpened,\n    defaultOpened: defaultDropdownOpened,\n    onDropdownOpen,\n    onDropdownClose: () => {\n      onDropdownClose?.();\n      combobox.resetSelectedOption();\n    },\n  });\n\n  const {\n    styleProps,\n    rest: { type, autoComplete, ...rest },\n  } = extractStyleProps(others);\n\n  const [_value, setValue] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: [],\n    onChange,\n  });\n\n  const [_searchValue, setSearchValue] = useUncontrolled({\n    value: searchValue,\n    defaultValue: defaultSearchValue,\n    finalValue: '',\n    onChange: onSearchChange,\n  });\n\n  const getStyles = useStyles<MultiSelectFactory>({\n    name: 'MultiSelect',\n    classes: {} as any,\n    props,\n    classNames,\n    styles,\n    unstyled,\n  });\n\n  const { resolvedClassNames, resolvedStyles } = useResolvedStylesApi<MultiSelectFactory>({\n    props,\n    styles,\n    classNames,\n  });\n\n  const handleInputKeydown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    onKeyDown?.(event);\n\n    if (event.key === ' ' && !searchable) {\n      event.preventDefault();\n      combobox.toggleDropdown();\n    }\n\n    if (event.key === 'Backspace' && _searchValue.length === 0 && _value.length > 0) {\n      onRemove?.(_value[_value.length - 1]);\n      setValue(_value.slice(0, _value.length - 1));\n    }\n  };\n\n  const values = _value.map((item, index) => (\n    <Pill\n      key={`${item}-${index}`}\n      withRemoveButton={!readOnly && !optionsLockup[item]?.disabled}\n      onRemove={() => {\n        setValue(_value.filter((i) => item !== i));\n        onRemove?.(item);\n      }}\n      unstyled={unstyled}\n      disabled={disabled}\n      {...getStyles('pill')}\n    >\n      {optionsLockup[item]?.label || item}\n    </Pill>\n  ));\n\n  useEffect(() => {\n    if (selectFirstOptionOnChange) {\n      combobox.selectFirstOption();\n    }\n  }, [selectFirstOptionOnChange, _value]);\n\n  const clearButton = clearable && _value.length > 0 && !disabled && !readOnly && (\n    <Combobox.ClearButton\n      size={size as string}\n      {...clearButtonProps}\n      onClear={() => {\n        onClear?.();\n        setValue([]);\n        setSearchValue('');\n      }}\n    />\n  );\n\n  const filteredData = filterPickedValues({ data: parsedData, value: _value });\n\n  return (\n    <>\n      <Combobox\n        store={combobox}\n        classNames={resolvedClassNames}\n        styles={resolvedStyles}\n        unstyled={unstyled}\n        size={size}\n        readOnly={readOnly}\n        __staticSelector=\"MultiSelect\"\n        onOptionSubmit={(val) => {\n          onOptionSubmit?.(val);\n          setSearchValue('');\n          combobox.updateSelectedOptionIndex('selected');\n\n          if (_value.includes(optionsLockup[val].value)) {\n            setValue(_value.filter((v) => v !== optionsLockup[val].value));\n            onRemove?.(optionsLockup[val].value);\n          } else if (_value.length < maxValues!) {\n            setValue([..._value, optionsLockup[val].value]);\n          }\n        }}\n        {...comboboxProps}\n      >\n        <Combobox.DropdownTarget>\n          <PillsInput\n            {...styleProps}\n            __staticSelector=\"MultiSelect\"\n            classNames={resolvedClassNames}\n            styles={resolvedStyles}\n            unstyled={unstyled}\n            size={size}\n            className={className}\n            style={style}\n            variant={variant}\n            disabled={disabled}\n            radius={radius}\n            rightSection={\n              rightSection ||\n              clearButton || <Combobox.Chevron size={size} error={error} unstyled={unstyled} />\n            }\n            rightSectionPointerEvents={rightSectionPointerEvents || (clearButton ? 'all' : 'none')}\n            rightSectionWidth={rightSectionWidth}\n            rightSectionProps={rightSectionProps}\n            leftSection={leftSection}\n            leftSectionWidth={leftSectionWidth}\n            leftSectionPointerEvents={leftSectionPointerEvents}\n            leftSectionProps={leftSectionProps}\n            inputContainer={inputContainer}\n            inputWrapperOrder={inputWrapperOrder}\n            withAsterisk={withAsterisk}\n            labelProps={labelProps}\n            descriptionProps={descriptionProps}\n            errorProps={errorProps}\n            wrapperProps={wrapperProps}\n            description={description}\n            label={label}\n            error={error}\n            multiline\n            withErrorStyles={withErrorStyles}\n            __stylesApiProps={{\n              ...props,\n              rightSectionPointerEvents:\n                rightSectionPointerEvents || (clearButton ? 'all' : 'none'),\n              multiline: true,\n            }}\n            pointer={!searchable}\n            onClick={() => (searchable ? combobox.openDropdown() : combobox.toggleDropdown())}\n            data-expanded={combobox.dropdownOpened || undefined}\n            id={_id}\n            required={required}\n            mod={mod}\n          >\n            <Pill.Group disabled={disabled} unstyled={unstyled} {...getStyles('pillsList')}>\n              {values}\n              <Combobox.EventsTarget autoComplete={autoComplete}>\n                <PillsInput.Field\n                  {...rest}\n                  ref={ref}\n                  id={_id}\n                  placeholder={placeholder}\n                  type={!searchable && !placeholder ? 'hidden' : 'visible'}\n                  {...getStyles('inputField')}\n                  unstyled={unstyled}\n                  onFocus={(event) => {\n                    onFocus?.(event);\n                    searchable && combobox.openDropdown();\n                  }}\n                  onBlur={(event) => {\n                    onBlur?.(event);\n                    combobox.closeDropdown();\n                    setSearchValue('');\n                  }}\n                  onKeyDown={handleInputKeydown}\n                  value={_searchValue}\n                  onChange={(event) => {\n                    setSearchValue(event.currentTarget.value);\n                    searchable && combobox.openDropdown();\n                    selectFirstOptionOnChange && combobox.selectFirstOption();\n                  }}\n                  disabled={disabled}\n                  readOnly={readOnly || !searchable}\n                  pointer={!searchable}\n                />\n              </Combobox.EventsTarget>\n            </Pill.Group>\n          </PillsInput>\n        </Combobox.DropdownTarget>\n\n        <OptionsDropdown\n          data={hidePickedOptions ? filteredData : parsedData}\n          hidden={readOnly || disabled}\n          filter={filter}\n          search={_searchValue}\n          limit={limit}\n          hiddenWhenEmpty={\n            !searchable ||\n            !nothingFoundMessage ||\n            (hidePickedOptions && filteredData.length === 0 && _searchValue.trim().length === 0)\n          }\n          withScrollArea={withScrollArea}\n          maxDropdownHeight={maxDropdownHeight}\n          filterOptions={searchable}\n          value={_value}\n          checkIconPosition={checkIconPosition}\n          withCheckIcon={withCheckIcon}\n          nothingFoundMessage={nothingFoundMessage}\n          unstyled={unstyled}\n          labelId={`${_id}-label`}\n          renderOption={renderOption}\n          scrollAreaProps={scrollAreaProps}\n        />\n      </Combobox>\n      <Combobox.HiddenInput\n        name={name}\n        valuesDivider={hiddenInputValuesDivider}\n        value={_value}\n        form={form}\n        disabled={disabled}\n        {...hiddenInputProps}\n      />\n    </>\n  );\n});\n\nMultiSelect.classes = { ...InputBase.classes, ...Combobox.classes };\nMultiSelect.displayName = '@mantine/core/MultiSelect';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 7839, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7844, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/NativeSelect/NativeSelect.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const NativeSelect = registerClientReference(\n    function() { throw new Error(\"Attempted to call NativeSelect() from the server but NativeSelect is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/NativeSelect/NativeSelect.mjs\",\n    \"NativeSelect\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,eAAe,2RACxB;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,qFACA"}},
    {"offset": {"line": 7853, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7858, "column": 0}, "map": {"version":3,"sources":["../../../src/components/NativeSelect/NativeSelect.tsx"],"sourcesContent":["import React from 'react';\nimport { BoxProps, ElementProps, factory, Factory, StylesApiProps, useProps } from '../../core';\nimport { ComboboxChevron, ComboboxData, getParsedComboboxData } from '../Combobox';\nimport { __BaseInputProps, __InputStylesNames } from '../Input';\nimport { InputBase } from '../InputBase';\nimport { NativeSelectOption } from './NativeSelectOption';\n\nexport interface NativeSelectProps\n  extends BoxProps,\n    Omit<__BaseInputProps, 'pointer'>,\n    StylesApiProps<NativeSelectFactory>,\n    ElementProps<'select', 'size'> {\n  /** Data used to render options, can be replaced with `children` */\n  data?: ComboboxData;\n}\n\nexport type NativeSelectFactory = Factory<{\n  props: NativeSelectProps;\n  ref: HTMLSelectElement;\n  stylesNames: __InputStylesNames;\n}>;\n\nconst defaultProps: Partial<NativeSelectProps> = {\n  rightSectionPointerEvents: 'none',\n};\n\nexport const NativeSelect = factory<NativeSelectFactory>((props, ref) => {\n  const { data, children, size, error, rightSection, unstyled, ...others } = useProps(\n    'NativeSelect',\n    defaultProps,\n    props\n  );\n\n  const options = getParsedComboboxData(data).map((item, index) => (\n    <NativeSelectOption key={index} data={item} />\n  ));\n\n  return (\n    <InputBase\n      component=\"select\"\n      ref={ref}\n      {...others}\n      __staticSelector=\"NativeSelect\"\n      size={size}\n      pointer\n      error={error}\n      unstyled={unstyled}\n      rightSection={\n        rightSection || <ComboboxChevron size={size} error={error} unstyled={unstyled} />\n      }\n    >\n      {children || options}\n    </InputBase>\n  );\n});\n\nNativeSelect.classes = InputBase.classes;\nNativeSelect.displayName = '@mantine/core/NativeSelect';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 7863, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7868, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/NavLink/NavLink.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const NavLink = registerClientReference(\n    function() { throw new Error(\"Attempted to call NavLink() from the server but NavLink is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/NavLink/NavLink.mjs\",\n    \"NavLink\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,UAAU,2RACnB;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,2EACA"}},
    {"offset": {"line": 7877, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7882, "column": 0}, "map": {"version":3,"sources":["../../../src/components/NavLink/NavLink.tsx"],"sourcesContent":["import React from 'react';\nimport { useUncontrolled } from '@mantine/hooks';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  getSpacing,\n  MantineColor,\n  MantineSize,\n  polymorphicFactory,\n  PolymorphicFactory,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { AccordionChevron } from '../Accordion';\nimport { Collapse } from '../Collapse';\nimport { UnstyledButton } from '../UnstyledButton';\nimport classes from './NavLink.module.css';\n\nexport type NavLinkStylesNames =\n  | 'root'\n  | 'section'\n  | 'body'\n  | 'label'\n  | 'description'\n  | 'chevron'\n  | 'collapse'\n  | 'children';\nexport type NavLinkVariant = 'filled' | 'light' | 'subtle';\nexport type NavLinkCssVariables = {\n  root: '--nl-color' | '--nl-bg' | '--nl-hover';\n  children: '--nl-offset';\n};\n\nexport interface NavLinkProps extends BoxProps, StylesApiProps<NavLinkFactory> {\n  /** Main link label */\n  label?: React.ReactNode;\n\n  /** Link description, displayed below the label */\n  description?: React.ReactNode;\n\n  /** Section displayed on the left side of the label */\n  leftSection?: React.ReactNode;\n\n  /** Section displayed on the right side of the label */\n  rightSection?: React.ReactNode;\n\n  /** Determines whether the link should have active styles, `false` by default */\n  active?: boolean;\n\n  /** Key of `theme.colors` of any valid CSS color to control active styles, `theme.primaryColor` by default */\n  color?: MantineColor;\n\n  /** If set, label and description will not wrap to the next line, `false` by default */\n  noWrap?: boolean;\n\n  /** Child `NavLink` components */\n  children?: React.ReactNode;\n\n  /** Controlled nested items collapse state */\n  opened?: boolean;\n\n  /** Uncontrolled nested items collapse initial state */\n  defaultOpened?: boolean;\n\n  /** Called when open state changes */\n  onChange?: (opened: boolean) => void;\n\n  /** If set, right section will not be rotated when collapse is opened, `false` by default */\n  disableRightSectionRotation?: boolean;\n\n  /** Key of `theme.spacing` or any valid CSS value to set collapsed links `padding-left`, `'lg'` by default */\n  childrenOffset?: MantineSize | (string & {}) | number;\n\n  /** If set, disabled styles will be added to the root element, `false` by default */\n  disabled?: boolean;\n\n  /** Called when the link is clicked */\n  onClick?: (event: React.MouseEvent<HTMLAnchorElement>) => void;\n\n  /** Link `onkeydown` event */\n  onKeyDown?: (event: React.KeyboardEvent<HTMLAnchorElement>) => void;\n\n  /** Determines whether button text color with filled variant should depend on `background-color`. If luminosity of the `color` prop is less than `theme.luminosityThreshold`, then `theme.white` will be used for text color, otherwise `theme.black`. Overrides `theme.autoContrast`. */\n  autoContrast?: boolean;\n}\n\nexport type NavLinkFactory = PolymorphicFactory<{\n  props: NavLinkProps;\n  defaultRef: HTMLAnchorElement;\n  defaultComponent: 'a';\n  stylesNames: NavLinkStylesNames;\n  vars: NavLinkCssVariables;\n  variant: NavLinkVariant;\n}>;\n\nconst defaultProps: Partial<NavLinkProps> = {};\n\nconst varsResolver = createVarsResolver<NavLinkFactory>(\n  (theme, { variant, color, childrenOffset, autoContrast }) => {\n    const colors = theme.variantColorResolver({\n      color: color || theme.primaryColor,\n      theme,\n      variant: variant || 'light',\n      autoContrast,\n    });\n\n    return {\n      root: {\n        '--nl-bg': color || variant ? colors.background : undefined,\n        '--nl-hover': color || variant ? colors.hover : undefined,\n        '--nl-color': color || variant ? colors.color : undefined,\n      },\n\n      children: {\n        '--nl-offset': getSpacing(childrenOffset),\n      },\n    };\n  }\n);\n\nexport const NavLink = polymorphicFactory<NavLinkFactory>((_props, ref) => {\n  const props = useProps('NavLink', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    opened,\n    defaultOpened,\n    onChange,\n    children,\n    onClick,\n    active,\n    disabled,\n    leftSection,\n    rightSection,\n    label,\n    description,\n    disableRightSectionRotation,\n    noWrap,\n    childrenOffset,\n    onKeyDown,\n    autoContrast,\n    mod,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<NavLinkFactory>({\n    name: 'NavLink',\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  const [_opened, setOpened] = useUncontrolled({\n    value: opened,\n    defaultValue: defaultOpened,\n    finalValue: false,\n    onChange,\n  });\n\n  const withChildren = !!children;\n\n  const handleClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    onClick?.(event);\n\n    if (withChildren) {\n      event.preventDefault();\n      setOpened(!_opened);\n    }\n  };\n\n  return (\n    <>\n      <UnstyledButton\n        {...getStyles('root')}\n        component=\"a\"\n        ref={ref}\n        onClick={handleClick}\n        onKeyDown={(event) => {\n          onKeyDown?.(event);\n\n          if (event.nativeEvent.code === 'Space' && withChildren) {\n            event.preventDefault();\n            setOpened(!_opened);\n          }\n        }}\n        unstyled={unstyled}\n        mod={[{ disabled, active, expanded: _opened }, mod]}\n        {...others}\n      >\n        {leftSection && (\n          <Box component=\"span\" {...getStyles('section')} mod={{ position: 'left' }}>\n            {leftSection}\n          </Box>\n        )}\n        <Box {...getStyles('body')} mod={{ 'no-wrap': noWrap }}>\n          <Box component=\"span\" {...getStyles('label')}>\n            {label}\n          </Box>\n          <Box component=\"span\" mod={{ active }} {...getStyles('description')}>\n            {description}\n          </Box>\n        </Box>\n        {(withChildren || rightSection) && (\n          <Box\n            {...getStyles('section')}\n            component=\"span\"\n            mod={{ rotate: _opened && !disableRightSectionRotation, position: 'right' }}\n          >\n            {withChildren\n              ? rightSection || <AccordionChevron {...getStyles('chevron')} />\n              : rightSection}\n          </Box>\n        )}\n      </UnstyledButton>\n      <Collapse in={_opened} {...getStyles('collapse')}>\n        <div {...getStyles('children')}>{children}</div>\n      </Collapse>\n    </>\n  );\n});\n\nNavLink.classes = classes;\nNavLink.displayName = '@mantine/core/NavLink';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 7887, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7892, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Notification/Notification.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Notification = registerClientReference(\n    function() { throw new Error(\"Attempted to call Notification() from the server but Notification is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Notification/Notification.mjs\",\n    \"Notification\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,eAAe,2RACxB;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,qFACA"}},
    {"offset": {"line": 7901, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7906, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Notification/Notification.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getRadius,\n  getThemeColor,\n  MantineColor,\n  MantineRadius,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { CloseButton } from '../CloseButton';\nimport { Loader } from '../Loader';\nimport classes from './Notification.module.css';\n\nexport type NotificationStylesNames =\n  | 'root'\n  | 'icon'\n  | 'loader'\n  | 'body'\n  | 'title'\n  | 'description'\n  | 'closeButton';\nexport type NotificationCssVariables = {\n  root: '--notification-radius' | '--notification-color';\n};\n\nexport interface NotificationProps\n  extends BoxProps,\n    StylesApiProps<NotificationFactory>,\n    ElementProps<'div', 'title'> {\n  variant?: string;\n\n  /** Called when close button is clicked */\n  onClose?: () => void;\n\n  /** Controls notification line or icon color, key of `theme.colors` or any valid CSS color, `theme.primaryColor` by default */\n  color?: MantineColor;\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius`, `theme.defaultRadius` by default */\n  radius?: MantineRadius;\n\n  /** Notification icon, replaces color line */\n  icon?: React.ReactNode;\n\n  /** Notification title, displayed before body */\n  title?: React.ReactNode;\n\n  /** Notification body, place main text here */\n  children?: React.ReactNode;\n\n  /** Replaces colored line or icon with Loader component */\n  loading?: boolean;\n\n  /** Determines whether notification should have a border, `false` by default */\n  withBorder?: boolean;\n\n  /** Determines whether close button should be visible, `true` by default */\n  withCloseButton?: boolean;\n\n  /** Props passed down to the close button */\n  closeButtonProps?: Record<string, any>;\n}\n\nexport type NotificationFactory = Factory<{\n  props: NotificationProps;\n  ref: HTMLDivElement;\n  stylesNames: NotificationStylesNames;\n  vars: NotificationCssVariables;\n}>;\n\nconst defaultProps: Partial<NotificationProps> = {\n  withCloseButton: true,\n};\n\nconst varsResolver = createVarsResolver<NotificationFactory>((theme, { radius, color }) => ({\n  root: {\n    '--notification-radius': radius === undefined ? undefined : getRadius(radius),\n    '--notification-color': color ? getThemeColor(color, theme) : undefined,\n  },\n}));\n\nexport const Notification = factory<NotificationFactory>((_props, ref) => {\n  const props = useProps('Notification', defaultProps, _props);\n  const {\n    className,\n    color,\n    radius,\n    loading,\n    withCloseButton,\n    withBorder,\n    title,\n    icon,\n    children,\n    onClose,\n    closeButtonProps,\n    classNames,\n    style,\n    styles,\n    unstyled,\n    variant,\n    vars,\n    mod,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<NotificationFactory>({\n    name: 'Notification',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <Box\n      {...getStyles('root')}\n      mod={[{ 'data-with-icon': !!icon || loading, 'data-with-border': withBorder }, mod]}\n      ref={ref}\n      variant={variant}\n      {...others}\n      role=\"alert\"\n    >\n      {icon && !loading && <div {...getStyles('icon')}>{icon}</div>}\n      {loading && <Loader size={28} color={color} {...getStyles('loader')} />}\n\n      <div {...getStyles('body')}>\n        {title && <div {...getStyles('title')}>{title}</div>}\n\n        <Box {...getStyles('description')} mod={{ 'data-with-title': !!title }}>\n          {children}\n        </Box>\n      </div>\n\n      {withCloseButton && (\n        <CloseButton\n          iconSize={16}\n          color=\"gray\"\n          {...closeButtonProps}\n          unstyled={unstyled}\n          onClick={onClose}\n          {...getStyles('closeButton')}\n        />\n      )}\n    </Box>\n  );\n});\n\nNotification.classes = classes;\nNotification.displayName = '@mantine/core/Notification';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 7911, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7916, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/NumberFormatter/NumberFormatter.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const NumberFormatter = registerClientReference(\n    function() { throw new Error(\"Attempted to call NumberFormatter() from the server but NumberFormatter is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/NumberFormatter/NumberFormatter.mjs\",\n    \"NumberFormatter\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,kBAAkB,2RAC3B;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,2FACA"}},
    {"offset": {"line": 7925, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7930, "column": 0}, "map": {"version":3,"sources":["../../../src/components/NumberFormatter/NumberFormatter.tsx"],"sourcesContent":["import React from 'react';\nimport { NumericFormat } from 'react-number-format';\nimport { ExtendComponent, Factory, MantineThemeComponent, useProps } from '../../core';\n\nexport interface NumberFormatterProps extends React.ComponentPropsWithoutRef<'span'> {\n  /** Value to format */\n  value?: number | string;\n\n  /** Determines whether negative values are allowed, `true` by default */\n  allowNegative?: boolean;\n\n  /** Limits the number of digits that are displayed after the decimal point, by default there is no limit */\n  decimalScale?: number;\n\n  /** Character used as a decimal separator, `'.'` by default */\n  decimalSeparator?: string;\n\n  /** If set, 0s are added after `decimalSeparator` to match given `decimalScale`. `false` by default */\n  fixedDecimalScale?: boolean;\n\n  /** Prefix added before the value */\n  prefix?: string;\n\n  /** Suffix added after the value */\n  suffix?: string;\n\n  /** Defines the thousand grouping style */\n  thousandsGroupStyle?: 'thousand' | 'lakh' | 'wan' | 'none';\n\n  /** A character used to separate thousands, `','` by default */\n  thousandSeparator?: string | boolean;\n}\n\nexport type NumberFormatterFactory = Factory<{\n  props: NumberFormatterProps;\n  ref: HTMLDivElement;\n}>;\n\nconst defaultProps: Partial<NumberFormatterProps> = {};\n\nexport function NumberFormatter(_props: NumberFormatterProps) {\n  const props = useProps('NumberFormatter', defaultProps, _props);\n  const { value, defaultValue, ...others } = props;\n\n  if (value === undefined) {\n    return null;\n  }\n\n  return <NumericFormat displayType=\"text\" value={value} {...others} />;\n}\n\nconst extendNumberFormatter = (c: ExtendComponent<NumberFormatterFactory>): MantineThemeComponent =>\n  c;\n\nNumberFormatter.extend = extendNumberFormatter;\nNumberFormatter.displayName = '@mantine/core/NumberFormatter';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 7935, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7940, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/NumberInput/NumberInput.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const NumberInput = registerClientReference(\n    function() { throw new Error(\"Attempted to call NumberInput() from the server but NumberInput is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/NumberInput/NumberInput.mjs\",\n    \"NumberInput\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,cAAc,2RACvB;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,mFACA"}},
    {"offset": {"line": 7949, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7954, "column": 0}, "map": {"version":3,"sources":["../../../src/components/NumberInput/NumberInput.tsx"],"sourcesContent":["import React, { useRef } from 'react';\nimport cx from 'clsx';\nimport { NumberFormatValues, NumericFormat, OnValueChange } from 'react-number-format';\nimport { assignRef, clamp, useMergedRef, useUncontrolled } from '@mantine/hooks';\nimport {\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getSize,\n  StylesApiProps,\n  useProps,\n  useResolvedStylesApi,\n  useStyles,\n} from '../../core';\nimport { __BaseInputProps, __InputStylesNames, InputVariant } from '../Input';\nimport { InputBase } from '../InputBase';\nimport { UnstyledButton } from '../UnstyledButton';\nimport { NumberInputChevron } from './NumberInputChevron';\nimport classes from './NumberInput.module.css';\n\n// re for -0, -0., -0.0, -0.00, -0.000 ... strings\nconst partialNegativeNumberPattern = /^-0(\\.0*)?$/;\n\n// re for 01, 006, 0002 ... and negative counterparts\nconst leadingZerosPattern = /^-?0\\d+$/;\n\nexport interface NumberInputHandlers {\n  increment: () => void;\n  decrement: () => void;\n}\n\nfunction isValidNumber(value: number | string | undefined): value is number {\n  return (\n    (typeof value === 'number' ? value < Number.MAX_SAFE_INTEGER : !Number.isNaN(Number(value))) &&\n    !Number.isNaN(value)\n  );\n}\n\nfunction isInRange(value: number | undefined, min: number | undefined, max: number | undefined) {\n  if (value === undefined) {\n    return true;\n  }\n\n  const minValid = min === undefined || value >= min;\n  const maxValid = max === undefined || value <= max;\n\n  return minValid && maxValid;\n}\n\nexport type NumberInputStylesNames = 'controls' | 'control' | __InputStylesNames;\nexport type NumberInputCssVariables = {\n  controls: '--ni-chevron-size';\n};\n\nexport interface NumberInputProps\n  extends BoxProps,\n    __BaseInputProps,\n    StylesApiProps<NumberInputFactory>,\n    ElementProps<'input', 'size' | 'type' | 'onChange'> {\n  /** Controlled component value */\n  value?: number | string;\n\n  /** Uncontrolled component default value */\n  defaultValue?: number | string;\n\n  /** Called when value changes */\n  onChange?: (value: number | string) => void;\n\n  /** Called when value changes with `react-number-format` payload */\n  onValueChange?: OnValueChange;\n\n  /** Determines whether leading zeros are allowed. If not set, leading zeros are removed when the input is blurred. `false` by default */\n  allowLeadingZeros?: boolean;\n\n  /** Determines whether negative values are allowed, `true` by default */\n  allowNegative?: boolean;\n\n  /** Characters which when pressed result in a decimal separator, `['.']` by default */\n  allowedDecimalSeparators?: string[];\n\n  /** Limits the number of digits that can be entered after the decimal point */\n  decimalScale?: number;\n\n  /** Character used as a decimal separator, `'.'` by default */\n  decimalSeparator?: string;\n\n  /** If set, 0s are added after `decimalSeparator` to match given `decimalScale`. `false` by default */\n  fixedDecimalScale?: boolean;\n\n  /** Prefix added before the input value */\n  prefix?: string;\n\n  /** Suffix added after the input value */\n  suffix?: string;\n\n  /** Defines the thousand grouping style. */\n  thousandsGroupStyle?: 'thousand' | 'lakh' | 'wan' | 'none';\n\n  /** A function to validate the input value. If this function returns `false`, the `onChange` will not be called and the input value will not change. */\n  isAllowed?: (values: NumberFormatValues) => boolean;\n\n  /** If value is passed as string representation of numbers (unformatted) and number is used in any format props like in prefix or suffix in numeric format and format prop in pattern format then this should be passed as `true`. `false` by default. */\n  valueIsNumericString?: boolean;\n\n  /** Controls input `type` attribute, `'text'` by default */\n  type?: 'text' | 'tel' | 'password';\n\n  /** A character used to separate thousands */\n  thousandSeparator?: string | boolean;\n\n  /** Minimum possible value */\n  min?: number;\n\n  /** Maximum possible value */\n  max?: number;\n\n  /** Number by which value will be incremented/decremented with up/down controls and keyboard arrows, `1` by default */\n  step?: number;\n\n  /** Determines whether the up/down controls should be hidden, `false` by default */\n  hideControls?: boolean;\n\n  /** Controls how value is clamped, `strict` – user is not allowed to enter values that are not in `[min, max]` range, `blur` – user is allowed to enter any values, but the value is clamped when the input loses focus (default behavior), `none` – lifts all restrictions, `[min, max]` range is applied only for controls and up/down keys */\n  clampBehavior?: 'strict' | 'blur' | 'none';\n\n  /** Determines whether decimal values are allowed, `true` by default */\n  allowDecimal?: boolean;\n\n  /** Increment/decrement handlers */\n  handlersRef?: React.ForwardedRef<NumberInputHandlers | undefined>;\n\n  /** Value set to the input when increment/decrement buttons are clicked or up/down arrows pressed if the input is empty, `0` by default */\n  startValue?: number;\n\n  /** Delay before stepping the value. Can be a number of milliseconds or a function that receives the current step count and returns the delay in milliseconds. */\n  stepHoldInterval?: number | ((stepCount: number) => number);\n\n  /** Initial delay in milliseconds before stepping the value. */\n  stepHoldDelay?: number;\n\n  /** Determines whether up/down keyboard events should be handled to increment/decrement value, `true` by default */\n  withKeyboardEvents?: boolean;\n}\n\nexport type NumberInputFactory = Factory<{\n  props: NumberInputProps;\n  ref: HTMLDivElement;\n  stylesNames: NumberInputStylesNames;\n  vars: NumberInputCssVariables;\n  variant: InputVariant;\n}>;\n\nconst defaultProps: Partial<NumberInputProps> = {\n  step: 1,\n  clampBehavior: 'blur',\n  allowDecimal: true,\n  allowNegative: true,\n  withKeyboardEvents: true,\n  startValue: 0,\n};\n\nconst varsResolver = createVarsResolver<NumberInputFactory>((_, { size }) => ({\n  controls: {\n    '--ni-chevron-size': getSize(size, 'ni-chevron-size'),\n  },\n}));\n\nexport const NumberInput = factory<NumberInputFactory>((_props, ref) => {\n  const props = useProps('NumberInput', defaultProps, _props);\n  const {\n    className,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    onChange,\n    onValueChange,\n    value,\n    defaultValue,\n    max,\n    min,\n    step,\n    hideControls,\n    rightSection,\n    isAllowed,\n    clampBehavior,\n    onBlur,\n    allowDecimal,\n    decimalScale,\n    onKeyDown,\n    handlersRef,\n    startValue,\n    disabled,\n    rightSectionPointerEvents,\n    allowNegative,\n    readOnly,\n    size,\n    rightSectionWidth,\n    stepHoldInterval,\n    stepHoldDelay,\n    allowLeadingZeros,\n    withKeyboardEvents,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<NumberInputFactory>({\n    name: 'NumberInput',\n    classes,\n    props,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  const { resolvedClassNames, resolvedStyles } = useResolvedStylesApi<NumberInputFactory>({\n    classNames,\n    styles,\n    props,\n  });\n\n  const [_value, setValue] = useUncontrolled({\n    value,\n    defaultValue,\n    onChange,\n  });\n\n  const shouldUseStepInterval = stepHoldDelay !== undefined && stepHoldInterval !== undefined;\n  const inputRef = useRef<HTMLInputElement>(null);\n  const onStepTimeoutRef = useRef<number | null>(null);\n  const stepCountRef = useRef<number>(0);\n\n  const handleValueChange: OnValueChange = (payload, event) => {\n    if (event.source === 'event') {\n      setValue(\n        isValidNumber(payload.floatValue) &&\n          !partialNegativeNumberPattern.test(payload.value) &&\n          !(allowLeadingZeros ? leadingZerosPattern.test(payload.value) : false)\n          ? payload.floatValue\n          : payload.value\n      );\n    }\n    onValueChange?.(payload, event);\n  };\n\n  const getDecimalPlaces = (inputValue: number | string): number => {\n    const match = String(inputValue).match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\n    if (!match) {\n      return 0;\n    }\n    return Math.max(0, (match[1] ? match[1].length : 0) - (match[2] ? +match[2] : 0));\n  };\n\n  const adjustCursor = (position?: number) => {\n    if (inputRef.current && position) {\n      inputRef.current.setSelectionRange(position, position);\n    }\n  };\n\n  const incrementRef = useRef<() => void>();\n  incrementRef.current = () => {\n    let val: number;\n    const currentValuePrecision = getDecimalPlaces(_value);\n    const stepPrecision = getDecimalPlaces(step!);\n    const maxPrecision = Math.max(currentValuePrecision, stepPrecision);\n    const factor = 10 ** maxPrecision;\n\n    if (typeof _value !== 'number' || Number.isNaN(_value)) {\n      val = clamp(startValue!, min, max);\n    } else if (max !== undefined) {\n      const incrementedValue = (Math.round(_value * factor) + Math.round(step! * factor)) / factor;\n      val = incrementedValue <= max ? incrementedValue : max;\n    } else {\n      val = (Math.round(_value * factor) + Math.round(step! * factor)) / factor;\n    }\n\n    const formattedValue = val.toFixed(maxPrecision);\n    setValue(parseFloat(formattedValue));\n    onValueChange?.(\n      { floatValue: parseFloat(formattedValue), formattedValue, value: formattedValue },\n      { source: 'increment' as any }\n    );\n    setTimeout(() => adjustCursor(inputRef.current?.value.length), 0);\n  };\n\n  const decrementRef = useRef<() => void>();\n  decrementRef.current = () => {\n    let val: number;\n    const currentValuePrecision = getDecimalPlaces(_value);\n    const stepPrecision = getDecimalPlaces(step!);\n    const maxPrecision = Math.max(currentValuePrecision, stepPrecision);\n    const factor = 10 ** maxPrecision;\n\n    if (typeof _value !== 'number' || Number.isNaN(_value)) {\n      val = clamp(startValue!, min, max);\n    } else {\n      const decrementedValue = (Math.round(_value * factor) - Math.round(step! * factor)) / factor;\n      val = min !== undefined && decrementedValue < min ? min : decrementedValue;\n    }\n\n    const formattedValue = val.toFixed(maxPrecision);\n    setValue(parseFloat(formattedValue));\n    onValueChange?.(\n      { floatValue: parseFloat(formattedValue), formattedValue, value: formattedValue },\n      { source: 'decrement' as any }\n    );\n    setTimeout(() => adjustCursor(inputRef.current?.value.length), 0);\n  };\n\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    onKeyDown?.(event);\n\n    if (readOnly || !withKeyboardEvents) {\n      return;\n    }\n\n    if (event.key === 'ArrowUp') {\n      event.preventDefault();\n      incrementRef.current!();\n    }\n\n    if (event.key === 'ArrowDown') {\n      event.preventDefault();\n      decrementRef.current!();\n    }\n  };\n\n  assignRef(handlersRef, { increment: incrementRef.current, decrement: decrementRef.current });\n\n  const onStepHandleChange = (isIncrement: boolean) => {\n    if (isIncrement) {\n      incrementRef.current!();\n    } else {\n      decrementRef.current!();\n    }\n    stepCountRef.current += 1;\n  };\n\n  const onStepLoop = (isIncrement: boolean) => {\n    onStepHandleChange(isIncrement);\n\n    if (shouldUseStepInterval) {\n      const interval =\n        typeof stepHoldInterval === 'number'\n          ? stepHoldInterval\n          : stepHoldInterval(stepCountRef.current);\n      onStepTimeoutRef.current = window.setTimeout(() => onStepLoop(isIncrement), interval);\n    }\n  };\n\n  const onStep = (\n    event: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>,\n    isIncrement: boolean\n  ) => {\n    event.preventDefault();\n    inputRef.current?.focus();\n    onStepHandleChange(isIncrement);\n    if (shouldUseStepInterval) {\n      onStepTimeoutRef.current = window.setTimeout(() => onStepLoop(isIncrement), stepHoldDelay);\n    }\n  };\n\n  const onStepDone = () => {\n    if (onStepTimeoutRef.current) {\n      window.clearTimeout(onStepTimeoutRef.current);\n    }\n    onStepTimeoutRef.current = null;\n    stepCountRef.current = 0;\n  };\n\n  const controls = (\n    <div {...getStyles('controls')}>\n      <UnstyledButton\n        {...getStyles('control')}\n        tabIndex={-1}\n        aria-hidden\n        disabled={disabled || (typeof _value === 'number' && max !== undefined && _value >= max)}\n        mod={{ direction: 'up' }}\n        onMouseDown={(event) => event.preventDefault()}\n        onPointerDown={(event) => {\n          onStep(event, true);\n        }}\n        onPointerUp={onStepDone}\n        onPointerLeave={onStepDone}\n      >\n        <NumberInputChevron direction=\"up\" />\n      </UnstyledButton>\n      <UnstyledButton\n        {...getStyles('control')}\n        tabIndex={-1}\n        aria-hidden\n        disabled={disabled || (typeof _value === 'number' && min !== undefined && _value <= min)}\n        mod={{ direction: 'down' }}\n        onMouseDown={(event) => event.preventDefault()}\n        onPointerDown={(event) => {\n          onStep(event, false);\n        }}\n        onPointerUp={onStepDone}\n        onPointerLeave={onStepDone}\n      >\n        <NumberInputChevron direction=\"down\" />\n      </UnstyledButton>\n    </div>\n  );\n\n  return (\n    <InputBase\n      component={NumericFormat}\n      allowNegative={allowNegative}\n      className={cx(classes.root, className)}\n      size={size}\n      {...others}\n      readOnly={readOnly}\n      disabled={disabled}\n      value={_value}\n      getInputRef={useMergedRef(ref, inputRef)}\n      onValueChange={handleValueChange}\n      rightSection={hideControls || readOnly ? rightSection : rightSection || controls}\n      classNames={resolvedClassNames}\n      styles={resolvedStyles}\n      unstyled={unstyled}\n      __staticSelector=\"NumberInput\"\n      decimalScale={allowDecimal ? decimalScale : 0}\n      onKeyDown={handleKeyDown}\n      rightSectionPointerEvents={rightSectionPointerEvents ?? (disabled ? 'none' : undefined)}\n      rightSectionWidth={rightSectionWidth ?? `var(--ni-right-section-width-${size || 'sm'})`}\n      allowLeadingZeros={allowLeadingZeros}\n      onBlur={(event) => {\n        onBlur?.(event);\n        if (clampBehavior === 'blur' && typeof _value === 'number') {\n          const clampedValue = clamp(_value, min, max);\n          if (clampedValue !== _value) {\n            setValue(clamp(_value, min, max));\n          }\n        }\n      }}\n      isAllowed={(val) => {\n        if (clampBehavior === 'strict') {\n          if (isAllowed) {\n            return isAllowed(val) && isInRange(val.floatValue, min, max);\n          }\n\n          return isInRange(val.floatValue, min, max);\n        }\n\n        return isAllowed ? isAllowed(val) : true;\n      }}\n    />\n  );\n});\n\nNumberInput.classes = { ...InputBase.classes, ...classes };\nNumberInput.displayName = '@mantine/core/NumberInput';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 7959, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7964, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Pagination/Pagination.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Pagination = registerClientReference(\n    function() { throw new Error(\"Attempted to call Pagination() from the server but Pagination is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Pagination/Pagination.mjs\",\n    \"Pagination\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,aAAa,2RACtB;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,iFACA"}},
    {"offset": {"line": 7973, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7978, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Pagination/Pagination.tsx"],"sourcesContent":["import React from 'react';\nimport { factory, Factory, MantineSize, useProps } from '../../core';\nimport { Group } from '../Group/Group';\nimport { PaginationIcon } from './Pagination.icons';\nimport { PaginationControl } from './PaginationControl/PaginationControl';\nimport { PaginationDots } from './PaginationDots/PaginationDots';\nimport {\n  PaginationFirst,\n  PaginationLast,\n  PaginationNext,\n  PaginationPrevious,\n} from './PaginationEdges/PaginationEdges';\nimport { PaginationItems } from './PaginationItems/PaginationItems';\nimport {\n  PaginationRoot,\n  PaginationRootCssVariables,\n  PaginationRootProps,\n  PaginationRootStylesNames,\n} from './PaginationRoot/PaginationRoot';\nimport classes from './Pagination.module.css';\n\nexport type PaginationStylesNames = PaginationRootStylesNames;\nexport type PaginationCssVariables = PaginationRootCssVariables;\n\nexport interface PaginationProps extends PaginationRootProps {\n  /** Determines whether first/last controls should be rendered, false by default */\n  withEdges?: boolean;\n\n  /** Determines whether next/previous controls should be rendered, true by default */\n  withControls?: boolean;\n\n  /** Adds props to next/previous/first/last controls */\n  getControlProps?: (control: 'first' | 'previous' | 'last' | 'next') => Record<string, any>;\n\n  /** Next control icon component */\n  nextIcon?: PaginationIcon;\n\n  /** Previous control icon component */\n  previousIcon?: PaginationIcon;\n\n  /** Last control icon component */\n  lastIcon?: PaginationIcon;\n\n  /** First control icon component */\n  firstIcon?: PaginationIcon;\n\n  /** Dots icon component */\n  dotsIcon?: PaginationIcon;\n\n  /** Key of `theme.spacing`, gap between controls, `8` by default */\n  gap?: MantineSize | (string & {}) | number;\n}\n\nexport type PaginationFactory = Factory<{\n  props: PaginationProps;\n  ref: HTMLDivElement;\n  stylesNames: PaginationStylesNames;\n  vars: PaginationCssVariables;\n  staticComponents: {\n    Root: typeof PaginationRoot;\n    Control: typeof PaginationControl;\n    Dots: typeof PaginationDots;\n    First: typeof PaginationFirst;\n    Last: typeof PaginationLast;\n    Next: typeof PaginationNext;\n    Previous: typeof PaginationPrevious;\n    Items: typeof PaginationItems;\n  };\n}>;\n\nconst defaultProps: Partial<PaginationProps> = {\n  withControls: true,\n  siblings: 1,\n  boundaries: 1,\n  gap: 8,\n};\n\nexport const Pagination = factory<PaginationFactory>((_props, ref) => {\n  const props = useProps('Pagination', defaultProps, _props);\n  const {\n    withEdges,\n    withControls,\n    getControlProps,\n    nextIcon,\n    previousIcon,\n    lastIcon,\n    firstIcon,\n    dotsIcon,\n    total,\n    gap,\n    ...others\n  } = props;\n\n  if (total <= 0) {\n    return null;\n  }\n\n  return (\n    <PaginationRoot ref={ref} total={total} {...others}>\n      <Group gap={gap}>\n        {withEdges && <PaginationFirst icon={firstIcon} {...getControlProps?.('first')} />}\n        {withControls && (\n          <PaginationPrevious icon={previousIcon} {...getControlProps?.('previous')} />\n        )}\n        <PaginationItems dotsIcon={dotsIcon} />\n        {withControls && <PaginationNext icon={nextIcon} {...getControlProps?.('next')} />}\n        {withEdges && <PaginationLast icon={lastIcon} {...getControlProps?.('last')} />}\n      </Group>\n    </PaginationRoot>\n  );\n});\n\nPagination.classes = classes;\nPagination.displayName = '@mantine/core/Pagination';\nPagination.Root = PaginationRoot;\nPagination.Control = PaginationControl;\nPagination.Dots = PaginationDots;\nPagination.First = PaginationFirst;\nPagination.Last = PaginationLast;\nPagination.Next = PaginationNext;\nPagination.Previous = PaginationPrevious;\nPagination.Items = PaginationItems;\n"],"names":[],"mappings":""}},
    {"offset": {"line": 7983, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7988, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Pagination/PaginationControl/PaginationControl.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const PaginationControl = registerClientReference(\n    function() { throw new Error(\"Attempted to call PaginationControl() from the server but PaginationControl is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Pagination/PaginationControl/PaginationControl.mjs\",\n    \"PaginationControl\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,oBAAoB,2RAC7B;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,0GACA"}},
    {"offset": {"line": 7997, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8002, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Pagination/PaginationControl/PaginationControl.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  BoxProps,\n  CompoundStylesApiProps,\n  ElementProps,\n  factory,\n  Factory,\n  useProps,\n} from '../../../core';\nimport { UnstyledButton } from '../../UnstyledButton';\nimport { usePaginationContext } from '../Pagination.context';\nimport classes from '../Pagination.module.css';\n\nexport type PaginationControlStylesNames = 'control';\n\nexport interface PaginationControlProps\n  extends BoxProps,\n    CompoundStylesApiProps<PaginationControlFactory>,\n    ElementProps<'button'> {\n  /** Determines whether control should have active styles */\n  active?: boolean;\n\n  /** Determines whether control should have padding, true by default */\n  withPadding?: boolean;\n}\n\nexport type PaginationControlFactory = Factory<{\n  props: PaginationControlProps;\n  ref: HTMLButtonElement;\n  stylesNames: PaginationControlStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<PaginationControlProps> = {\n  withPadding: true,\n};\n\nexport const PaginationControl = factory<PaginationControlFactory>((_props, ref) => {\n  const props = useProps('PaginationControl', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    vars,\n    active,\n    disabled,\n    withPadding,\n    mod,\n    ...others\n  } = props;\n\n  const ctx = usePaginationContext();\n  const _disabled = disabled || ctx.disabled;\n\n  return (\n    <UnstyledButton\n      ref={ref}\n      disabled={_disabled}\n      mod={[{ active, disabled: _disabled, 'with-padding': withPadding }, mod]}\n      {...ctx.getStyles('control', { className, style, classNames, styles, active: !_disabled })}\n      {...others}\n    />\n  );\n});\n\nPaginationControl.classes = classes;\nPaginationControl.displayName = '@mantine/core/PaginationControl';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 8007, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8012, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Pagination/PaginationDots/PaginationDots.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const PaginationDots = registerClientReference(\n    function() { throw new Error(\"Attempted to call PaginationDots() from the server but PaginationDots is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Pagination/PaginationDots/PaginationDots.mjs\",\n    \"PaginationDots\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,iBAAiB,2RAC1B;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,oGACA"}},
    {"offset": {"line": 8021, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8026, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Pagination/PaginationDots/PaginationDots.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  CompoundStylesApiProps,\n  ElementProps,\n  factory,\n  Factory,\n  useProps,\n} from '../../../core';\nimport { usePaginationContext } from '../Pagination.context';\nimport { PaginationDotsIcon, PaginationIconProps } from '../Pagination.icons';\nimport classes from '../Pagination.module.css';\n\nexport type PaginationDotsStylesNames = 'dots';\n\nexport interface PaginationDotsProps\n  extends BoxProps,\n    CompoundStylesApiProps<PaginationDotsFactory>,\n    ElementProps<'div'> {\n  /** Custom dots icon component, must accept svg element props and size prop */\n  icon?: React.FC<PaginationIconProps>;\n}\n\nexport type PaginationDotsFactory = Factory<{\n  props: PaginationDotsProps;\n  ref: HTMLDivElement;\n  stylesNames: PaginationDotsStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<PaginationDotsProps> = {\n  icon: PaginationDotsIcon,\n};\n\nexport const PaginationDots = factory<PaginationDotsFactory>((_props, ref) => {\n  const props = useProps('PaginationDots', defaultProps, _props);\n  const { classNames, className, style, styles, vars, icon, ...others } = props;\n  const ctx = usePaginationContext();\n  const Icon = icon!;\n\n  return (\n    <Box ref={ref} {...ctx.getStyles('dots', { className, style, styles, classNames })} {...others}>\n      <Icon\n        style={{\n          width: 'calc(var(--pagination-control-size) / 1.8)',\n          height: 'calc(var(--pagination-control-size) / 1.8)',\n        }}\n      />\n    </Box>\n  );\n});\n\nPaginationDots.classes = classes;\nPaginationDots.displayName = '@mantine/core/PaginationDots';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 8031, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8036, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Pagination/PaginationEdges/PaginationEdges.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const PaginationFirst = registerClientReference(\n    function() { throw new Error(\"Attempted to call PaginationFirst() from the server but PaginationFirst is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Pagination/PaginationEdges/PaginationEdges.mjs\",\n    \"PaginationFirst\",\n);\nexport const PaginationLast = registerClientReference(\n    function() { throw new Error(\"Attempted to call PaginationLast() from the server but PaginationLast is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Pagination/PaginationEdges/PaginationEdges.mjs\",\n    \"PaginationLast\",\n);\nexport const PaginationNext = registerClientReference(\n    function() { throw new Error(\"Attempted to call PaginationNext() from the server but PaginationNext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Pagination/PaginationEdges/PaginationEdges.mjs\",\n    \"PaginationNext\",\n);\nexport const PaginationPrevious = registerClientReference(\n    function() { throw new Error(\"Attempted to call PaginationPrevious() from the server but PaginationPrevious is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Pagination/PaginationEdges/PaginationEdges.mjs\",\n    \"PaginationPrevious\",\n);\nexport const createEdgeComponent = registerClientReference(\n    function() { throw new Error(\"Attempted to call createEdgeComponent() from the server but createEdgeComponent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Pagination/PaginationEdges/PaginationEdges.mjs\",\n    \"createEdgeComponent\",\n);\n"],"names":[],"mappings":";;;;;;;;;;AACO,MAAM,kBAAkB,2RAC3B;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,sGACA;AAEG,MAAM,iBAAiB,2RAC1B;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,sGACA;AAEG,MAAM,iBAAiB,2RAC1B;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,sGACA;AAEG,MAAM,qBAAqB,2RAC9B;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,sGACA;AAEG,MAAM,sBAAsB,2RAC/B;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,sGACA"}},
    {"offset": {"line": 8061, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8066, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Pagination/PaginationEdges/PaginationEdges.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport { BoxProps, createPolymorphicComponent, useProps } from '../../../core';\nimport { usePaginationContext } from '../Pagination.context';\nimport {\n  PaginationFirstIcon,\n  PaginationIconProps,\n  PaginationLastIcon,\n  PaginationNextIcon,\n  PaginationPreviousIcon,\n} from '../Pagination.icons';\nimport { PaginationControl } from '../PaginationControl/PaginationControl';\n\nexport interface CreateEdgeComponent {\n  icon: React.FC<PaginationIconProps>;\n  name: string;\n  action: 'onNext' | 'onPrevious' | 'onFirst' | 'onLast';\n  type: 'next' | 'previous';\n}\n\nexport interface PaginationEdgeProps extends BoxProps {\n  /** An icon component to replace the default icon */\n  icon?: React.FC<PaginationIconProps>;\n}\n\nexport function createEdgeComponent({ icon, name, action, type }: CreateEdgeComponent) {\n  const defaultProps: Partial<PaginationEdgeProps> = { icon };\n\n  const Component = forwardRef<HTMLButtonElement, PaginationEdgeProps>((props, ref) => {\n    const { icon: _icon, ...others } = useProps(name, defaultProps, props);\n    const Icon = _icon!;\n    const ctx = usePaginationContext();\n    const disabled = type === 'next' ? ctx.active === ctx.total : ctx.active === 1;\n\n    return (\n      <PaginationControl\n        disabled={ctx.disabled || disabled}\n        ref={ref}\n        onClick={ctx[action]}\n        withPadding={false}\n        {...others}\n      >\n        <Icon\n          className=\"mantine-rotate-rtl\"\n          style={{\n            width: 'calc(var(--pagination-control-size) / 1.8)',\n            height: 'calc(var(--pagination-control-size) / 1.8)',\n          }}\n        />\n      </PaginationControl>\n    );\n  });\n\n  Component.displayName = `@mantine/core/${name}`;\n  return createPolymorphicComponent<'button', PaginationEdgeProps>(Component);\n}\n\nexport const PaginationNext = createEdgeComponent({\n  icon: PaginationNextIcon,\n  name: 'PaginationNext',\n  action: 'onNext',\n  type: 'next',\n});\n\nexport const PaginationPrevious = createEdgeComponent({\n  icon: PaginationPreviousIcon,\n  name: 'PaginationPrevious',\n  action: 'onPrevious',\n  type: 'previous',\n});\n\nexport const PaginationFirst = createEdgeComponent({\n  icon: PaginationFirstIcon,\n  name: 'PaginationFirst',\n  action: 'onFirst',\n  type: 'previous',\n});\n\nexport const PaginationLast = createEdgeComponent({\n  icon: PaginationLastIcon,\n  name: 'PaginationLast',\n  action: 'onLast',\n  type: 'next',\n});\n"],"names":[],"mappings":""}},
    {"offset": {"line": 8071, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8076, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Pagination/PaginationItems/PaginationItems.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const PaginationItems = registerClientReference(\n    function() { throw new Error(\"Attempted to call PaginationItems() from the server but PaginationItems is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Pagination/PaginationItems/PaginationItems.mjs\",\n    \"PaginationItems\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,kBAAkB,2RAC3B;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,sGACA"}},
    {"offset": {"line": 8085, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8090, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Pagination/PaginationItems/PaginationItems.tsx"],"sourcesContent":["import React from 'react';\nimport { usePaginationContext } from '../Pagination.context';\nimport { PaginationIcon } from '../Pagination.icons';\nimport { PaginationControl } from '../PaginationControl/PaginationControl';\nimport { PaginationDots } from '../PaginationDots/PaginationDots';\n\nexport interface PaginationItemsProps {\n  /** Dots icon component */\n  dotsIcon?: PaginationIcon;\n}\n\nexport function PaginationItems({ dotsIcon }: PaginationItemsProps) {\n  const ctx = usePaginationContext();\n\n  const items = ctx.range.map((page, index) => {\n    if (page === 'dots') {\n      return <PaginationDots icon={dotsIcon} key={index} />;\n    }\n\n    return (\n      <PaginationControl\n        key={index}\n        active={page === ctx.active}\n        aria-current={page === ctx.active ? 'page' : undefined}\n        onClick={() => ctx.onChange(page)}\n        disabled={ctx.disabled}\n        {...ctx.getItemProps?.(page)}\n      >\n        {page}\n      </PaginationControl>\n    );\n  });\n\n  return <>{items}</>;\n}\n\nPaginationItems.displayName = '@mantine/core/PaginationItems';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 8095, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8100, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Pagination/PaginationRoot/PaginationRoot.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const PaginationRoot = registerClientReference(\n    function() { throw new Error(\"Attempted to call PaginationRoot() from the server but PaginationRoot is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Pagination/PaginationRoot/PaginationRoot.mjs\",\n    \"PaginationRoot\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,iBAAiB,2RAC1B;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,oGACA"}},
    {"offset": {"line": 8109, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8114, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Pagination/PaginationRoot/PaginationRoot.tsx"],"sourcesContent":["import React from 'react';\nimport { usePagination } from '@mantine/hooks';\nimport {\n  Box,\n  BoxProps,\n  createEventHandler,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getAutoContrastValue,\n  getContrastColor,\n  getFontSize,\n  getRadius,\n  getSize,\n  getThemeColor,\n  MantineColor,\n  MantineRadius,\n  MantineSize,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../../core';\nimport { PaginationProvider } from '../Pagination.context';\nimport classes from '../Pagination.module.css';\n\nexport type PaginationRootStylesNames = 'root' | 'control' | 'dots';\nexport type PaginationRootCssVariables = {\n  root:\n    | '--pagination-control-size'\n    | '--pagination-control-radius'\n    | '--pagination-control-fz'\n    | '--pagination-active-bg'\n    | '--pagination-active-color';\n};\n\nexport interface PaginationRootProps\n  extends BoxProps,\n    StylesApiProps<PaginationRootFactory>,\n    ElementProps<'div', 'value' | 'onChange'> {\n  /** `height` and `min-width` of controls, `'md'` by default */\n  size?: MantineSize | (string & {}) | number;\n\n  /** Total number of pages, must be an integer */\n  total: number;\n\n  /** Active page for controlled component, must be an integer in [0, total] interval */\n  value?: number;\n\n  /** Active page for uncontrolled component, must be an integer in [0, total] interval */\n  defaultValue?: number;\n\n  /** Called when page changes */\n  onChange?: (value: number) => void;\n\n  /** Determines whether all controls should be disabled, `false` by default */\n  disabled?: boolean;\n\n  /** Number of siblings displayed on the left/right side of the selected page, `1` by default */\n  siblings?: number;\n\n  /** Number of elements visible on the left/right edges, `1` by default */\n  boundaries?: number;\n\n  /** Key of `theme.colors`, active item color, `theme.primaryColor` by default */\n  color?: MantineColor;\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius`, numbers are converted to rem, `theme.defaultRadius` by default */\n  radius?: MantineRadius;\n\n  /** Called when next page control is clicked */\n  onNextPage?: () => void;\n\n  /** Called when previous page control is clicked */\n  onPreviousPage?: () => void;\n\n  /** Called when first page control is clicked */\n  onFirstPage?: () => void;\n\n  /** Called when last page control is clicked */\n  onLastPage?: () => void;\n\n  /** Additional props passed down to controls */\n  getItemProps?: (page: number) => Record<string, any>;\n\n  /** Determines whether active item text color should depend on `background-color` of the indicator. If luminosity of the `color` prop is less than `theme.luminosityThreshold`, then `theme.white` will be used for text color, otherwise `theme.black`. Overrides `theme.autoContrast`. */\n  autoContrast?: boolean;\n}\n\nexport type PaginationRootFactory = Factory<{\n  props: PaginationRootProps;\n  ref: HTMLDivElement;\n  stylesNames: PaginationRootStylesNames;\n  vars: PaginationRootCssVariables;\n}>;\n\nconst defaultProps: Partial<PaginationRootProps> = {\n  siblings: 1,\n  boundaries: 1,\n};\n\nconst varsResolver = createVarsResolver<PaginationRootFactory>(\n  (theme, { size, radius, color, autoContrast }) => ({\n    root: {\n      '--pagination-control-radius': radius === undefined ? undefined : getRadius(radius),\n      '--pagination-control-size': getSize(size, 'pagination-control-size'),\n      '--pagination-control-fz': getFontSize(size),\n      '--pagination-active-bg': color ? getThemeColor(color, theme) : undefined,\n      '--pagination-active-color': getAutoContrastValue(autoContrast, theme)\n        ? getContrastColor({ color, theme })\n        : undefined,\n    },\n  })\n);\n\nexport const PaginationRoot = factory<PaginationRootFactory>((_props, ref) => {\n  const props = useProps('PaginationRoot', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    total,\n    value,\n    defaultValue,\n    onChange,\n    disabled,\n    siblings,\n    boundaries,\n    color,\n    radius,\n    onNextPage,\n    onPreviousPage,\n    onFirstPage,\n    onLastPage,\n    getItemProps,\n    autoContrast,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<PaginationRootFactory>({\n    name: 'Pagination',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  const { range, setPage, next, previous, active, first, last } = usePagination({\n    page: value,\n    initialPage: defaultValue,\n    onChange,\n    total,\n    siblings,\n    boundaries,\n  });\n\n  const handleNextPage = createEventHandler(onNextPage, next);\n  const handlePreviousPage = createEventHandler(onPreviousPage, previous);\n  const handleFirstPage = createEventHandler(onFirstPage, first);\n  const handleLastPage = createEventHandler(onLastPage, last);\n\n  return (\n    <PaginationProvider\n      value={{\n        total,\n        range,\n        active,\n        disabled,\n        getItemProps,\n        onChange: setPage,\n        onNext: handleNextPage,\n        onPrevious: handlePreviousPage,\n        onFirst: handleFirstPage,\n        onLast: handleLastPage,\n        getStyles,\n      }}\n    >\n      <Box ref={ref} {...getStyles('root')} {...others} />\n    </PaginationProvider>\n  );\n});\n\nPaginationRoot.classes = classes;\nPaginationRoot.displayName = '@mantine/core/PaginationRoot';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 8119, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8124, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/PasswordInput/PasswordInput.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const PasswordInput = registerClientReference(\n    function() { throw new Error(\"Attempted to call PasswordInput() from the server but PasswordInput is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/PasswordInput/PasswordInput.mjs\",\n    \"PasswordInput\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,gBAAgB,2RACzB;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,uFACA"}},
    {"offset": {"line": 8133, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8138, "column": 0}, "map": {"version":3,"sources":["../../../src/components/PasswordInput/PasswordInput.tsx"],"sourcesContent":["import React from 'react';\nimport cx from 'clsx';\nimport { useId, useUncontrolled } from '@mantine/hooks';\nimport {\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  extractStyleProps,\n  factory,\n  Factory,\n  getSize,\n  StylesApiProps,\n  useProps,\n  useResolvedStylesApi,\n  useStyles,\n} from '../../core';\nimport { ActionIcon } from '../ActionIcon';\nimport { __BaseInputProps, __InputStylesNames, Input, InputVariant } from '../Input';\nimport { InputBase } from '../InputBase';\nimport { PasswordToggleIcon } from './PasswordToggleIcon';\nimport classes from './PasswordInput.module.css';\n\nexport type PasswordInputStylesNames =\n  | 'root'\n  | 'visibilityToggle'\n  | 'innerInput'\n  | __InputStylesNames;\nexport type PasswordInputCssVariables = {\n  root: '--psi-icon-size' | '--psi-button-size';\n};\n\nexport interface PasswordInputProps\n  extends BoxProps,\n    __BaseInputProps,\n    StylesApiProps<PasswordInputFactory>,\n    ElementProps<'input', 'size'> {\n  /** A component to replace visibility toggle icon */\n  visibilityToggleIcon?: React.FC<{ reveal: boolean }>;\n\n  /** Props passed down to the visibility toggle button */\n  visibilityToggleButtonProps?: Record<string, any>;\n\n  /** Determines whether input content should be visible */\n  visible?: boolean;\n\n  /** Determines whether input content should be visible by default */\n  defaultVisible?: boolean;\n\n  /** Called when visibility changes */\n  onVisibilityChange?: (visible: boolean) => void;\n}\n\nexport type PasswordInputFactory = Factory<{\n  props: PasswordInputProps;\n  ref: HTMLInputElement;\n  stylesNames: PasswordInputStylesNames;\n  vars: PasswordInputCssVariables;\n  variant: InputVariant;\n}>;\n\nconst defaultProps: Partial<PasswordInputProps> = {\n  visibilityToggleIcon: PasswordToggleIcon,\n};\n\nconst varsResolver = createVarsResolver<PasswordInputFactory>((_, { size }) => ({\n  root: {\n    '--psi-icon-size': getSize(size, 'psi-icon-size'),\n    '--psi-button-size': getSize(size, 'psi-button-size'),\n  },\n}));\n\nexport const PasswordInput = factory<PasswordInputFactory>((_props, ref) => {\n  const props = useProps('PasswordInput', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    required,\n    error,\n    leftSection,\n    disabled,\n    id,\n    variant,\n    inputContainer,\n    description,\n    label,\n    size,\n    errorProps,\n    descriptionProps,\n    labelProps,\n    withAsterisk,\n    inputWrapperOrder,\n    wrapperProps,\n    radius,\n    rightSection,\n    rightSectionWidth,\n    rightSectionPointerEvents,\n    leftSectionWidth,\n    visible,\n    defaultVisible,\n    onVisibilityChange,\n    visibilityToggleIcon,\n    visibilityToggleButtonProps,\n    rightSectionProps,\n    leftSectionProps,\n    leftSectionPointerEvents,\n    mod,\n    ...others\n  } = props;\n\n  const uuid = useId(id);\n\n  const [_visible, setVisibility] = useUncontrolled({\n    value: visible,\n    defaultValue: defaultVisible,\n    finalValue: false,\n    onChange: onVisibilityChange,\n  });\n\n  const toggleVisibility = () => setVisibility(!_visible);\n\n  const getStyles = useStyles<PasswordInputFactory>({\n    name: 'PasswordInput',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  const { resolvedClassNames, resolvedStyles } = useResolvedStylesApi<PasswordInputFactory>({\n    classNames,\n    styles,\n    props,\n  });\n\n  const { styleProps, rest } = extractStyleProps(others);\n  const VisibilityToggleIcon = visibilityToggleIcon!;\n\n  const visibilityToggleButton = (\n    <ActionIcon<'button'>\n      {...getStyles('visibilityToggle')}\n      disabled={disabled}\n      radius={radius}\n      aria-hidden={!visibilityToggleButtonProps}\n      tabIndex={-1}\n      {...visibilityToggleButtonProps}\n      variant=\"subtle\"\n      color=\"gray\"\n      unstyled={unstyled}\n      onMouseDown={(event) => {\n        event.preventDefault();\n        visibilityToggleButtonProps?.onMouseDown?.(event);\n        toggleVisibility();\n      }}\n      onKeyDown={(event) => {\n        visibilityToggleButtonProps?.onKeyDown?.(event);\n        if (event.key === ' ') {\n          event.preventDefault();\n          toggleVisibility();\n        }\n      }}\n    >\n      <VisibilityToggleIcon reveal={_visible} />\n    </ActionIcon>\n  );\n\n  return (\n    <Input.Wrapper\n      required={required}\n      id={uuid}\n      label={label}\n      error={error}\n      description={description}\n      size={size}\n      classNames={resolvedClassNames}\n      styles={resolvedStyles}\n      __staticSelector=\"PasswordInput\"\n      errorProps={errorProps}\n      descriptionProps={descriptionProps}\n      unstyled={unstyled}\n      withAsterisk={withAsterisk}\n      inputWrapperOrder={inputWrapperOrder}\n      inputContainer={inputContainer}\n      variant={variant}\n      labelProps={{ ...labelProps, htmlFor: uuid }}\n      mod={mod}\n      {...getStyles('root')}\n      {...styleProps}\n      {...wrapperProps}\n    >\n      <Input<'div'>\n        component=\"div\"\n        error={error}\n        leftSection={leftSection}\n        size={size}\n        classNames={{ ...resolvedClassNames, input: cx(classes.input, resolvedClassNames.input) }}\n        styles={resolvedStyles}\n        radius={radius}\n        disabled={disabled}\n        __staticSelector=\"PasswordInput\"\n        rightSectionWidth={rightSectionWidth}\n        rightSection={rightSection ?? visibilityToggleButton}\n        variant={variant}\n        unstyled={unstyled}\n        leftSectionWidth={leftSectionWidth}\n        rightSectionPointerEvents={rightSectionPointerEvents || 'all'}\n        rightSectionProps={rightSectionProps}\n        leftSectionProps={leftSectionProps}\n        leftSectionPointerEvents={leftSectionPointerEvents}\n        withAria={false}\n      >\n        <input\n          required={required}\n          data-invalid={!!error || undefined}\n          data-with-left-section={!!leftSection || undefined}\n          {...getStyles('innerInput')}\n          disabled={disabled}\n          id={uuid}\n          ref={ref}\n          {...rest}\n          autoComplete={rest.autoComplete || 'off'}\n          type={_visible ? 'text' : 'password'}\n        />\n      </Input>\n    </Input.Wrapper>\n  );\n});\n\nPasswordInput.classes = { ...InputBase.classes, ...classes };\nPasswordInput.displayName = '@mantine/core/PasswordInput';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 8143, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8148, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Pill/Pill.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Pill = registerClientReference(\n    function() { throw new Error(\"Attempted to call Pill() from the server but Pill is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Pill/Pill.mjs\",\n    \"Pill\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,OAAO,2RAChB;IAAa,MAAM,IAAI,MAAM;AAAwN,GACrP,qEACA"}},
    {"offset": {"line": 8157, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8162, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Pill/Pill.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getRadius,\n  getSize,\n  MantineRadius,\n  MantineSize,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { CloseButton } from '../CloseButton';\nimport { usePillsInputContext } from '../PillsInput/PillsInput.context';\nimport { usePillGroupContext } from './PillGroup.context';\nimport { PillGroup } from './PillGroup/PillGroup';\nimport classes from './Pill.module.css';\n\nexport type PillStylesNames = 'root' | 'label' | 'remove';\nexport type PillVariant = 'default' | 'contrast';\nexport type PillCssVariables = {\n  root: '--pill-fz' | '--pill-radius' | '--pill-height';\n};\n\nexport interface PillProps extends BoxProps, StylesApiProps<PillFactory>, ElementProps<'div'> {\n  /** Controls pill `font-size` and `padding`, `'sm'` by default */\n  size?: MantineSize;\n\n  /** Determines whether the remove button should be displayed, `false` by default */\n  withRemoveButton?: boolean;\n\n  /** Called when the remove button is clicked */\n  onRemove?: () => void;\n\n  /** Props passed down to the remove button */\n  removeButtonProps?: React.ComponentPropsWithoutRef<'button'>;\n\n  /** Key of `theme.radius` or any valid CSS value to set border-radius. Numbers are converted to rem. `'xl'` by default. */\n  radius?: MantineRadius;\n\n  /** If pill is disabled it has higher contrast to be visible on the disabled input background and the remove button is hidden */\n  disabled?: boolean;\n}\n\nexport type PillFactory = Factory<{\n  props: PillProps;\n  ref: HTMLDivElement;\n  stylesNames: PillStylesNames;\n  vars: PillCssVariables;\n  variant: PillVariant;\n  ctx: { size: MantineSize | (string & {}) | undefined };\n  staticComponents: {\n    Group: typeof PillGroup;\n  };\n}>;\n\nconst defaultProps: Partial<PillProps> = {\n  variant: 'default',\n};\n\nconst varsResolver = createVarsResolver<PillFactory>((_, { radius }, { size }) => ({\n  root: {\n    '--pill-fz': getSize(size, 'pill-fz'),\n    '--pill-height': getSize(size, 'pill-height'),\n    '--pill-radius': radius === undefined ? undefined : getRadius(radius),\n  },\n}));\n\nexport const Pill = factory<PillFactory>((_props, ref) => {\n  const props = useProps('Pill', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    variant,\n    children,\n    withRemoveButton,\n    onRemove,\n    removeButtonProps,\n    radius,\n    size,\n    disabled,\n    mod,\n    ...others\n  } = props;\n\n  const ctx = usePillGroupContext();\n  const pillsInputCtx = usePillsInputContext();\n  const _size = size || ctx?.size || undefined;\n  const _variant = pillsInputCtx?.variant === 'filled' ? 'contrast' : variant || 'default';\n\n  const getStyles = useStyles<PillFactory>({\n    name: 'Pill',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n    stylesCtx: { size: _size },\n  });\n\n  return (\n    <Box\n      component=\"span\"\n      ref={ref}\n      variant={_variant}\n      size={_size}\n      {...getStyles('root', { variant: _variant })}\n      mod={[\n        { 'with-remove': withRemoveButton && !disabled, disabled: disabled || ctx?.disabled },\n        mod,\n      ]}\n      {...others}\n    >\n      <span {...getStyles('label')}>{children}</span>\n      {withRemoveButton && (\n        <CloseButton\n          variant=\"transparent\"\n          radius={radius}\n          tabIndex={-1}\n          aria-hidden\n          unstyled={unstyled}\n          {...removeButtonProps}\n          {...getStyles('remove', {\n            className: removeButtonProps?.className,\n            style: removeButtonProps?.style,\n          })}\n          onMouseDown={(event) => {\n            event.preventDefault();\n            event.stopPropagation();\n            removeButtonProps?.onMouseDown?.(event);\n          }}\n          onClick={(event) => {\n            event.stopPropagation();\n            onRemove?.();\n            removeButtonProps?.onClick?.(event);\n          }}\n        />\n      )}\n    </Box>\n  );\n});\n\nPill.classes = classes;\nPill.displayName = '@mantine/core/Pill';\nPill.Group = PillGroup;\n"],"names":[],"mappings":""}},
    {"offset": {"line": 8167, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8172, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Pill/PillGroup/PillGroup.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const PillGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call PillGroup() from the server but PillGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Pill/PillGroup/PillGroup.mjs\",\n    \"PillGroup\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,YAAY,2RACrB;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,oFACA"}},
    {"offset": {"line": 8181, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8186, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Pill/PillGroup/PillGroup.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getSize,\n  MantineSize,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../../core';\nimport { usePillsInputContext } from '../../PillsInput/PillsInput.context';\nimport { PillGroupProvider } from '../PillGroup.context';\nimport classes from '../Pill.module.css';\n\nexport type PillGroupStylesNames = 'group';\nexport type PillGroupCssVariables = {\n  group: '--pg-gap';\n};\n\nexport interface PillGroupProps\n  extends BoxProps,\n    StylesApiProps<PillGroupFactory>,\n    ElementProps<'div'> {\n  /** Controls spacing between pills, by default controlled by `size` */\n  gap?: MantineSize | (string & {}) | number;\n\n  /** Controls size of the child `Pill` components and gap between them, `'sm'` by default */\n  size?: MantineSize | (string & {});\n\n  /** Determines whether child `Pill` components should be disabled */\n  disabled?: boolean;\n}\n\nexport type PillGroupFactory = Factory<{\n  props: PillGroupProps;\n  ref: HTMLDivElement;\n  stylesNames: PillGroupStylesNames;\n  vars: PillGroupCssVariables;\n  ctx: { size: MantineSize | (string & {}) | undefined };\n}>;\n\nconst defaultProps: Partial<PillGroupProps> = {};\n\nconst varsResolver = createVarsResolver<PillGroupFactory>((_, { gap }, { size }) => ({\n  group: {\n    '--pg-gap': gap !== undefined ? getSize(gap) : getSize(size, 'pg-gap'),\n  },\n}));\n\nexport const PillGroup = factory<PillGroupFactory>((_props, ref) => {\n  const props = useProps('PillGroup', defaultProps, _props);\n  const { classNames, className, style, styles, unstyled, vars, size, disabled, ...others } = props;\n  const pillsInputCtx = usePillsInputContext();\n  const _size = pillsInputCtx?.size || size || undefined;\n\n  const getStyles = useStyles<PillGroupFactory>({\n    name: 'PillGroup',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n    stylesCtx: { size: _size },\n    rootSelector: 'group',\n  });\n\n  return (\n    <PillGroupProvider value={{ size: _size, disabled }}>\n      <Box ref={ref} size={_size} {...getStyles('group')} {...others} />\n    </PillGroupProvider>\n  );\n});\n\nPillGroup.classes = classes;\nPillGroup.displayName = '@mantine/core/PillGroup';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 8191, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8196, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/PillsInput/PillsInput.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const PillsInput = registerClientReference(\n    function() { throw new Error(\"Attempted to call PillsInput() from the server but PillsInput is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/PillsInput/PillsInput.mjs\",\n    \"PillsInput\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,aAAa,2RACtB;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,iFACA"}},
    {"offset": {"line": 8205, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8210, "column": 0}, "map": {"version":3,"sources":["../../../src/components/PillsInput/PillsInput.tsx"],"sourcesContent":["import React, { useRef } from 'react';\nimport { BoxProps, ElementProps, factory, Factory, StylesApiProps, useProps } from '../../core';\nimport { __BaseInputProps, __InputStylesNames } from '../Input';\nimport { InputBase } from '../InputBase';\nimport { PillsInputProvider } from './PillsInput.context';\nimport { PillsInputField } from './PillsInputField/PillsInputField';\n\nexport interface PillsInputProps\n  extends BoxProps,\n    __BaseInputProps,\n    StylesApiProps<PillsInputFactory>,\n    ElementProps<'div', 'size'> {\n  __stylesApiProps?: Record<string, any>;\n  __staticSelector?: string;\n  multiline?: boolean;\n}\n\nexport type PillsInputFactory = Factory<{\n  props: PillsInputProps;\n  ref: HTMLInputElement;\n  stylesNames: __InputStylesNames;\n  staticComponents: {\n    Field: typeof PillsInputField;\n  };\n}>;\n\nconst defaultProps: Partial<PillsInputProps> = {};\n\nexport const PillsInput = factory<PillsInputFactory>((_props, ref) => {\n  const props = useProps('PillsInput', defaultProps, _props);\n  const {\n    children,\n    onMouseDown,\n    onClick,\n    size,\n    disabled,\n    __staticSelector,\n    error,\n    variant,\n    ...others\n  } = props;\n\n  const fieldRef = useRef<HTMLInputElement>();\n\n  return (\n    <PillsInputProvider value={{ fieldRef, size: size!, disabled, hasError: !!error, variant }}>\n      <InputBase\n        size={size}\n        error={error}\n        variant={variant}\n        component=\"div\"\n        ref={ref}\n        onMouseDown={(event) => {\n          event.preventDefault();\n          onMouseDown?.(event);\n          fieldRef.current?.focus();\n        }}\n        onClick={(event) => {\n          event.preventDefault();\n          onClick?.(event);\n          fieldRef.current?.focus();\n        }}\n        {...others}\n        multiline\n        disabled={disabled}\n        __staticSelector={__staticSelector || 'PillsInput'}\n        withAria={false}\n      >\n        {children}\n      </InputBase>\n    </PillsInputProvider>\n  );\n});\n\nPillsInput.displayName = '@mantine/core/PillsInput';\nPillsInput.Field = PillsInputField;\n"],"names":[],"mappings":""}},
    {"offset": {"line": 8215, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8220, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/PillsInput/PillsInputField/PillsInputField.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const PillsInputField = registerClientReference(\n    function() { throw new Error(\"Attempted to call PillsInputField() from the server but PillsInputField is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/PillsInput/PillsInputField/PillsInputField.mjs\",\n    \"PillsInputField\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,kBAAkB,2RAC3B;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,sGACA"}},
    {"offset": {"line": 8229, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8234, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/PillsInput/PillsInputField/PillsInputField.tsx"],"sourcesContent":["import React from 'react';\nimport { useMergedRef } from '@mantine/hooks';\nimport {\n  Box,\n  BoxProps,\n  ElementProps,\n  factory,\n  Factory,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../../core';\nimport { useInputWrapperContext } from '../../Input';\nimport { usePillsInputContext } from '../PillsInput.context';\nimport classes from '../PillsInput.module.css';\n\nexport type PillsInputFieldStylesNames = 'field';\n\nexport interface PillsInputFieldProps\n  extends BoxProps,\n    StylesApiProps<PillsInputFieldFactory>,\n    ElementProps<'input', 'type'> {\n  /** Controls input styles when focused. If `auto` the input is hidden when not focused. If `visible` the input will always remain visible. `'visible'` by default  */\n  type?: 'auto' | 'visible' | 'hidden';\n\n  /** If set, cursor is changed to pointer */\n  pointer?: boolean;\n}\n\nexport type PillsInputFieldFactory = Factory<{\n  props: PillsInputFieldProps;\n  ref: HTMLInputElement;\n  stylesNames: PillsInputFieldStylesNames;\n}>;\n\nconst defaultProps: Partial<PillsInputFieldProps> = {\n  type: 'visible',\n};\n\nexport const PillsInputField = factory<PillsInputFieldFactory>((_props, ref) => {\n  const props = useProps('PillsInputField', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    type,\n    disabled,\n    id,\n    pointer,\n    mod,\n    ...others\n  } = props;\n  const ctx = usePillsInputContext();\n  const inputWrapperCtx = useInputWrapperContext();\n\n  const getStyles = useStyles<PillsInputFieldFactory>({\n    name: 'PillsInputField',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    rootSelector: 'field',\n  });\n\n  const _disabled = disabled || ctx?.disabled;\n\n  return (\n    <Box\n      component=\"input\"\n      ref={useMergedRef(ref, ctx?.fieldRef)}\n      data-type={type}\n      disabled={_disabled}\n      mod={[{ disabled: _disabled, pointer }, mod]}\n      {...getStyles('field')}\n      {...others}\n      id={inputWrapperCtx?.inputId || id}\n      aria-invalid={ctx?.hasError}\n      aria-describedby={inputWrapperCtx?.describedBy}\n      type=\"text\"\n      onMouseDown={(event) => !pointer && event.stopPropagation()}\n    />\n  );\n});\n\nPillsInputField.classes = classes;\nPillsInputField.displayName = '@mantine/core/PillsInputField';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 8239, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8244, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/PinInput/PinInput.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const PinInput = registerClientReference(\n    function() { throw new Error(\"Attempted to call PinInput() from the server but PinInput is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/PinInput/PinInput.mjs\",\n    \"PinInput\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,WAAW,2RACpB;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,6EACA"}},
    {"offset": {"line": 8253, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8258, "column": 0}, "map": {"version":3,"sources":["../../../src/components/PinInput/PinInput.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { assignRef, useId, useUncontrolled } from '@mantine/hooks';\nimport {\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  Factory,\n  factory,\n  getSize,\n  MantineRadius,\n  MantineSize,\n  MantineSpacing,\n  StylesApiProps,\n  useProps,\n  useResolvedStylesApi,\n  useStyles,\n} from '../../core';\nimport { Group } from '../Group';\nimport { Input } from '../Input';\nimport { InputBase } from '../InputBase';\nimport { createPinArray } from './create-pin-array/create-pin-array';\nimport classes from './PinInput.module.css';\n\nconst regex = {\n  number: /^[0-9]+$/,\n  alphanumeric: /^[a-zA-Z0-9]+$/i,\n};\n\nexport type PinInputStylesNames = 'root' | 'pinInput' | 'input';\n\nexport type PinInputCssVariables = {\n  root: '--pin-input-size';\n};\n\nexport interface PinInputProps\n  extends BoxProps,\n    StylesApiProps<PinInputFactory>,\n    ElementProps<'div', 'onChange'> {\n  /** Hidden input `name` attribute */\n  name?: string;\n\n  /** Hidden input `form` attribute */\n  form?: string;\n\n  /** Key of `theme.spacing` or any valid CSS value to set `gap` between inputs, numbers are converted to rem, `'md'` by default */\n  gap?: MantineSpacing;\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius`, numbers are converted to rem, `theme.defaultRadius` by default */\n  radius?: MantineRadius;\n\n  /** Controls inputs `width` and `height`, `'sm'` by default */\n  size?: MantineSize;\n\n  /** If set, the first input is focused when component is mounted, `false` by default */\n  autoFocus?: boolean;\n\n  /** Controlled component value */\n  value?: string;\n\n  /** Uncontrolled component default value */\n  defaultValue?: string;\n\n  /** Called when value changes */\n  onChange?: (value: string) => void;\n\n  /** Called when all inputs have value */\n  onComplete?: (value: string) => void;\n\n  /** Inputs placeholder, `'○'` by default */\n  placeholder?: string;\n\n  /** Determines whether focus should be moved automatically to the next input once filled, `true` by default */\n  manageFocus?: boolean;\n\n  /** Determines whether `autocomplete=\"one-time-code\"` attribute should be set on all inputs, `true` by default */\n  oneTimeCode?: boolean;\n\n  /** Base id used for all inputs. By default, inputs' ids are generated randomly. */\n  id?: string;\n\n  /** If set, `disabled` attribute is added to all inputs */\n  disabled?: boolean;\n\n  /** If set, adds error styles and `aria-invalid` attribute to all inputs */\n  error?: boolean;\n\n  /** Determines which values can be entered, `'alphanumeric'` by default */\n  type?: 'alphanumeric' | 'number' | RegExp;\n\n  /** Changes input type to `\"password\"`, `false` by default */\n  mask?: boolean;\n\n  /** Number of inputs, `4` by default */\n  length?: number;\n\n  /** If set, the user cannot edit the value */\n  readOnly?: boolean;\n\n  /** Inputs `type` attribute, inferred from the `type` prop if not specified */\n  inputType?: React.HTMLInputTypeAttribute;\n\n  /** `inputmode` attribute, inferred from the `type` prop if not specified */\n  inputMode?:\n    | 'none'\n    | 'text'\n    | 'tel'\n    | 'url'\n    | 'email'\n    | 'numeric'\n    | 'decimal'\n    | 'search'\n    | undefined;\n\n  /** `aria-label` for the inputs */\n  ariaLabel?: string;\n\n  /** Props passed down to the hidden input */\n  hiddenInputProps?: React.ComponentPropsWithoutRef<'input'>;\n\n  /** Assigns ref of the root element */\n  rootRef?: React.ForwardedRef<HTMLDivElement>;\n}\n\nexport type PinInputFactory = Factory<{\n  props: PinInputProps;\n  ref: HTMLInputElement;\n  stylesNames: PinInputStylesNames;\n  vars: PinInputCssVariables;\n}>;\n\nconst defaultProps: Partial<PinInputProps> = {\n  gap: 'sm',\n  length: 4,\n  manageFocus: true,\n  oneTimeCode: true,\n  placeholder: '○',\n  type: 'alphanumeric',\n  ariaLabel: 'PinInput',\n};\n\nconst varsResolver = createVarsResolver<PinInputFactory>((_, { size }) => ({\n  root: {\n    '--pin-input-size': getSize(size ?? defaultProps.size, 'pin-input-size'),\n  },\n}));\n\nexport const PinInput = factory<PinInputFactory>((props, ref) => {\n  const {\n    name,\n    form,\n    className,\n    value,\n    defaultValue,\n    variant,\n    gap,\n    style,\n    size,\n    classNames,\n    styles,\n    unstyled,\n    length,\n    onChange,\n    onComplete,\n    manageFocus,\n    autoFocus,\n    error,\n    radius,\n    disabled,\n    oneTimeCode,\n    placeholder,\n    type,\n    mask,\n    readOnly,\n    inputType,\n    inputMode,\n    ariaLabel,\n    vars,\n    id,\n    hiddenInputProps,\n    rootRef,\n    ...others\n  } = useProps('PinInput', defaultProps, props);\n\n  const uuid = useId(id);\n\n  const getStyles = useStyles<PinInputFactory>({\n    name: 'PinInput',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  const { resolvedClassNames, resolvedStyles } = useResolvedStylesApi<PinInputFactory>({\n    classNames,\n    styles,\n    props,\n  });\n\n  const [focusedIndex, setFocusedIndex] = useState(-1);\n\n  const [_value, setValues] = useUncontrolled<string[]>({\n    value: value ? createPinArray(length ?? 0, value) : undefined,\n    defaultValue: defaultValue?.split('').slice(0, length ?? 0),\n    finalValue: createPinArray(length ?? 0, ''),\n    onChange:\n      typeof onChange === 'function'\n        ? (val) => {\n            onChange(val.join('').trim());\n          }\n        : undefined,\n  });\n  const _valueToString = _value.join('').trim();\n\n  const inputsRef = useRef<Array<HTMLInputElement>>([]);\n\n  const validate = (code: string) => {\n    const re = type instanceof RegExp ? type : type && type in regex ? regex[type] : null;\n\n    return re?.test(code);\n  };\n\n  const focusInputField = (\n    dir: 'next' | 'prev',\n    index: number,\n    event?: React.KeyboardEvent<HTMLInputElement>\n  ) => {\n    if (!manageFocus) {\n      event?.preventDefault();\n      return;\n    }\n\n    if (dir === 'next') {\n      const nextIndex = index + 1;\n      const canFocusNext = nextIndex < (length ?? 0);\n      if (canFocusNext) {\n        event?.preventDefault();\n        inputsRef.current[nextIndex].focus();\n      }\n    }\n\n    if (dir === 'prev') {\n      const nextIndex = index - 1;\n      const canFocusNext = nextIndex > -1;\n      if (canFocusNext) {\n        event?.preventDefault();\n        inputsRef.current[nextIndex].focus();\n      }\n    }\n  };\n\n  const setFieldValue = (val: string, index: number) => {\n    const values = [..._value];\n    values[index] = val;\n    setValues(values);\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>, index: number) => {\n    const inputValue = event.target.value;\n    const nextCharOrValue =\n      inputValue.length === 2 ? inputValue.split('')[inputValue.length - 1] : inputValue;\n\n    const isValid = validate(nextCharOrValue);\n\n    if (nextCharOrValue.length < 2) {\n      if (isValid) {\n        setFieldValue(nextCharOrValue, index);\n        focusInputField('next', index);\n      } else {\n        setFieldValue('', index);\n      }\n    } else if (isValid) {\n      setValues(createPinArray(length ?? 0, inputValue));\n    }\n  };\n\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>, index: number) => {\n    const { ctrlKey, metaKey, key, shiftKey, target } = event;\n    const inputValue = (target as HTMLInputElement).value;\n\n    if (inputMode === 'numeric') {\n      const canTypeSign =\n        key === 'Backspace' ||\n        key === 'Tab' ||\n        key === 'Control' ||\n        key === 'Delete' ||\n        (ctrlKey && key === 'v') ||\n        (metaKey && key === 'v')\n          ? true\n          : !Number.isNaN(Number(key));\n\n      if (!canTypeSign) {\n        event.preventDefault();\n      }\n    }\n\n    if (key === 'ArrowLeft' || (shiftKey && key === 'Tab')) {\n      focusInputField('prev', index, event);\n    } else if (key === 'ArrowRight' || key === 'Tab' || key === ' ') {\n      focusInputField('next', index, event);\n    } else if (key === 'Delete') {\n      setFieldValue('', index);\n    } else if (key === 'Backspace') {\n      setFieldValue('', index);\n      if (length === index + 1) {\n        if ((event.target as HTMLInputElement).value === '') {\n          focusInputField('prev', index, event);\n        }\n      } else {\n        focusInputField('prev', index, event);\n      }\n    } else if (inputValue.length > 0 && key === _value[index]) {\n      focusInputField('next', index, event);\n    }\n  };\n\n  const handleFocus = (event: React.FocusEvent<HTMLInputElement>, index: number) => {\n    event.target.select();\n    setFocusedIndex(index);\n  };\n\n  const handleBlur = () => {\n    setFocusedIndex(-1);\n  };\n\n  const handlePaste = (event: React.ClipboardEvent<HTMLInputElement>) => {\n    event.preventDefault();\n    const copyValue = event.clipboardData.getData('text/plain').replace(/[\\n\\r\\s]+/g, '');\n    const isValid = validate(copyValue.trim());\n\n    if (isValid) {\n      const copyValueToPinArray = createPinArray(length ?? 0, copyValue);\n      setValues(copyValueToPinArray);\n      focusInputField('next', copyValueToPinArray.length - 2);\n    }\n  };\n\n  useEffect(() => {\n    if (_valueToString.length !== length) return;\n    onComplete?.(_valueToString);\n  }, [length, _valueToString]);\n\n  useEffect(() => {\n    if (length !== _value.length) {\n      setValues(createPinArray(length ?? 0, _value.join('')));\n    }\n  }, [length, _value]);\n\n  useEffect(() => {\n    if (value === '') {\n      setValues(createPinArray(length ?? 0, value));\n    }\n  }, [value]);\n\n  useEffect(() => {\n    if (disabled) {\n      setFocusedIndex(-1);\n    }\n  }, [disabled]);\n\n  return (\n    <>\n      <Group\n        {...others}\n        {...getStyles('root')}\n        ref={rootRef}\n        role=\"group\"\n        id={uuid}\n        gap={gap}\n        unstyled={unstyled}\n        wrap=\"nowrap\"\n        variant={variant}\n        __size={size}\n      >\n        {_value.map((char: string, index: number) => (\n          <Input\n            component=\"input\"\n            {...getStyles('pinInput', {\n              style: {\n                '--input-padding': '0',\n                '--input-text-align': 'center',\n              } as React.CSSProperties,\n            })}\n            classNames={resolvedClassNames}\n            styles={resolvedStyles}\n            size={size}\n            __staticSelector=\"PinInput\"\n            id={`${uuid}-${index + 1}`}\n            key={`${uuid}-${index}`}\n            inputMode={inputMode || (type === 'number' ? 'numeric' : 'text')}\n            onChange={(event) => handleChange(event, index)}\n            onKeyDown={(event) => handleKeyDown(event, index)}\n            onFocus={(event) => handleFocus(event, index)}\n            onBlur={handleBlur}\n            onPaste={handlePaste}\n            type={inputType || (mask ? 'password' : type === 'number' ? 'tel' : 'text')}\n            radius={radius}\n            error={error}\n            variant={variant}\n            disabled={disabled}\n            ref={(node) => {\n              index === 0 && assignRef(ref, node);\n              inputsRef.current[index] = node!;\n            }}\n            autoComplete={oneTimeCode ? 'one-time-code' : 'off'}\n            placeholder={focusedIndex === index ? '' : placeholder}\n            value={char}\n            autoFocus={autoFocus && index === 0}\n            unstyled={unstyled}\n            aria-label={ariaLabel}\n            readOnly={readOnly}\n          />\n        ))}\n      </Group>\n\n      <input type=\"hidden\" name={name} form={form} value={_valueToString} {...hiddenInputProps} />\n    </>\n  );\n});\n\nPinInput.classes = { ...classes, ...InputBase.classes };\nPinInput.displayName = '@mantine/core/PinInput';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 8263, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8268, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Portal/Portal.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Portal = registerClientReference(\n    function() { throw new Error(\"Attempted to call Portal() from the server but Portal is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Portal/Portal.mjs\",\n    \"Portal\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,SAAS,2RAClB;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,yEACA"}},
    {"offset": {"line": 8277, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8282, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Portal/Portal.tsx"],"sourcesContent":["import React, { forwardRef, useRef, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { assignRef, useIsomorphicEffect } from '@mantine/hooks';\nimport { useProps } from '../../core';\n\nfunction createPortalNode(props: React.ComponentPropsWithoutRef<'div'>) {\n  const node = document.createElement('div');\n  node.setAttribute('data-portal', 'true');\n  typeof props.className === 'string' &&\n    node.classList.add(...props.className.split(' ').filter(Boolean));\n  typeof props.style === 'object' && Object.assign(node.style, props.style);\n  typeof props.id === 'string' && node.setAttribute('id', props.id);\n  return node;\n}\n\nexport interface PortalProps extends React.ComponentPropsWithoutRef<'div'> {\n  /** Portal children, for example, custom modal or popover */\n  children: React.ReactNode;\n\n  /** Element inside which portal should be created, by default a new div element is created and appended to the `document.body` */\n  target?: HTMLElement | string;\n}\n\nconst defaultProps: Partial<PortalProps> = {};\n\nexport const Portal = forwardRef<HTMLDivElement, PortalProps>((props, ref) => {\n  const { children, target, ...others } = useProps('Portal', defaultProps, props);\n\n  const [mounted, setMounted] = useState(false);\n  const nodeRef = useRef<HTMLElement | null>(null);\n\n  useIsomorphicEffect(() => {\n    setMounted(true);\n    nodeRef.current = !target\n      ? createPortalNode(others)\n      : typeof target === 'string'\n        ? document.querySelector(target)\n        : target;\n\n    assignRef(ref, nodeRef.current);\n\n    if (!target && nodeRef.current) {\n      document.body.appendChild(nodeRef.current);\n    }\n\n    return () => {\n      if (!target && nodeRef.current) {\n        document.body.removeChild(nodeRef.current);\n      }\n    };\n  }, [target]);\n\n  if (!mounted || !nodeRef.current) {\n    return null;\n  }\n\n  return createPortal(<>{children}</>, nodeRef.current);\n});\n\nPortal.displayName = '@mantine/core/Portal';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 8287, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8292, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Portal/OptionalPortal.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const OptionalPortal = registerClientReference(\n    function() { throw new Error(\"Attempted to call OptionalPortal() from the server but OptionalPortal is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Portal/OptionalPortal.mjs\",\n    \"OptionalPortal\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,iBAAiB,2RAC1B;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,iFACA"}},
    {"offset": {"line": 8301, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8306, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Portal/OptionalPortal.tsx"],"sourcesContent":["import React from 'react';\nimport { Portal, PortalProps } from './Portal';\n\nexport interface OptionalPortalProps extends PortalProps {\n  /** Determines whether children should be rendered inside `<Portal />` */\n  withinPortal?: boolean;\n}\n\nexport function OptionalPortal({ withinPortal = true, children, ...others }: OptionalPortalProps) {\n  if (withinPortal) {\n    return <Portal {...others}>{children}</Portal>;\n  }\n\n  return <>{children}</>;\n}\n\nOptionalPortal.displayName = '@mantine/core/OptionalPortal';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 8311, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8316, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Progress/Progress.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Progress = registerClientReference(\n    function() { throw new Error(\"Attempted to call Progress() from the server but Progress is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Progress/Progress.mjs\",\n    \"Progress\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,WAAW,2RACpB;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,6EACA"}},
    {"offset": {"line": 8325, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8330, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Progress/Progress.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  factory,\n  Factory,\n  MantineColor,\n  StylesApiProps,\n  useProps,\n  useResolvedStylesApi,\n} from '../../core';\nimport { ProgressLabel } from './ProgressLabel/ProgressLabel';\nimport {\n  __ProgressRootProps,\n  ProgressRoot,\n  ProgressRootCssVariables,\n  ProgressRootStylesNames,\n} from './ProgressRoot/ProgressRoot';\nimport { ProgressSection } from './ProgressSection/ProgressSection';\nimport classes from './Progress.module.css';\n\nexport type ProgressStylesNames = ProgressRootStylesNames;\n\nexport interface ProgressProps extends __ProgressRootProps, StylesApiProps<ProgressFactory> {\n  /** Value of the progress */\n  value: number;\n\n  /** Key of `theme.colors` or any valid CSS value, `theme.primaryColor` by default */\n  color?: MantineColor;\n\n  /** Determines whether the section should have stipes, `false` by default */\n  striped?: boolean;\n\n  /** Determines whether the sections stripes should be animated, if set, `striped` prop is ignored, `false` by default */\n  animated?: boolean;\n}\n\nexport type ProgressFactory = Factory<{\n  props: ProgressProps;\n  ref: HTMLDivElement;\n  stylesNames: ProgressStylesNames;\n  vars: ProgressRootCssVariables;\n  staticComponents: {\n    Section: typeof ProgressSection;\n    Root: typeof ProgressRoot;\n    Label: typeof ProgressLabel;\n  };\n}>;\n\nconst defaultProps: Partial<ProgressProps> = {};\n\nexport const Progress = factory<ProgressFactory>((_props, ref) => {\n  const props = useProps('Progress', defaultProps, _props);\n  const {\n    value,\n    classNames,\n    styles,\n    vars,\n    color,\n    striped,\n    animated,\n    'aria-label': label,\n    ...others\n  } = props;\n\n  const { resolvedClassNames, resolvedStyles } = useResolvedStylesApi<ProgressFactory>({\n    classNames,\n    styles,\n    props,\n  });\n\n  return (\n    <ProgressRoot\n      ref={ref}\n      classNames={resolvedClassNames}\n      styles={resolvedStyles}\n      vars={vars as any}\n      {...others}\n    >\n      <ProgressSection\n        value={value}\n        color={color}\n        striped={striped}\n        animated={animated}\n        aria-label={label}\n      />\n    </ProgressRoot>\n  );\n});\n\nProgress.classes = classes;\nProgress.displayName = '@mantine/core/Progress';\nProgress.Section = ProgressSection;\nProgress.Root = ProgressRoot;\nProgress.Label = ProgressLabel;\n"],"names":[],"mappings":""}},
    {"offset": {"line": 8335, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8340, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Progress/ProgressLabel/ProgressLabel.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ProgressLabel = registerClientReference(\n    function() { throw new Error(\"Attempted to call ProgressLabel() from the server but ProgressLabel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Progress/ProgressLabel/ProgressLabel.mjs\",\n    \"ProgressLabel\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,gBAAgB,2RACzB;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,gGACA"}},
    {"offset": {"line": 8349, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8354, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Progress/ProgressLabel/ProgressLabel.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  CompoundStylesApiProps,\n  ElementProps,\n  factory,\n  Factory,\n  useProps,\n} from '../../../core';\nimport { useProgressContext } from '../Progress.context';\nimport classes from '../Progress.module.css';\n\nexport type ProgressLabelStylesNames = 'label';\n\nexport interface ProgressLabelProps\n  extends BoxProps,\n    CompoundStylesApiProps<ProgressLabelFactory>,\n    ElementProps<'div'> {}\n\nexport type ProgressLabelFactory = Factory<{\n  props: ProgressLabelProps;\n  ref: HTMLDivElement;\n  stylesNames: ProgressLabelStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<ProgressLabelProps> = {};\n\nexport const ProgressLabel = factory<ProgressLabelFactory>((props, ref) => {\n  const { classNames, className, style, styles, vars, ...others } = useProps(\n    'ProgressLabel',\n    defaultProps,\n    props\n  );\n\n  const ctx = useProgressContext();\n\n  return (\n    <Box\n      ref={ref}\n      {...ctx.getStyles('label', { className, style, classNames, styles })}\n      {...others}\n    />\n  );\n});\n\nProgressLabel.classes = classes;\nProgressLabel.displayName = '@mantine/core/ProgressLabel';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 8359, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8364, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Progress/ProgressRoot/ProgressRoot.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ProgressRoot = registerClientReference(\n    function() { throw new Error(\"Attempted to call ProgressRoot() from the server but ProgressRoot is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Progress/ProgressRoot/ProgressRoot.mjs\",\n    \"ProgressRoot\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,eAAe,2RACxB;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,8FACA"}},
    {"offset": {"line": 8373, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8378, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Progress/ProgressRoot/ProgressRoot.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getRadius,\n  getSize,\n  MantineRadius,\n  MantineSize,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../../core';\nimport { ProgressProvider } from '../Progress.context';\nimport classes from '../Progress.module.css';\n\nexport type ProgressRootStylesNames = 'root' | 'section' | 'label';\nexport type ProgressRootCssVariables = {\n  root: '--progress-size' | '--progress-radius' | '--progress-transition-duration';\n};\n\nexport interface __ProgressRootProps extends BoxProps, ElementProps<'div'> {\n  /** Controls track height, `'md'` by default */\n  size?: MantineSize | (string & {}) | number;\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius`, `theme.defaultRadius` by default */\n  radius?: MantineRadius;\n\n  /** Determines whether label text color should depend on `background-color`. If luminosity of the `color` prop is less than `theme.luminosityThreshold`, then `theme.white` will be used for text color, otherwise `theme.black`. Overrides `theme.autoContrast`. */\n  autoContrast?: boolean;\n\n  /** Controls sections width transition duration, value is specified in ms, `100` by default */\n  transitionDuration?: number;\n}\n\nexport interface ProgressRootProps\n  extends __ProgressRootProps,\n    StylesApiProps<ProgressRootFactory> {}\n\nexport type ProgressRootFactory = Factory<{\n  props: ProgressRootProps;\n  ref: HTMLDivElement;\n  stylesNames: ProgressRootStylesNames;\n  vars: ProgressRootCssVariables;\n}>;\n\nconst defaultProps: Partial<ProgressRootProps> = {};\n\nconst varsResolver = createVarsResolver<ProgressRootFactory>(\n  (_, { size, radius, transitionDuration }) => ({\n    root: {\n      '--progress-size': getSize(size, 'progress-size'),\n      '--progress-radius': radius === undefined ? undefined : getRadius(radius),\n      '--progress-transition-duration':\n        typeof transitionDuration === 'number' ? `${transitionDuration}ms` : undefined,\n    },\n  })\n);\n\nexport const ProgressRoot = factory<ProgressRootFactory>((_props, ref) => {\n  const props = useProps('ProgressRoot', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    autoContrast,\n    transitionDuration,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<ProgressRootFactory>({\n    name: 'Progress',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <ProgressProvider value={{ getStyles, autoContrast }}>\n      <Box ref={ref} {...getStyles('root')} {...others} />\n    </ProgressProvider>\n  );\n});\n\nProgressRoot.classes = classes;\nProgressRoot.displayName = '@mantine/core/ProgressRoot';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 8383, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8388, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Progress/ProgressSection/ProgressSection.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ProgressSection = registerClientReference(\n    function() { throw new Error(\"Attempted to call ProgressSection() from the server but ProgressSection is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Progress/ProgressSection/ProgressSection.mjs\",\n    \"ProgressSection\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,kBAAkB,2RAC3B;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,oGACA"}},
    {"offset": {"line": 8397, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8402, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Progress/ProgressSection/ProgressSection.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  CompoundStylesApiProps,\n  ElementProps,\n  factory,\n  Factory,\n  getAutoContrastValue,\n  getContrastColor,\n  getThemeColor,\n  MantineColor,\n  useMantineTheme,\n  useProps,\n} from '../../../core';\nimport { useProgressContext } from '../Progress.context';\nimport classes from '../Progress.module.css';\n\nexport type ProgressSectionStylesNames = 'section';\n\nexport interface ProgressSectionProps\n  extends BoxProps,\n    CompoundStylesApiProps<ProgressSectionFactory>,\n    ElementProps<'div'> {\n  /** Value of the section in 0–100 range  */\n  value: number;\n\n  /** Determines whether `aria-*` props should be added to the root element, `true` by default */\n  withAria?: boolean;\n\n  /** Key of `theme.colors` or any valid CSS value, `theme.primaryColor` by default */\n  color?: MantineColor;\n\n  /** Determines whether the section should have stipes, `false` by default */\n  striped?: boolean;\n\n  /** Determines whether the sections stripes should be animated, if set, `striped` prop is ignored, `false` by default */\n  animated?: boolean;\n}\n\nexport type ProgressSectionFactory = Factory<{\n  props: ProgressSectionProps;\n  ref: HTMLDivElement;\n  stylesNames: ProgressSectionStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<ProgressSectionProps> = {\n  withAria: true,\n};\n\nexport const ProgressSection = factory<ProgressSectionFactory>((props, ref) => {\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    vars,\n    value,\n    withAria,\n    color,\n    striped,\n    animated,\n    mod,\n    ...others\n  } = useProps('ProgressSection', defaultProps, props);\n\n  const ctx = useProgressContext();\n  const theme = useMantineTheme();\n\n  const ariaAttributes = withAria\n    ? {\n        role: 'progressbar',\n        'aria-valuemax': 100,\n        'aria-valuemin': 0,\n        'aria-valuenow': value,\n        'aria-valuetext': `${value}%`,\n      }\n    : {};\n\n  return (\n    <Box\n      ref={ref}\n      {...ctx.getStyles('section', { className, classNames, styles, style })}\n      {...others}\n      {...ariaAttributes}\n      mod={[{ striped: striped || animated, animated }, mod]}\n      __vars={{\n        '--progress-section-width': `${value}%`,\n        '--progress-section-color': getThemeColor(color, theme),\n        '--progress-label-color': getAutoContrastValue(ctx.autoContrast, theme)\n          ? getContrastColor({ color, theme })\n          : undefined,\n      }}\n    />\n  );\n});\n\nProgressSection.classes = classes;\nProgressSection.displayName = '@mantine/core/ProgressSection';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 8407, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8412, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Radio/Radio.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Radio = registerClientReference(\n    function() { throw new Error(\"Attempted to call Radio() from the server but Radio is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Radio/Radio.mjs\",\n    \"Radio\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,QAAQ,2RACjB;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,uEACA"}},
    {"offset": {"line": 8421, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8426, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Radio/Radio.tsx"],"sourcesContent":["import React from 'react';\nimport { useId } from '@mantine/hooks';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  extractStyleProps,\n  factory,\n  Factory,\n  getAutoContrastValue,\n  getContrastColor,\n  getRadius,\n  getSize,\n  getThemeColor,\n  MantineColor,\n  MantineRadius,\n  MantineSize,\n  parseThemeColor,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { InlineInput, InlineInputStylesNames } from '../InlineInput';\nimport { useRadioGroupContext } from './RadioGroup.context';\nimport { RadioGroup } from './RadioGroup/RadioGroup';\nimport { RadioIcon, RadioIconProps } from './RadioIcon';\nimport classes from './Radio.module.css';\n\nexport type RadioVariant = 'filled' | 'outline';\nexport type RadioStylesNames = InlineInputStylesNames | 'inner' | 'radio' | 'icon';\nexport type RadioCssVariables = {\n  root:\n    | '--radio-size'\n    | '--radio-radius'\n    | '--radio-color'\n    | '--radio-icon-color'\n    | '--radio-icon-size';\n};\n\nexport interface RadioProps\n  extends BoxProps,\n    StylesApiProps<RadioFactory>,\n    ElementProps<'input', 'size'> {\n  /** Content of the `label` associated with the radio */\n  label?: React.ReactNode;\n\n  /** Key of `theme.colors` or any valid CSS color to set input color in checked state, `theme.primaryColor` by default */\n  color?: MantineColor;\n\n  /** Controls size of the component, `'sm'` by default */\n  size?: MantineSize;\n\n  /** A component that replaces default check icon */\n  icon?: React.FC<RadioIconProps>;\n\n  /** Props passed down to the root element */\n  wrapperProps?: Record<string, any>;\n\n  /** Position of the label relative to the input, `'right'` by default */\n  labelPosition?: 'left' | 'right';\n\n  /** Description displayed below the label */\n  description?: React.ReactNode;\n\n  /** Error displayed below the label */\n  error?: React.ReactNode;\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius,` \"xl\" by default */\n  radius?: MantineRadius;\n\n  /** Assigns ref of the root element */\n  rootRef?: React.ForwardedRef<HTMLDivElement>;\n\n  /** Key of `theme.colors` or any valid CSS color to set icon color, by default value depends on `theme.autoContrast` */\n  iconColor?: MantineColor;\n\n  /** Determines whether icon color with filled variant should depend on `background-color`. If luminosity of the `color` prop is less than `theme.luminosityThreshold`, then `theme.white` will be used for text color, otherwise `theme.black`. Overrides `theme.autoContrast`. */\n  autoContrast?: boolean;\n}\n\nexport type RadioFactory = Factory<{\n  props: RadioProps;\n  ref: HTMLInputElement;\n  stylesNames: RadioStylesNames;\n  vars: RadioCssVariables;\n  variant: RadioVariant;\n  staticComponents: {\n    Group: typeof RadioGroup;\n  };\n}>;\n\nconst defaultProps: Partial<RadioProps> = {\n  labelPosition: 'right',\n};\n\nconst varsResolver = createVarsResolver<RadioFactory>(\n  (theme, { size, radius, color, iconColor, variant, autoContrast }) => {\n    const parsedColor = parseThemeColor({ color: color || theme.primaryColor, theme });\n    const outlineColor =\n      parsedColor.isThemeColor && parsedColor.shade === undefined\n        ? `var(--mantine-color-${parsedColor.color}-outline)`\n        : parsedColor.color;\n\n    return {\n      root: {\n        '--radio-size': getSize(size, 'radio-size'),\n        '--radio-radius': radius === undefined ? undefined : getRadius(radius),\n        '--radio-color': variant === 'outline' ? outlineColor : getThemeColor(color, theme),\n        '--radio-icon-color': iconColor\n          ? getThemeColor(iconColor, theme)\n          : getAutoContrastValue(autoContrast, theme)\n            ? getContrastColor({ color, theme })\n            : undefined,\n        '--radio-icon-size': getSize(size, 'radio-icon-size'),\n      },\n    };\n  }\n);\n\nexport const Radio = factory<RadioFactory>((_props, ref) => {\n  const props = useProps('Radio', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    id,\n    size,\n    label,\n    labelPosition,\n    description,\n    error,\n    radius,\n    color,\n    variant,\n    disabled,\n    wrapperProps,\n    icon: Icon = RadioIcon,\n    rootRef,\n    iconColor,\n    onChange,\n    mod,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<RadioFactory>({\n    name: 'Radio',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  const ctx = useRadioGroupContext();\n\n  const contextSize = ctx?.size ?? size;\n  const componentSize = props.size ? size : contextSize;\n\n  const { styleProps, rest } = extractStyleProps(others);\n  const uuid = useId(id);\n\n  const contextProps = ctx\n    ? {\n        checked: ctx.value === rest.value,\n        name: rest.name ?? ctx.name,\n        onChange: (event: React.ChangeEvent<HTMLInputElement>) => {\n          ctx.onChange(event);\n          onChange?.(event);\n        },\n      }\n    : {};\n\n  return (\n    <InlineInput\n      {...getStyles('root')}\n      __staticSelector=\"Radio\"\n      __stylesApiProps={props}\n      id={uuid}\n      size={componentSize}\n      labelPosition={labelPosition}\n      label={label}\n      description={description}\n      error={error}\n      disabled={disabled}\n      classNames={classNames}\n      styles={styles}\n      unstyled={unstyled}\n      data-checked={contextProps.checked || undefined}\n      variant={variant}\n      ref={rootRef}\n      mod={mod}\n      {...styleProps}\n      {...wrapperProps}\n    >\n      <Box {...getStyles('inner')} mod={{ 'label-position': labelPosition }}>\n        <Box\n          {...getStyles('radio', { focusable: true, variant })}\n          onChange={onChange}\n          {...rest}\n          {...contextProps}\n          component=\"input\"\n          mod={{ error: !!error }}\n          ref={ref}\n          id={uuid}\n          disabled={disabled}\n          type=\"radio\"\n        />\n        <Icon {...getStyles('icon')} aria-hidden />\n      </Box>\n    </InlineInput>\n  );\n});\n\nRadio.classes = classes;\nRadio.displayName = '@mantine/core/Radio';\nRadio.Group = RadioGroup;\n"],"names":[],"mappings":""}},
    {"offset": {"line": 8431, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8436, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Radio/RadioGroup/RadioGroup.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const RadioGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call RadioGroup() from the server but RadioGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Radio/RadioGroup/RadioGroup.mjs\",\n    \"RadioGroup\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,aAAa,2RACtB;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,uFACA"}},
    {"offset": {"line": 8445, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8450, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Radio/RadioGroup/RadioGroup.tsx"],"sourcesContent":["import React from 'react';\nimport { useId, useUncontrolled } from '@mantine/hooks';\nimport { factory, Factory, MantineSize, useProps } from '../../../core';\nimport { Input, InputWrapperProps, InputWrapperStylesNames } from '../../Input';\nimport { InputsGroupFieldset } from '../../InputsGroupFieldset';\nimport { RadioGroupProvider } from '../RadioGroup.context';\n\nexport type RadioGroupStylesNames = InputWrapperStylesNames;\n\nexport interface RadioGroupProps extends Omit<InputWrapperProps, 'onChange'> {\n  /** `Radio` components and any other elements */\n  children: React.ReactNode;\n\n  /** Controlled component value */\n  value?: string;\n\n  /** Default value for uncontrolled component */\n  defaultValue?: string;\n\n  /** Called when value changes */\n  onChange?: (value: string) => void;\n\n  /** Props passed down to the `Input.Wrapper` */\n  wrapperProps?: Record<string, any>;\n\n  /** Controls size of the `Input.Wrapper`, `'sm'` by default */\n  size?: MantineSize;\n\n  /** `name` attribute of child radio inputs. By default, `name` is generated randomly. */\n  name?: string;\n\n  /** If set, value cannot be changed */\n  readOnly?: boolean;\n}\n\nexport type RadioGroupFactory = Factory<{\n  props: RadioGroupProps;\n  ref: HTMLDivElement;\n  stylesNames: RadioGroupStylesNames;\n}>;\n\nconst defaultProps: Partial<RadioGroupProps> = {};\n\nexport const RadioGroup = factory<RadioGroupFactory>((props, ref) => {\n  const { value, defaultValue, onChange, size, wrapperProps, children, name, readOnly, ...others } =\n    useProps('RadioGroup', defaultProps, props);\n\n  const _name = useId(name);\n\n  const [_value, setValue] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: '',\n    onChange,\n  });\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n    !readOnly && setValue(event.currentTarget.value);\n\n  return (\n    <RadioGroupProvider value={{ value: _value, onChange: handleChange, size, name: _name }}>\n      <Input.Wrapper\n        size={size}\n        ref={ref}\n        {...wrapperProps}\n        {...others}\n        labelElement=\"div\"\n        __staticSelector=\"RadioGroup\"\n      >\n        <InputsGroupFieldset role=\"radiogroup\">{children}</InputsGroupFieldset>\n      </Input.Wrapper>\n    </RadioGroupProvider>\n  );\n});\n\nRadioGroup.classes = Input.Wrapper.classes;\nRadioGroup.displayName = '@mantine/core/RadioGroup';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 8455, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8460, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Radio/RadioIcon.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const RadioIcon = registerClientReference(\n    function() { throw new Error(\"Attempted to call RadioIcon() from the server but RadioIcon is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Radio/RadioIcon.mjs\",\n    \"RadioIcon\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,YAAY,2RACrB;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,2EACA"}},
    {"offset": {"line": 8469, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8474, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Radio/RadioIcon.tsx"],"sourcesContent":["import React from 'react';\nimport { rem } from '../../core';\n\nexport interface RadioIconProps extends React.ComponentPropsWithoutRef<'svg'> {\n  size?: string | number;\n}\n\nexport function RadioIcon({ size, style, ...others }: RadioIconProps) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fill=\"none\"\n      viewBox=\"0 0 5 5\"\n      style={{ width: rem(size), height: rem(size), ...style }}\n      aria-hidden\n      {...others}\n    >\n      <circle cx=\"2.5\" cy=\"2.5\" r=\"2.5\" fill=\"currentColor\" />\n    </svg>\n  );\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 8479, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8484, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Rating/Rating.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Rating = registerClientReference(\n    function() { throw new Error(\"Attempted to call Rating() from the server but Rating is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Rating/Rating.mjs\",\n    \"Rating\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,SAAS,2RAClB;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,yEACA"}},
    {"offset": {"line": 8493, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8498, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Rating/Rating.tsx"],"sourcesContent":["import React, { useRef, useState } from 'react';\nimport { clamp, useId, useMergedRef, useUncontrolled } from '@mantine/hooks';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getSize,\n  getThemeColor,\n  MantineColor,\n  MantineSize,\n  StylesApiProps,\n  useDirection,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { RatingProvider } from './Rating.context';\nimport { RatingItem } from './RatingItem/RatingItem';\nimport classes from './Rating.module.css';\n\nfunction roundValueTo(value: number, to: number) {\n  const rounded = Math.round(value / to) * to;\n  const precision = `${to}`.split('.')[1]?.length || 0;\n  return Number(rounded.toFixed(precision));\n}\n\nexport type RatingStylesNames =\n  | 'root'\n  | 'starSymbol'\n  | 'input'\n  | 'label'\n  | 'symbolBody'\n  | 'symbolGroup';\n\nexport type RatingCssVariables = {\n  root: '--rating-size' | '--rating-color';\n};\n\nexport interface RatingProps\n  extends BoxProps,\n    StylesApiProps<RatingFactory>,\n    ElementProps<'div', 'onChange'> {\n  /** Default value for uncontrolled component */\n  defaultValue?: number;\n\n  /** Value for controlled component */\n  value?: number;\n\n  /** Called when value changes */\n  onChange?: (value: number) => void;\n\n  /** Icon displayed when the symbol is empty */\n  emptySymbol?: React.ReactNode | ((value: number) => React.ReactNode);\n\n  /** Icon displayed when the symbol is full */\n  fullSymbol?: React.ReactNode | ((value: number) => React.ReactNode);\n\n  /** Number of fractions each item can be divided into, `1` by default */\n  fractions?: number;\n\n  /** Controls component size, `'sm'` by default */\n  size?: MantineSize | number | (string & {});\n\n  /** Number of controls, `5` by default */\n  count?: number;\n\n  /** Called when one of the controls is hovered */\n  onHover?: (value: number) => void;\n\n  /** A function to assign `aria-label` of the the control at index given in the argument. If not specified, control index is used as `aria-label`. */\n  getSymbolLabel?: (index: number) => string;\n\n  /** `name` attribute passed down to all inputs. By default, `name` is generated randomly. */\n  name?: string;\n\n  /** If set, the user cannot interact with the component, `false` by default */\n  readOnly?: boolean;\n\n  /** If set, only the selected symbol changes to full symbol when selected, `false` by default */\n  highlightSelectedOnly?: boolean;\n\n  /** Key of `theme.colors` or any CSS color value, `'yellow'` by default */\n  color?: MantineColor;\n}\n\nexport type RatingFactory = Factory<{\n  props: RatingProps;\n  ref: HTMLDivElement;\n  stylesNames: RatingStylesNames;\n  vars: RatingCssVariables;\n}>;\n\nconst defaultProps: Partial<RatingProps> = {\n  size: 'sm',\n  getSymbolLabel: (value) => `${value}`,\n  count: 5,\n  fractions: 1,\n  color: 'yellow',\n};\n\nconst varsResolver = createVarsResolver<RatingFactory>((theme, { size, color }) => ({\n  root: {\n    '--rating-size': getSize(size, 'rating-size'),\n    '--rating-color': getThemeColor(color, theme),\n  },\n}));\n\nexport const Rating = factory<RatingFactory>((_props, ref) => {\n  const props = useProps('Rating', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    name,\n    id,\n    value,\n    defaultValue,\n    onChange,\n    fractions,\n    count,\n    onMouseEnter,\n    readOnly,\n    onMouseMove,\n    onHover,\n    onMouseLeave,\n    onTouchStart,\n    onTouchEnd,\n    size,\n    variant,\n    getSymbolLabel,\n    color,\n    emptySymbol,\n    fullSymbol,\n    highlightSelectedOnly,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<RatingFactory>({\n    name: 'Rating',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  const { dir } = useDirection();\n\n  const _name = useId(name);\n  const _id = useId(id);\n  const rootRef = useRef<HTMLDivElement>(null);\n\n  const [_value, setValue] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: 0,\n    onChange,\n  });\n\n  const [hovered, setHovered] = useState(-1);\n  const [isOutside, setOutside] = useState(true);\n\n  const _fractions = Math.floor(fractions!);\n  const _count = Math.floor(count!);\n\n  const decimalUnit = 1 / _fractions;\n  const stableValueRounded = roundValueTo(_value, decimalUnit);\n  const finalValue = hovered !== -1 ? hovered : stableValueRounded;\n\n  const getRatingFromCoordinates = (x: number) => {\n    const { left, right, width } = rootRef.current!.getBoundingClientRect();\n    const symbolWidth = width / _count;\n\n    const hoverPosition = dir === 'rtl' ? right - x : x - left;\n    const hoverValue = hoverPosition / symbolWidth;\n\n    return clamp(roundValueTo(hoverValue + decimalUnit / 2, decimalUnit), decimalUnit, _count);\n  };\n\n  const handleMouseEnter = (event: React.MouseEvent<HTMLDivElement>) => {\n    onMouseEnter?.(event);\n    !readOnly && setOutside(false);\n  };\n\n  const handleMouseMove = (event: React.MouseEvent<HTMLDivElement>) => {\n    onMouseMove?.(event);\n\n    if (readOnly) {\n      return;\n    }\n\n    const rounded = getRatingFromCoordinates(event.clientX);\n\n    setHovered(rounded);\n    rounded !== hovered && onHover?.(rounded);\n  };\n\n  const handleMouseLeave = (event: React.MouseEvent<HTMLDivElement>) => {\n    onMouseLeave?.(event);\n\n    if (readOnly) {\n      return;\n    }\n\n    setHovered(-1);\n    setOutside(true);\n    hovered !== -1 && onHover?.(-1);\n  };\n\n  const handleTouchStart = (event: React.TouchEvent<HTMLDivElement>) => {\n    event.preventDefault();\n\n    const { touches } = event;\n    if (touches.length !== 1) {\n      return;\n    }\n\n    const touch = touches[0];\n    setValue(getRatingFromCoordinates(touch.clientX));\n\n    onTouchStart?.(event);\n  };\n\n  const handleTouchEnd = (event: React.TouchEvent<HTMLDivElement>) => {\n    event.preventDefault();\n\n    onTouchEnd?.(event);\n  };\n\n  const handleItemBlur = () => isOutside && setHovered(-1);\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement> | number) => {\n    if (!readOnly) {\n      if (typeof event === 'number') {\n        setHovered(event);\n      } else {\n        setHovered(parseFloat(event.target.value));\n      }\n    }\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement> | number) => {\n    if (!readOnly) {\n      if (typeof event === 'number') {\n        setValue(event);\n      } else {\n        setValue(parseFloat(event.target.value));\n      }\n    }\n  };\n\n  const items = Array(_count)\n    .fill(0)\n    .map((_, index) => {\n      const integerValue = index + 1;\n      const fractionItems = Array.from(new Array(index === 0 ? _fractions + 1 : _fractions));\n      const isGroupActive = !readOnly && Math.ceil(hovered) === integerValue;\n\n      return (\n        <div\n          key={integerValue}\n          data-active={isGroupActive || undefined}\n          {...getStyles('symbolGroup')}\n        >\n          {fractionItems.map((__, fractionIndex) => {\n            const fractionValue = decimalUnit * (index === 0 ? fractionIndex : fractionIndex + 1);\n            const symbolValue = roundValueTo(integerValue - 1 + fractionValue, decimalUnit);\n\n            return (\n              <RatingItem\n                key={`${integerValue}-${symbolValue}`}\n                getSymbolLabel={getSymbolLabel}\n                emptyIcon={emptySymbol}\n                fullIcon={fullSymbol}\n                full={\n                  highlightSelectedOnly ? symbolValue === finalValue : symbolValue <= finalValue\n                }\n                active={symbolValue === finalValue}\n                checked={symbolValue === stableValueRounded}\n                readOnly={readOnly}\n                fractionValue={fractionValue}\n                value={symbolValue}\n                name={_name}\n                onChange={handleChange}\n                onBlur={handleItemBlur}\n                onInputChange={handleInputChange}\n                id={`${_id}-${index}-${fractionIndex}`}\n              />\n            );\n          })}\n        </div>\n      );\n    });\n\n  return (\n    <RatingProvider value={{ getStyles }}>\n      <Box\n        ref={useMergedRef(rootRef, ref)}\n        {...getStyles('root')}\n        onMouseMove={handleMouseMove}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n        onTouchStart={handleTouchStart}\n        onTouchEnd={handleTouchEnd}\n        variant={variant}\n        size={size}\n        id={_id}\n        {...others}\n      >\n        {items}\n      </Box>\n    </RatingProvider>\n  );\n});\n\nRating.classes = classes;\nRating.displayName = '@mantine/core/Rating';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 8503, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8508, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/RingProgress/RingProgress.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const RingProgress = registerClientReference(\n    function() { throw new Error(\"Attempted to call RingProgress() from the server but RingProgress is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/RingProgress/RingProgress.mjs\",\n    \"RingProgress\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,eAAe,2RACxB;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,qFACA"}},
    {"offset": {"line": 8517, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8522, "column": 0}, "map": {"version":3,"sources":["../../../src/components/RingProgress/RingProgress.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  MantineColor,\n  rem,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { Curve } from './Curve/Curve';\nimport { getCurves } from './get-curves/get-curves';\nimport classes from './RingProgress.module.css';\n\nfunction getClampedThickness(thickness: number, size: number) {\n  return Math.min(thickness || 12, (size || 120) / 4);\n}\n\ninterface RingProgressSection extends React.ComponentPropsWithRef<'circle'> {\n  value: number;\n  color: MantineColor;\n  tooltip?: React.ReactNode;\n}\n\nexport type RingProgressStylesNames = 'root' | 'svg' | 'label' | 'curve';\nexport type RingProgressCssVariables = {\n  root: '--rp-size' | '--rp-label-offset';\n};\n\nexport interface RingProgressProps\n  extends BoxProps,\n    StylesApiProps<RingProgressFactory>,\n    ElementProps<'div'> {\n  /** Label displayed in the center of the ring */\n  label?: React.ReactNode;\n\n  /** Ring thickness */\n  thickness?: number;\n\n  /** Width and height of the progress ring */\n  size?: number;\n\n  /** Sets whether the edges of the progress circle are rounded */\n  roundCaps?: boolean;\n\n  /** Ring sections */\n  sections: RingProgressSection[];\n\n  /** Color of the root section, key of theme.colors or CSS color value */\n  rootColor?: MantineColor;\n}\n\nexport type RingProgressFactory = Factory<{\n  props: RingProgressProps;\n  ref: HTMLDivElement;\n  stylesNames: RingProgressStylesNames;\n  vars: RingProgressCssVariables;\n}>;\n\nconst defaultProps: Partial<RingProgressProps> = {\n  size: 120,\n  thickness: 12,\n};\n\nconst varsResolver = createVarsResolver<RingProgressFactory>((_, { size, thickness }) => ({\n  root: {\n    '--rp-size': rem(size),\n    '--rp-label-offset': rem(thickness! * 2),\n  },\n}));\n\nexport const RingProgress = factory<RingProgressFactory>((_props, ref) => {\n  const props = useProps('RingProgress', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    label,\n    sections,\n    size,\n    thickness,\n    roundCaps,\n    rootColor,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<RingProgressFactory>({\n    name: 'RingProgress',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  const clampedThickness = getClampedThickness(thickness!, size!);\n\n  const curves = getCurves({\n    size: size!,\n    thickness: clampedThickness,\n    sections,\n    renderRoundedLineCaps: roundCaps,\n    rootColor,\n  }).map(({ data, sum, root, lineRoundCaps, offset }, index) => (\n    <Curve\n      {...data}\n      key={index}\n      size={size!}\n      thickness={clampedThickness}\n      sum={sum}\n      offset={offset}\n      color={data?.color}\n      root={root}\n      lineRoundCaps={lineRoundCaps}\n      getStyles={getStyles}\n    />\n  ));\n\n  return (\n    <Box {...getStyles('root')} size={size} ref={ref} {...others}>\n      <svg {...getStyles('svg')}>{curves}</svg>\n      {label && <div {...getStyles('label')}>{label}</div>}\n    </Box>\n  );\n});\n\nRingProgress.classes = classes;\nRingProgress.displayName = '@mantine/core/RingProgress';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 8527, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8532, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/SegmentedControl/SegmentedControl.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const SegmentedControl = registerClientReference(\n    function() { throw new Error(\"Attempted to call SegmentedControl() from the server but SegmentedControl is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/SegmentedControl/SegmentedControl.mjs\",\n    \"SegmentedControl\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,mBAAmB,2RAC5B;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,6FACA"}},
    {"offset": {"line": 8541, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8546, "column": 0}, "map": {"version":3,"sources":["../../../src/components/SegmentedControl/SegmentedControl.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useId, useMergedRef, useMounted, useUncontrolled } from '@mantine/hooks';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  Factory,\n  factory,\n  getContrastColor,\n  getFontSize,\n  getRadius,\n  getSize,\n  getThemeColor,\n  MantineColor,\n  MantineRadius,\n  MantineSize,\n  StylesApiProps,\n  useMantineTheme,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { FloatingIndicator } from '../FloatingIndicator';\nimport classes from './SegmentedControl.module.css';\n\nexport type SegmentedControlStylesNames =\n  | 'root'\n  | 'input'\n  | 'label'\n  | 'control'\n  | 'indicator'\n  | 'innerLabel';\nexport type SegmentedControlCssVariables = {\n  root:\n    | '--sc-radius'\n    | '--sc-color'\n    | '--sc-font-size'\n    | '--sc-padding'\n    | '--sc-shadow'\n    | '--sc-transition-duration'\n    | '--sc-transition-timing-function';\n};\n\nexport interface SegmentedControlItem {\n  value: string;\n  label: React.ReactNode;\n  disabled?: boolean;\n}\n\nexport interface SegmentedControlProps\n  extends BoxProps,\n    StylesApiProps<SegmentedControlFactory>,\n    ElementProps<'div', 'onChange'> {\n  /** Data based on which controls are rendered */\n  data: (string | SegmentedControlItem)[];\n\n  /** Controlled component value */\n  value?: string;\n\n  /** Uncontrolled component default value */\n  defaultValue?: string;\n\n  /** Called when value changes */\n  onChange?: (value: string) => void;\n\n  /** Determines whether the component is disabled */\n  disabled?: boolean;\n\n  /** Name of the radio group, by default random name is generated */\n  name?: string;\n\n  /** Determines whether the component should take 100% width of its parent, `false` by default */\n  fullWidth?: boolean;\n\n  /** Key of `theme.colors` or any valid CSS color, changes color of indicator, by default color is based on current color scheme */\n  color?: MantineColor;\n\n  /** Controls `font-size`, `padding` and `height` properties, `'sm'` by default */\n  size?: MantineSize | (string & {});\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius`, numbers are converted to rem, `theme.defaultRadius` by default */\n  radius?: MantineRadius;\n\n  /** Indicator `transition-duration` in ms, set `0` to turn off transitions, `200` by default */\n  transitionDuration?: number;\n\n  /** Indicator `transition-timing-function` property, `ease` by default */\n  transitionTimingFunction?: string;\n\n  /** Determines in which orientation component id displayed, `'horizontal'` by default */\n  orientation?: 'vertical' | 'horizontal';\n\n  /** Determines whether the value can be changed */\n  readOnly?: boolean;\n\n  /** Determines whether text color should depend on `background-color` of the indicator. If luminosity of the `color` prop is less than `theme.luminosityThreshold`, then `theme.white` will be used for text color, otherwise `theme.black`. Overrides `theme.autoContrast`. */\n  autoContrast?: boolean;\n\n  /** Determines whether there should be borders between items, `true` by default */\n  withItemsBorders?: boolean;\n}\n\nexport type SegmentedControlFactory = Factory<{\n  props: SegmentedControlProps;\n  ref: HTMLDivElement;\n  stylesNames: SegmentedControlStylesNames;\n  vars: SegmentedControlCssVariables;\n}>;\n\nconst defaultProps: Partial<SegmentedControlProps> = {\n  withItemsBorders: true,\n};\n\nconst varsResolver = createVarsResolver<SegmentedControlFactory>(\n  (theme, { radius, color, transitionDuration, size, transitionTimingFunction }) => ({\n    root: {\n      '--sc-radius': radius === undefined ? undefined : getRadius(radius),\n      '--sc-color': color ? getThemeColor(color, theme) : undefined,\n      '--sc-shadow': color ? undefined : 'var(--mantine-shadow-xs)',\n      '--sc-transition-duration':\n        transitionDuration === undefined ? undefined : `${transitionDuration}ms`,\n      '--sc-transition-timing-function': transitionTimingFunction,\n      '--sc-padding': getSize(size, 'sc-padding'),\n      '--sc-font-size': getFontSize(size),\n    },\n  })\n);\n\nexport const SegmentedControl = factory<SegmentedControlFactory>((_props, ref) => {\n  const props = useProps('SegmentedControl', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    data,\n    value,\n    defaultValue,\n    onChange,\n    size,\n    name,\n    disabled,\n    readOnly,\n    fullWidth,\n    orientation,\n    radius,\n    color,\n    transitionDuration,\n    transitionTimingFunction,\n    variant,\n    autoContrast,\n    withItemsBorders,\n    mod,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<SegmentedControlFactory>({\n    name: 'SegmentedControl',\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  const theme = useMantineTheme();\n\n  const _data = data.map((item) =>\n    typeof item === 'string' ? { label: item, value: item } : item\n  );\n\n  const initialized = useMounted();\n  const [parent, setParent] = useState<HTMLElement | null>(null);\n  const [refs, setRefs] = useState<Record<string, HTMLElement | null>>({});\n  const setElementRef = (element: HTMLElement | null, val: string) => {\n    refs[val] = element;\n    setRefs(refs);\n  };\n\n  const [_value, handleValueChange] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: Array.isArray(data)\n      ? _data.find((item) => !item.disabled)?.value ?? (data[0] as any)?.value ?? null\n      : null,\n    onChange,\n  });\n\n  const uuid = useId(name);\n\n  const controls = _data.map((item) => (\n    <Box\n      {...getStyles('control')}\n      mod={{ active: _value === item.value, orientation }}\n      key={item.value}\n    >\n      <input\n        {...getStyles('input')}\n        disabled={disabled || item.disabled}\n        type=\"radio\"\n        name={uuid}\n        value={item.value}\n        id={`${uuid}-${item.value}`}\n        checked={_value === item.value}\n        onChange={() => !readOnly && handleValueChange(item.value)}\n        data-focus-ring={theme.focusRing}\n      />\n\n      <Box\n        component=\"label\"\n        {...getStyles('label')}\n        mod={{\n          active: _value === item.value && !(disabled || item.disabled),\n          disabled: disabled || item.disabled,\n          'read-only': readOnly,\n        }}\n        htmlFor={`${uuid}-${item.value}`}\n        ref={(node) => setElementRef(node, item.value)}\n        __vars={{\n          '--sc-label-color':\n            color !== undefined ? getContrastColor({ color, theme, autoContrast }) : undefined,\n        }}\n      >\n        <span {...getStyles('innerLabel')}>{item.label}</span>\n      </Box>\n    </Box>\n  ));\n\n  const mergedRef = useMergedRef(ref, (node) => setParent(node));\n\n  if (data.length === 0) {\n    return null;\n  }\n\n  return (\n    <Box\n      {...getStyles('root')}\n      variant={variant}\n      size={size}\n      ref={mergedRef}\n      mod={[\n        {\n          'full-width': fullWidth,\n          orientation,\n          initialized,\n          'with-items-borders': withItemsBorders,\n        },\n        mod,\n      ]}\n      {...others}\n      role=\"radiogroup\"\n    >\n      {typeof _value === 'string' && (\n        <FloatingIndicator\n          target={refs[_value]}\n          parent={parent}\n          component=\"span\"\n          transitionDuration=\"var(--sc-transition-duration)\"\n          {...getStyles('indicator')}\n        />\n      )}\n\n      {controls}\n    </Box>\n  );\n});\n\nSegmentedControl.classes = classes;\nSegmentedControl.displayName = '@mantine/core/SegmentedControl';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 8551, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8556, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Select/Select.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Select = registerClientReference(\n    function() { throw new Error(\"Attempted to call Select() from the server but Select is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Select/Select.mjs\",\n    \"Select\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,SAAS,2RAClB;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,yEACA"}},
    {"offset": {"line": 8565, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8570, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Select/Select.tsx"],"sourcesContent":["import React, { useEffect, useMemo } from 'react';\nimport { useId, useUncontrolled } from '@mantine/hooks';\nimport {\n  BoxProps,\n  ElementProps,\n  Factory,\n  factory,\n  StylesApiProps,\n  useProps,\n  useResolvedStylesApi,\n} from '../../core';\nimport { __CloseButtonProps } from '../CloseButton';\nimport {\n  Combobox,\n  ComboboxItem,\n  ComboboxLikeProps,\n  ComboboxLikeRenderOptionInput,\n  ComboboxLikeStylesNames,\n  getOptionsLockup,\n  getParsedComboboxData,\n  OptionsDropdown,\n  useCombobox,\n} from '../Combobox';\nimport { __BaseInputProps, __InputStylesNames, InputVariant } from '../Input';\nimport { InputBase } from '../InputBase';\nimport { ScrollAreaProps } from '../ScrollArea';\n\nexport type SelectStylesNames = __InputStylesNames | ComboboxLikeStylesNames;\n\nexport interface SelectProps\n  extends BoxProps,\n    __BaseInputProps,\n    ComboboxLikeProps,\n    StylesApiProps<SelectFactory>,\n    ElementProps<'input', 'onChange' | 'size' | 'value' | 'defaultValue'> {\n  /** Controlled component value */\n  value?: string | null;\n\n  /** Uncontrolled component default value */\n  defaultValue?: string | null;\n\n  /** Called when value changes */\n  onChange?: (value: string | null, option: ComboboxItem) => void;\n\n  /** Called when the clear button is clicked */\n  onClear?: () => void;\n\n  /** Determines whether the select should be searchable, `false` by default */\n  searchable?: boolean;\n\n  /** Determines whether check icon should be displayed near the selected option label, `true` by default */\n  withCheckIcon?: boolean;\n\n  /** Position of the check icon relative to the option label, `'left'` by default */\n  checkIconPosition?: 'left' | 'right';\n\n  /** Message displayed when no option matched current search query, only applicable when `searchable` prop is set */\n  nothingFoundMessage?: React.ReactNode;\n\n  /** Controlled search value */\n  searchValue?: string;\n\n  /** Default search value */\n  defaultSearchValue?: string;\n\n  /** Called when search changes */\n  onSearchChange?: (value: string) => void;\n\n  /** Determines whether it should be possible to deselect value by clicking on the selected option, `true` by default */\n  allowDeselect?: boolean;\n\n  /** Determines whether the clear button should be displayed in the right section when the component has value, `false` by default */\n  clearable?: boolean;\n\n  /** Props passed down to the clear button */\n  clearButtonProps?: __CloseButtonProps & ElementProps<'button'>;\n\n  /** Props passed down to the hidden input */\n  hiddenInputProps?: Omit<React.ComponentPropsWithoutRef<'input'>, 'value'>;\n\n  /** A function to render content of the option, replaces the default content of the option */\n  renderOption?: (item: ComboboxLikeRenderOptionInput<ComboboxItem>) => React.ReactNode;\n\n  /** Props passed down to the underlying `ScrollArea` component in the dropdown */\n  scrollAreaProps?: ScrollAreaProps;\n}\n\nexport type SelectFactory = Factory<{\n  props: SelectProps;\n  ref: HTMLInputElement;\n  stylesNames: SelectStylesNames;\n  variant: InputVariant;\n}>;\n\nconst defaultProps: Partial<SelectProps> = {\n  searchable: false,\n  withCheckIcon: true,\n  allowDeselect: true,\n  checkIconPosition: 'left',\n};\n\nexport const Select = factory<SelectFactory>((_props, ref) => {\n  const props = useProps('Select', defaultProps, _props);\n  const {\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    dropdownOpened,\n    defaultDropdownOpened,\n    onDropdownClose,\n    onDropdownOpen,\n    onFocus,\n    onBlur,\n    onClick,\n    onChange,\n    data,\n    value,\n    defaultValue,\n    selectFirstOptionOnChange,\n    onOptionSubmit,\n    comboboxProps,\n    readOnly,\n    disabled,\n    filter,\n    limit,\n    withScrollArea,\n    maxDropdownHeight,\n    size,\n    searchable,\n    rightSection,\n    checkIconPosition,\n    withCheckIcon,\n    nothingFoundMessage,\n    name,\n    form,\n    searchValue,\n    defaultSearchValue,\n    onSearchChange,\n    allowDeselect,\n    error,\n    rightSectionPointerEvents,\n    id,\n    clearable,\n    clearButtonProps,\n    hiddenInputProps,\n    renderOption,\n    onClear,\n    autoComplete,\n    scrollAreaProps,\n    ...others\n  } = props;\n\n  const parsedData = useMemo(() => getParsedComboboxData(data), [data]);\n  const optionsLockup = useMemo(() => getOptionsLockup(parsedData), [parsedData]);\n  const _id = useId(id);\n\n  const [_value, setValue, controlled] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: null,\n    onChange,\n  });\n\n  const selectedOption = typeof _value === 'string' ? optionsLockup[_value] : undefined;\n  const [search, setSearch] = useUncontrolled({\n    value: searchValue,\n    defaultValue: defaultSearchValue,\n    finalValue: selectedOption ? selectedOption.label : '',\n    onChange: onSearchChange,\n  });\n\n  const combobox = useCombobox({\n    opened: dropdownOpened,\n    defaultOpened: defaultDropdownOpened,\n    onDropdownOpen: () => {\n      onDropdownOpen?.();\n      combobox.updateSelectedOptionIndex('active', { scrollIntoView: true });\n    },\n    onDropdownClose: () => {\n      onDropdownClose?.();\n      combobox.resetSelectedOption();\n    },\n  });\n\n  const { resolvedClassNames, resolvedStyles } = useResolvedStylesApi<SelectFactory>({\n    props,\n    styles,\n    classNames,\n  });\n\n  useEffect(() => {\n    if (selectFirstOptionOnChange) {\n      combobox.selectFirstOption();\n    }\n  }, [selectFirstOptionOnChange, _value]);\n\n  useEffect(() => {\n    if (value === null) {\n      setSearch('');\n    }\n\n    if (typeof value === 'string' && selectedOption) {\n      setSearch(selectedOption.label);\n    }\n  }, [value, selectedOption]);\n\n  const clearButton = clearable && !!_value && !disabled && !readOnly && (\n    <Combobox.ClearButton\n      size={size as string}\n      {...clearButtonProps}\n      onClear={() => {\n        setValue(null, null);\n        setSearch('');\n        onClear?.();\n      }}\n    />\n  );\n\n  return (\n    <>\n      <Combobox\n        store={combobox}\n        __staticSelector=\"Select\"\n        classNames={resolvedClassNames}\n        styles={resolvedStyles}\n        unstyled={unstyled}\n        readOnly={readOnly}\n        onOptionSubmit={(val) => {\n          onOptionSubmit?.(val);\n          const optionLockup = allowDeselect\n            ? optionsLockup[val].value === _value\n              ? null\n              : optionsLockup[val]\n            : optionsLockup[val];\n\n          const nextValue = optionLockup ? optionLockup.value : null;\n\n          setValue(nextValue, optionLockup);\n          !controlled && setSearch(typeof nextValue === 'string' ? optionLockup?.label || '' : '');\n          combobox.closeDropdown();\n        }}\n        size={size}\n        {...comboboxProps}\n      >\n        <Combobox.Target targetType={searchable ? 'input' : 'button'} autoComplete={autoComplete}>\n          <InputBase\n            id={_id}\n            ref={ref}\n            rightSection={\n              rightSection ||\n              clearButton || <Combobox.Chevron size={size} error={error} unstyled={unstyled} />\n            }\n            rightSectionPointerEvents={rightSectionPointerEvents || (clearButton ? 'all' : 'none')}\n            {...others}\n            size={size}\n            __staticSelector=\"Select\"\n            disabled={disabled}\n            readOnly={readOnly || !searchable}\n            value={search}\n            onChange={(event) => {\n              setSearch(event.currentTarget.value);\n              combobox.openDropdown();\n              selectFirstOptionOnChange && combobox.selectFirstOption();\n            }}\n            onFocus={(event) => {\n              searchable && combobox.openDropdown();\n              onFocus?.(event);\n            }}\n            onBlur={(event) => {\n              searchable && combobox.closeDropdown();\n              setSearch(_value != null ? optionsLockup[_value]?.label || '' : '');\n              onBlur?.(event);\n            }}\n            onClick={(event) => {\n              searchable ? combobox.openDropdown() : combobox.toggleDropdown();\n              onClick?.(event);\n            }}\n            classNames={resolvedClassNames}\n            styles={resolvedStyles}\n            unstyled={unstyled}\n            pointer={!searchable}\n            error={error}\n          />\n        </Combobox.Target>\n        <OptionsDropdown\n          data={parsedData}\n          hidden={readOnly || disabled}\n          filter={filter}\n          search={search}\n          limit={limit}\n          hiddenWhenEmpty={!searchable || !nothingFoundMessage}\n          withScrollArea={withScrollArea}\n          maxDropdownHeight={maxDropdownHeight}\n          filterOptions={searchable && selectedOption?.label !== search}\n          value={_value}\n          checkIconPosition={checkIconPosition}\n          withCheckIcon={withCheckIcon}\n          nothingFoundMessage={nothingFoundMessage}\n          unstyled={unstyled}\n          labelId={`${_id}-label`}\n          renderOption={renderOption}\n          scrollAreaProps={scrollAreaProps}\n        />\n      </Combobox>\n      <Combobox.HiddenInput\n        value={_value}\n        name={name}\n        form={form}\n        disabled={disabled}\n        {...hiddenInputProps}\n      />\n    </>\n  );\n});\n\nSelect.classes = { ...InputBase.classes, ...Combobox.classes };\nSelect.displayName = '@mantine/core/Select';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 8575, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8580, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/SimpleGrid/SimpleGrid.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const SimpleGrid = registerClientReference(\n    function() { throw new Error(\"Attempted to call SimpleGrid() from the server but SimpleGrid is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/SimpleGrid/SimpleGrid.mjs\",\n    \"SimpleGrid\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,aAAa,2RACtB;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,iFACA"}},
    {"offset": {"line": 8589, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8594, "column": 0}, "map": {"version":3,"sources":["../../../src/components/SimpleGrid/SimpleGrid.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  ElementProps,\n  Factory,\n  factory,\n  MantineSpacing,\n  StyleProp,\n  StylesApiProps,\n  useProps,\n  useRandomClassName,\n  useStyles,\n} from '../../core';\nimport { SimpleGridVariables } from './SimpleGridVariables';\nimport classes from './SimpleGrid.module.css';\n\nexport type SimpleGridStylesNames = 'root';\n\nexport interface SimpleGridProps\n  extends BoxProps,\n    StylesApiProps<SimpleGridFactory>,\n    ElementProps<'div'> {\n  /** Number of columns, `1` by default */\n  cols?: StyleProp<number>;\n\n  /** Spacing between columns, `'md'` by default */\n  spacing?: StyleProp<MantineSpacing>;\n\n  /** Spacing between rows, `'md'` by default */\n  verticalSpacing?: StyleProp<MantineSpacing>;\n}\n\nexport type SimpleGridFactory = Factory<{\n  props: SimpleGridProps;\n  ref: HTMLDivElement;\n  stylesNames: SimpleGridStylesNames;\n}>;\n\nconst defaultProps: Partial<SimpleGridProps> = {\n  cols: 1,\n  spacing: 'md',\n};\n\nexport const SimpleGrid = factory<SimpleGridFactory>((_props, ref) => {\n  const props = useProps('SimpleGrid', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    cols,\n    verticalSpacing,\n    spacing,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<SimpleGridFactory>({\n    name: 'SimpleGrid',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n  });\n\n  const responsiveClassName = useRandomClassName();\n\n  return (\n    <>\n      <SimpleGridVariables {...props} selector={`.${responsiveClassName}`} />\n      <Box ref={ref} {...getStyles('root', { className: responsiveClassName })} {...others} />\n    </>\n  );\n});\n\nSimpleGrid.classes = classes;\nSimpleGrid.displayName = '@mantine/core/SimpleGrid';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 8599, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8604, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Skeleton/Skeleton.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Skeleton = registerClientReference(\n    function() { throw new Error(\"Attempted to call Skeleton() from the server but Skeleton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Skeleton/Skeleton.mjs\",\n    \"Skeleton\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,WAAW,2RACpB;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,6EACA"}},
    {"offset": {"line": 8613, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8618, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Skeleton/Skeleton.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getRadius,\n  rem,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport classes from './Skeleton.module.css';\n\nexport type SkeletonStylesNames = 'root';\nexport type SkeletonCssVariables = {\n  root: '--skeleton-width' | '--skeleton-height' | '--skeleton-radius';\n};\n\nexport interface SkeletonProps\n  extends BoxProps,\n    StylesApiProps<SkeletonFactory>,\n    ElementProps<'div'> {\n  /** Determines whether Skeleton overlay should be displayed, `true` by default */\n  visible?: boolean;\n\n  /** Skeleton `height`, numbers are converted to rem, `auto` by default */\n  height?: React.CSSProperties['height'];\n\n  /** Skeleton `width`, numbers are converted to rem, `100%` by default, ignored when `circle` prop is set */\n  width?: React.CSSProperties['width'];\n\n  /** If set, Skeleton `width` and `border-radius` are equal to its `height`, `false` by default */\n  circle?: boolean;\n\n  /** Key of `theme.radius` or any valid CSS value to set border-radius. Numbers are converted to rem. `theme.defaultRadius` by default. */\n  radius?: React.CSSProperties['borderRadius'];\n\n  /** Determines whether Skeleton should be animated, `true` by default */\n  animate?: boolean;\n}\n\nexport type SkeletonFactory = Factory<{\n  props: SkeletonProps;\n  ref: HTMLDivElement;\n  stylesNames: SkeletonStylesNames;\n  vars: SkeletonCssVariables;\n}>;\n\nconst defaultProps: Partial<SkeletonProps> = {\n  visible: true,\n  animate: true,\n};\n\nconst varsResolver = createVarsResolver<SkeletonFactory>(\n  (_, { width, height, radius, circle }) => ({\n    root: {\n      '--skeleton-height': rem(height),\n      '--skeleton-width': circle ? rem(height) : rem(width),\n      '--skeleton-radius': circle ? '1000px' : radius === undefined ? undefined : getRadius(radius),\n    },\n  })\n);\n\nexport const Skeleton = factory<SkeletonFactory>((_props, ref) => {\n  const props = useProps('Skeleton', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    width,\n    height,\n    circle,\n    visible,\n    radius,\n    animate,\n    mod,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<SkeletonFactory>({\n    name: 'Skeleton',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return <Box ref={ref} {...getStyles('root')} mod={[{ visible, animate }, mod]} {...others} />;\n});\n\nSkeleton.classes = classes;\nSkeleton.displayName = '@mantine/core/Skeleton';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 8623, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8628, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Slider/Slider/Slider.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Slider = registerClientReference(\n    function() { throw new Error(\"Attempted to call Slider() from the server but Slider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Slider/Slider/Slider.mjs\",\n    \"Slider\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,SAAS,2RAClB;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,gFACA"}},
    {"offset": {"line": 8637, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8642, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Slider/Slider/Slider.tsx"],"sourcesContent":["import React, { useCallback, useRef, useState } from 'react';\nimport { clamp, useMergedRef, useMove, useUncontrolled } from '@mantine/hooks';\nimport {\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getRadius,\n  getSize,\n  getThemeColor,\n  MantineColor,\n  MantineRadius,\n  MantineSize,\n  rem,\n  StylesApiProps,\n  useDirection,\n  useProps,\n  useStyles,\n} from '../../../core';\nimport { TransitionOverride } from '../../Transition';\nimport { SliderCssVariables, SliderProvider, SliderStylesNames } from '../Slider.context';\nimport { SliderRoot } from '../SliderRoot/SliderRoot';\nimport { Thumb } from '../Thumb/Thumb';\nimport { Track } from '../Track/Track';\nimport { getChangeValue } from '../utils/get-change-value/get-change-value';\nimport { getFloatingValue } from '../utils/get-floating-value/get-gloating-value';\nimport { getPosition } from '../utils/get-position/get-position';\nimport { getPrecision } from '../utils/get-precision/get-precision';\nimport classes from '../Slider.module.css';\n\nexport interface SliderProps\n  extends BoxProps,\n    StylesApiProps<SliderFactory>,\n    ElementProps<'div', 'onChange'> {\n  /** Key of `theme.colors` or any valid CSS color, controls color of track and thumb, `theme.primaryColor` by default */\n  color?: MantineColor;\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius`, numbers are converted to rem, `'xl'` by default */\n  radius?: MantineRadius;\n\n  /** Controls size of the track, `'md'` by default */\n  size?: MantineSize | (string & {}) | number;\n\n  /** Minimal possible value, `0` by default */\n  min?: number;\n\n  /** Maximum possible value, `100` by default */\n  max?: number;\n\n  /** Number by which value will be incremented/decremented with thumb drag and arrows, `1` by default */\n  step?: number;\n\n  /** Number of significant digits after the decimal point */\n  precision?: number;\n\n  /** Controlled component value */\n  value?: number;\n\n  /** Uncontrolled component default value */\n  defaultValue?: number;\n\n  /** Called when value changes */\n  onChange?: (value: number) => void;\n\n  /** Called when user stops dragging slider or changes value with arrows */\n  onChangeEnd?: (value: number) => void;\n\n  /** Hidden input name, use with uncontrolled component */\n  name?: string;\n\n  /** Marks displayed on the track */\n  marks?: { value: number; label?: React.ReactNode }[];\n\n  /** Function to generate label or any react node to render instead, set to null to disable label */\n  label?: React.ReactNode | ((value: number) => React.ReactNode);\n\n  /** Props passed down to the `Transition` component, `{ transition: 'fade', duration: 0 }` by default */\n  labelTransitionProps?: TransitionOverride;\n\n  /** Determines whether the label should be visible when the slider is not being dragged or hovered, `false` by default */\n  labelAlwaysOn?: boolean;\n\n  /** Thumb `aria-label` */\n  thumbLabel?: string;\n\n  /** Determines whether the label should be displayed when the slider is hovered, `true` by default */\n  showLabelOnHover?: boolean;\n\n  /** Content rendered inside thumb */\n  thumbChildren?: React.ReactNode;\n\n  /** Disables slider */\n  disabled?: boolean;\n\n  /** Thumb `width` and `height`, by default value is computed based on `size` prop */\n  thumbSize?: number | string;\n\n  /** A transformation function to change the scale of the slider */\n  scale?: (value: number) => number;\n\n  /** Determines whether track value representation should be inverted, `false` by default */\n  inverted?: boolean;\n\n  /** Props passed down to the hidden input */\n  hiddenInputProps?: React.ComponentPropsWithoutRef<'input'>;\n}\n\nexport type SliderFactory = Factory<{\n  props: SliderProps;\n  ref: HTMLDivElement;\n  stylesNames: SliderStylesNames;\n  vars: SliderCssVariables;\n}>;\n\nconst defaultProps: Partial<SliderProps> = {\n  radius: 'xl',\n  min: 0,\n  max: 100,\n  step: 1,\n  marks: [],\n  label: (f) => f,\n  labelTransitionProps: { transition: 'fade', duration: 0 },\n  labelAlwaysOn: false,\n  thumbLabel: '',\n  showLabelOnHover: true,\n  disabled: false,\n  scale: (v) => v,\n};\n\nconst varsResolver = createVarsResolver<SliderFactory>(\n  (theme, { size, color, thumbSize, radius }) => ({\n    root: {\n      '--slider-size': getSize(size, 'slider-size'),\n      '--slider-color': color ? getThemeColor(color, theme) : undefined,\n      '--slider-radius': radius === undefined ? undefined : getRadius(radius),\n      '--slider-thumb-size':\n        thumbSize !== undefined ? rem(thumbSize) : 'calc(var(--slider-size) * 2)',\n    },\n  })\n);\n\nexport const Slider = factory<SliderFactory>((_props, ref) => {\n  const props = useProps('Slider', defaultProps, _props);\n  const {\n    classNames,\n    styles,\n    value,\n    onChange,\n    onChangeEnd,\n    size,\n    min,\n    max,\n    step,\n    precision: _precision,\n    defaultValue,\n    name,\n    marks,\n    label,\n    labelTransitionProps,\n    labelAlwaysOn,\n    thumbLabel,\n    showLabelOnHover,\n    thumbChildren,\n    disabled,\n    unstyled,\n    scale,\n    inverted,\n    className,\n    style,\n    vars,\n    hiddenInputProps,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<SliderFactory>({\n    name: 'Slider',\n    props,\n    classes,\n    classNames,\n    className,\n    styles,\n    style,\n    vars,\n    varsResolver,\n    unstyled,\n  });\n\n  const { dir } = useDirection();\n  const [hovered, setHovered] = useState(false);\n  const [_value, setValue] = useUncontrolled({\n    value: typeof value === 'number' ? clamp(value, min!, max!) : value,\n    defaultValue: typeof defaultValue === 'number' ? clamp(defaultValue, min!, max!) : defaultValue,\n    finalValue: clamp(0, min!, max!),\n    onChange,\n  });\n\n  const valueRef = useRef(_value);\n  const root = useRef<HTMLDivElement>();\n  const thumb = useRef<HTMLDivElement>();\n  const position = getPosition({ value: _value, min: min!, max: max! });\n  const scaledValue = scale!(_value);\n  const _label = typeof label === 'function' ? label(scaledValue) : label;\n  const precision = _precision ?? getPrecision(step!);\n\n  const handleChange = useCallback(\n    ({ x }: { x: number }) => {\n      if (!disabled) {\n        const nextValue = getChangeValue({\n          value: x,\n          min: min!,\n          max: max!,\n          step: step!,\n          precision,\n        });\n        setValue(nextValue);\n        valueRef.current = nextValue;\n      }\n    },\n    [disabled, min, max, step, precision, setValue]\n  );\n\n  const { ref: container, active } = useMove(\n    handleChange,\n    { onScrubEnd: () => onChangeEnd?.(valueRef.current) },\n    dir\n  );\n\n  const handleTrackKeydownCapture = (event: React.KeyboardEvent<HTMLDivElement>) => {\n    if (!disabled) {\n      switch (event.key) {\n        case 'ArrowUp': {\n          event.preventDefault();\n          thumb.current?.focus();\n          const nextValue = getFloatingValue(\n            Math.min(Math.max(_value + step!, min!), max!),\n            precision\n          );\n          onChangeEnd?.(nextValue);\n          setValue(nextValue);\n          break;\n        }\n\n        case 'ArrowRight': {\n          event.preventDefault();\n          thumb.current?.focus();\n          const nextValue = getFloatingValue(\n            Math.min(Math.max(dir === 'rtl' ? _value - step! : _value + step!, min!), max!),\n            precision\n          );\n          onChangeEnd?.(nextValue);\n          setValue(nextValue);\n          break;\n        }\n\n        case 'ArrowDown': {\n          event.preventDefault();\n          thumb.current?.focus();\n          const nextValue = getFloatingValue(\n            Math.min(Math.max(_value - step!, min!), max!),\n            precision\n          );\n          onChangeEnd?.(nextValue);\n          setValue(nextValue);\n          break;\n        }\n\n        case 'ArrowLeft': {\n          event.preventDefault();\n          thumb.current?.focus();\n          const nextValue = getFloatingValue(\n            Math.min(Math.max(dir === 'rtl' ? _value + step! : _value - step!, min!), max!),\n            precision\n          );\n          onChangeEnd?.(nextValue);\n          setValue(nextValue);\n          break;\n        }\n\n        case 'Home': {\n          event.preventDefault();\n          thumb.current?.focus();\n          onChangeEnd?.(min!);\n          setValue(min!);\n          break;\n        }\n\n        case 'End': {\n          event.preventDefault();\n          thumb.current?.focus();\n          onChangeEnd?.(max!);\n          setValue(max!);\n          break;\n        }\n\n        default: {\n          break;\n        }\n      }\n    }\n  };\n\n  return (\n    <SliderProvider value={{ getStyles }}>\n      <SliderRoot\n        {...others}\n        ref={useMergedRef(ref, root)}\n        onKeyDownCapture={handleTrackKeydownCapture}\n        onMouseDownCapture={() => root.current?.focus()}\n        size={size!}\n        disabled={disabled}\n      >\n        <Track\n          inverted={inverted}\n          offset={0}\n          filled={position}\n          marks={marks}\n          min={min!}\n          max={max!}\n          value={scaledValue}\n          disabled={disabled}\n          containerProps={{\n            ref: container as any,\n            onMouseEnter: showLabelOnHover ? () => setHovered(true) : undefined,\n            onMouseLeave: showLabelOnHover ? () => setHovered(false) : undefined,\n          }}\n        >\n          <Thumb\n            max={max!}\n            min={min!}\n            value={scaledValue}\n            position={position}\n            dragging={active}\n            label={_label}\n            ref={thumb as any}\n            labelTransitionProps={labelTransitionProps}\n            labelAlwaysOn={labelAlwaysOn}\n            thumbLabel={thumbLabel}\n            showLabelOnHover={showLabelOnHover}\n            isHovered={hovered}\n            disabled={disabled}\n          >\n            {thumbChildren}\n          </Thumb>\n        </Track>\n\n        <input type=\"hidden\" name={name} value={scaledValue} {...hiddenInputProps} />\n      </SliderRoot>\n    </SliderProvider>\n  );\n});\n\nSlider.classes = classes;\nSlider.displayName = '@mantine/core/Slider';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 8647, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8652, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Slider/RangeSlider/RangeSlider.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const RangeSlider = registerClientReference(\n    function() { throw new Error(\"Attempted to call RangeSlider() from the server but RangeSlider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Slider/RangeSlider/RangeSlider.mjs\",\n    \"RangeSlider\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,cAAc,2RACvB;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,0FACA"}},
    {"offset": {"line": 8661, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8666, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Slider/RangeSlider/RangeSlider.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { useMove, useUncontrolled } from '@mantine/hooks';\nimport {\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getRadius,\n  getSize,\n  getThemeColor,\n  MantineColor,\n  MantineRadius,\n  MantineSize,\n  rem,\n  StylesApiProps,\n  useDirection,\n  useProps,\n  useStyles,\n} from '../../../core';\nimport { TransitionOverride } from '../../Transition';\nimport { SliderCssVariables, SliderProvider, SliderStylesNames } from '../Slider.context';\nimport { SliderRoot } from '../SliderRoot/SliderRoot';\nimport { Thumb } from '../Thumb/Thumb';\nimport { Track } from '../Track/Track';\nimport { getChangeValue } from '../utils/get-change-value/get-change-value';\nimport { getClientPosition } from '../utils/get-client-position/get-client-position';\nimport { getFloatingValue } from '../utils/get-floating-value/get-gloating-value';\nimport { getPosition } from '../utils/get-position/get-position';\nimport { getPrecision } from '../utils/get-precision/get-precision';\nimport classes from '../Slider.module.css';\n\nexport type RangeSliderValue = [number, number];\n\nexport interface RangeSliderProps\n  extends BoxProps,\n    StylesApiProps<RangeSliderFactory>,\n    ElementProps<'div', 'onChange' | 'value' | 'defaultValue'> {\n  /** Key of `theme.colors` or any valid CSS color, controls color of track and thumb, `theme.primaryColor` by default */\n  color?: MantineColor;\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius`, numbers are converted to rem, `'xl'` by default */\n  radius?: MantineRadius;\n\n  /** Controls size of the track, `'md'` by default */\n  size?: MantineSize | (string & {}) | number;\n\n  /** Minimal possible value, `0` by default */\n  min?: number;\n\n  /** Maximum possible value, `100` by default */\n  max?: number;\n\n  /** Number by which value will be incremented/decremented with thumb drag and arrows, `1` by default */\n  step?: number;\n\n  /** Number of significant digits after the decimal point */\n  precision?: number;\n\n  /** Controlled component value */\n  value?: RangeSliderValue;\n\n  /** Uncontrolled component default value */\n  defaultValue?: RangeSliderValue;\n\n  /** Called when value changes */\n  onChange?: (value: RangeSliderValue) => void;\n\n  /** Called when user stops dragging slider or changes value with arrows */\n  onChangeEnd?: (value: RangeSliderValue) => void;\n\n  /** Hidden input name, use with uncontrolled component */\n  name?: string;\n\n  /** Marks displayed on the track */\n  marks?: { value: number; label?: React.ReactNode }[];\n\n  /** Function to generate label or any react node to render instead, set to null to disable label */\n  label?: React.ReactNode | ((value: number) => React.ReactNode);\n\n  /** Props passed down to the `Transition` component, `{ transition: 'fade', duration: 0 }` by default */\n  labelTransitionProps?: TransitionOverride;\n\n  /** Determines whether the label should be visible when the slider is not being dragged or hovered, `false` by default */\n  labelAlwaysOn?: boolean;\n\n  /** Determines whether the label should be displayed when the slider is hovered, `true` by default */\n  showLabelOnHover?: boolean;\n\n  /** Content rendered inside thumb */\n  thumbChildren?: React.ReactNode;\n\n  /** Disables slider */\n  disabled?: boolean;\n\n  /** Thumb `width` and `height`, by default value is computed based on `size` prop */\n  thumbSize?: number | string;\n\n  /** A transformation function to change the scale of the slider */\n  scale?: (value: number) => number;\n\n  /** Determines whether track values representation should be inverted, `false` by default */\n  inverted?: boolean;\n\n  /** Minimal range interval, `10` by default */\n  minRange?: number;\n\n  /** Maximum range interval, `Infinity` by default */\n  maxRange?: number;\n\n  /** First thumb `aria-label` */\n  thumbFromLabel?: string;\n\n  /** Second thumb `aria-label` */\n  thumbToLabel?: string;\n\n  /** Props passed down to the hidden input */\n  hiddenInputProps?: React.ComponentPropsWithoutRef<'input'>;\n}\n\nexport type RangeSliderFactory = Factory<{\n  props: RangeSliderProps;\n  ref: HTMLDivElement;\n  stylesNames: SliderStylesNames;\n  vars: SliderCssVariables;\n}>;\n\nconst varsResolver = createVarsResolver<RangeSliderFactory>(\n  (theme, { size, color, thumbSize, radius }) => ({\n    root: {\n      '--slider-size': getSize(size, 'slider-size'),\n      '--slider-color': color ? getThemeColor(color, theme) : undefined,\n      '--slider-radius': radius === undefined ? undefined : getRadius(radius),\n      '--slider-thumb-size':\n        thumbSize !== undefined ? rem(thumbSize) : 'calc(var(--slider-size) * 2)',\n    },\n  })\n);\n\nconst defaultProps: Partial<RangeSliderProps> = {\n  min: 0,\n  max: 100,\n  minRange: 10,\n  step: 1,\n  marks: [],\n  label: (f) => f,\n  labelTransitionProps: { transition: 'fade', duration: 0 },\n  labelAlwaysOn: false,\n  showLabelOnHover: true,\n  disabled: false,\n  scale: (v) => v,\n};\n\nexport const RangeSlider = factory<RangeSliderFactory>((_props, ref) => {\n  const props = useProps('RangeSlider', defaultProps, _props);\n  const {\n    classNames,\n    styles,\n    value,\n    onChange,\n    onChangeEnd,\n    size,\n    min,\n    max,\n    minRange,\n    maxRange,\n    step,\n    precision: _precision,\n    defaultValue,\n    name,\n    marks,\n    label,\n    labelTransitionProps,\n    labelAlwaysOn,\n    thumbFromLabel,\n    thumbToLabel,\n    showLabelOnHover,\n    thumbChildren,\n    disabled,\n    unstyled,\n    scale,\n    inverted,\n    className,\n    style,\n    vars,\n    hiddenInputProps,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<RangeSliderFactory>({\n    name: 'Slider',\n    props,\n    classes,\n    classNames,\n    className,\n    styles,\n    style,\n    vars,\n    varsResolver,\n    unstyled,\n  });\n\n  const { dir } = useDirection();\n  const [focused, setFocused] = useState(-1);\n  const [hovered, setHovered] = useState(false);\n  const [_value, setValue] = useUncontrolled<RangeSliderValue>({\n    value,\n    defaultValue,\n    finalValue: [min!, max!],\n    onChange,\n  });\n  const valueRef = useRef(_value);\n  const thumbs = useRef<HTMLDivElement[]>([]);\n  const thumbIndex = useRef<number | undefined>(undefined);\n  const positions = [\n    getPosition({ value: _value[0], min: min!, max: max! }),\n    getPosition({ value: _value[1], min: min!, max: max! }),\n  ];\n\n  const precision = _precision ?? getPrecision(step!);\n\n  const _setValue = (val: RangeSliderValue) => {\n    setValue(val);\n    valueRef.current = val;\n  };\n\n  useEffect(\n    () => {\n      if (Array.isArray(value)) {\n        valueRef.current = value;\n      }\n    },\n    Array.isArray(value) ? [value[0], value[1]] : [null, null]\n  );\n\n  const setRangedValue = (val: number, index: number, triggerChangeEnd: boolean) => {\n    const clone: RangeSliderValue = [...valueRef.current];\n    clone[index] = val;\n\n    if (index === 0) {\n      if (val > clone[1] - (minRange! - 0.000000001)) {\n        clone[1] = Math.min(val + minRange!, max!);\n      }\n\n      if (val > (max! - (minRange! - 0.000000001) || min!)) {\n        clone[index] = valueRef.current[index];\n      }\n\n      if (clone[1] - val > maxRange!) {\n        clone[1] = val + maxRange!;\n      }\n    }\n\n    if (index === 1) {\n      if (val < clone[0] + minRange!) {\n        clone[0] = Math.max(val - minRange!, min!);\n      }\n\n      if (val < clone[0] + minRange!) {\n        clone[index] = valueRef.current[index];\n      }\n\n      if (val - clone[0] > maxRange!) {\n        clone[0] = val - maxRange!;\n      }\n    }\n\n    clone[0] = getFloatingValue(clone[0], precision);\n    clone[1] = getFloatingValue(clone[1], precision);\n\n    _setValue(clone);\n\n    if (triggerChangeEnd) {\n      onChangeEnd?.(valueRef.current);\n    }\n  };\n\n  const handleChange = (val: number) => {\n    if (!disabled) {\n      const nextValue = getChangeValue({\n        value: val,\n        min: min!,\n        max: max!,\n        step: step!,\n        precision,\n      });\n      setRangedValue(nextValue, thumbIndex.current!, false);\n    }\n  };\n\n  const { ref: container, active } = useMove(\n    ({ x }) => handleChange(x),\n    { onScrubEnd: () => onChangeEnd?.(valueRef.current) },\n    dir\n  );\n\n  function handleThumbMouseDown(index: number) {\n    thumbIndex.current = index;\n  }\n\n  const handleTrackMouseDownCapture = (\n    event: React.MouseEvent<HTMLDivElement> | React.TouchEvent<HTMLDivElement>\n  ) => {\n    container.current!.focus();\n    const rect = container.current!.getBoundingClientRect();\n    const changePosition = getClientPosition(event.nativeEvent);\n    const changeValue = getChangeValue({\n      value: changePosition - rect.left,\n      max: max!,\n      min: min!,\n      step: step!,\n      containerWidth: rect.width,\n    });\n\n    const nearestHandle =\n      Math.abs(_value[0] - changeValue) > Math.abs(_value[1] - changeValue) ? 1 : 0;\n    const _nearestHandle = dir === 'ltr' ? nearestHandle : nearestHandle === 1 ? 0 : 1;\n\n    thumbIndex.current = _nearestHandle;\n  };\n\n  const getFocusedThumbIndex = () => {\n    if (focused !== 1 && focused !== 0) {\n      setFocused(0);\n      return 0;\n    }\n\n    return focused;\n  };\n\n  const handleTrackKeydownCapture = (event: React.KeyboardEvent<HTMLDivElement>) => {\n    if (!disabled) {\n      switch (event.key) {\n        case 'ArrowUp': {\n          event.preventDefault();\n          const focusedIndex = getFocusedThumbIndex();\n          thumbs.current[focusedIndex].focus();\n          setRangedValue(\n            getFloatingValue(\n              Math.min(Math.max(valueRef.current[focusedIndex] + step!, min!), max!),\n              precision\n            ),\n            focusedIndex,\n            true\n          );\n          break;\n        }\n        case 'ArrowRight': {\n          event.preventDefault();\n          const focusedIndex = getFocusedThumbIndex();\n          thumbs.current[focusedIndex].focus();\n          setRangedValue(\n            getFloatingValue(\n              Math.min(\n                Math.max(\n                  dir === 'rtl'\n                    ? valueRef.current[focusedIndex] - step!\n                    : valueRef.current[focusedIndex] + step!,\n                  min!\n                ),\n                max!\n              ),\n              precision\n            ),\n            focusedIndex,\n            true\n          );\n          break;\n        }\n\n        case 'ArrowDown': {\n          event.preventDefault();\n          const focusedIndex = getFocusedThumbIndex();\n          thumbs.current[focusedIndex].focus();\n          setRangedValue(\n            getFloatingValue(\n              Math.min(Math.max(valueRef.current[focusedIndex] - step!, min!), max!),\n              precision\n            ),\n            focusedIndex,\n            true\n          );\n          break;\n        }\n        case 'ArrowLeft': {\n          event.preventDefault();\n          const focusedIndex = getFocusedThumbIndex();\n          thumbs.current[focusedIndex].focus();\n          setRangedValue(\n            getFloatingValue(\n              Math.min(\n                Math.max(\n                  dir === 'rtl'\n                    ? valueRef.current[focusedIndex] + step!\n                    : valueRef.current[focusedIndex] - step!,\n                  min!\n                ),\n                max!\n              ),\n              precision\n            ),\n            focusedIndex,\n            true\n          );\n          break;\n        }\n\n        default: {\n          break;\n        }\n      }\n    }\n  };\n\n  const sharedThumbProps = {\n    max: max!,\n    min: min!,\n    size,\n    labelTransitionProps,\n    labelAlwaysOn,\n    onBlur: () => setFocused(-1),\n  };\n\n  const hasArrayThumbChildren = Array.isArray(thumbChildren);\n\n  return (\n    <SliderProvider value={{ getStyles }}>\n      <SliderRoot {...others} size={size!} ref={ref} disabled={disabled}>\n        <Track\n          offset={positions[0]}\n          marksOffset={_value[0]}\n          filled={positions[1] - positions[0]}\n          marks={marks}\n          inverted={inverted}\n          min={min!}\n          max={max!}\n          value={_value[1]}\n          disabled={disabled}\n          containerProps={{\n            ref: container as any,\n            onMouseEnter: showLabelOnHover ? () => setHovered(true) : undefined,\n            onMouseLeave: showLabelOnHover ? () => setHovered(false) : undefined,\n            onTouchStartCapture: handleTrackMouseDownCapture,\n            onTouchEndCapture: () => {\n              thumbIndex.current = -1;\n            },\n            onMouseDownCapture: handleTrackMouseDownCapture,\n            onMouseUpCapture: () => {\n              thumbIndex.current = -1;\n            },\n            onKeyDownCapture: handleTrackKeydownCapture,\n          }}\n        >\n          <Thumb\n            {...sharedThumbProps}\n            value={scale!(_value[0])}\n            position={positions[0]}\n            dragging={active}\n            label={\n              typeof label === 'function'\n                ? label(getFloatingValue(scale!(_value[0]), precision))\n                : label\n            }\n            ref={(node) => {\n              thumbs.current[0] = node!;\n            }}\n            thumbLabel={thumbFromLabel}\n            onMouseDown={() => handleThumbMouseDown(0)}\n            onFocus={() => setFocused(0)}\n            showLabelOnHover={showLabelOnHover}\n            isHovered={hovered}\n            disabled={disabled}\n          >\n            {hasArrayThumbChildren ? thumbChildren[0] : thumbChildren}\n          </Thumb>\n\n          <Thumb\n            {...sharedThumbProps}\n            thumbLabel={thumbToLabel}\n            value={scale!(_value[1])}\n            position={positions[1]}\n            dragging={active}\n            label={\n              typeof label === 'function'\n                ? label(getFloatingValue(scale!(_value[1]), precision))\n                : label\n            }\n            ref={(node) => {\n              thumbs.current[1] = node!;\n            }}\n            onMouseDown={() => handleThumbMouseDown(1)}\n            onFocus={() => setFocused(1)}\n            showLabelOnHover={showLabelOnHover}\n            isHovered={hovered}\n            disabled={disabled}\n          >\n            {hasArrayThumbChildren ? thumbChildren[1] : thumbChildren}\n          </Thumb>\n        </Track>\n\n        <input type=\"hidden\" name={`${name}_from`} value={_value[0]} {...hiddenInputProps} />\n        <input type=\"hidden\" name={`${name}_to`} value={_value[1]} {...hiddenInputProps} />\n      </SliderRoot>\n    </SliderProvider>\n  );\n});\n\nRangeSlider.classes = classes;\nRangeSlider.displayName = '@mantine/core/RangeSlider';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 8671, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8676, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Space/Space.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Space = registerClientReference(\n    function() { throw new Error(\"Attempted to call Space() from the server but Space is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Space/Space.mjs\",\n    \"Space\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,QAAQ,2RACjB;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,uEACA"}},
    {"offset": {"line": 8685, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8690, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Space/Space.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  ElementProps,\n  factory,\n  Factory,\n  StylesApiProps,\n  useProps,\n} from '../../core';\n\nexport interface SpaceProps extends BoxProps, StylesApiProps<SpaceFactory>, ElementProps<'div'> {}\n\nexport type SpaceFactory = Factory<{\n  props: SpaceProps;\n  ref: HTMLDivElement;\n}>;\n\nconst defaultProps: Partial<SpaceProps> = {};\n\nexport const Space = factory<SpaceFactory>((props, ref) => {\n  const { w, h, miw, mih, ...others } = useProps('Space', defaultProps, props);\n  return <Box ref={ref} {...others} w={w} miw={miw ?? w} h={h} mih={mih ?? h} />;\n});\n\nSpace.displayName = '@mantine/core/Space';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 8695, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8700, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Spoiler/Spoiler.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Spoiler = registerClientReference(\n    function() { throw new Error(\"Attempted to call Spoiler() from the server but Spoiler is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Spoiler/Spoiler.mjs\",\n    \"Spoiler\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,UAAU,2RACnB;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,2EACA"}},
    {"offset": {"line": 8709, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8714, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Spoiler/Spoiler.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useElementSize, useId } from '@mantine/hooks';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  rem,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { Anchor } from '../Anchor';\nimport classes from './Spoiler.module.css';\n\nexport type SpoilerStylesNames = 'root' | 'control' | 'content';\nexport type SpoilerCssVariables = {\n  root: '--spoiler-transition-duration';\n};\n\nexport interface SpoilerProps\n  extends BoxProps,\n    StylesApiProps<SpoilerFactory>,\n    ElementProps<'div'> {\n  /** Maximum height of the visible content, when this point is reached spoiler appears, `100` by default */\n  maxHeight?: number;\n\n  /** Label for close spoiler action */\n  hideLabel: React.ReactNode;\n\n  /** Label for open spoiler action */\n  showLabel: React.ReactNode;\n\n  /** Get ref of spoiler toggle button */\n  controlRef?: React.ForwardedRef<HTMLButtonElement>;\n\n  /** Initial spoiler state, true to wrap content in spoiler, false to show content without spoiler, opened state is updated on mount */\n  initialState?: boolean;\n\n  /** Spoiler reveal transition duration in ms, set 0 or null to turn off animation, `200` by default */\n  transitionDuration?: number;\n}\n\nexport type SpoilerFactory = Factory<{\n  props: SpoilerProps;\n  ref: HTMLDivElement;\n  stylesNames: SpoilerStylesNames;\n  vars: SpoilerCssVariables;\n}>;\n\nconst defaultProps: Partial<SpoilerProps> = {\n  maxHeight: 100,\n  initialState: false,\n};\n\nconst varsResolver = createVarsResolver<SpoilerFactory>((_, { transitionDuration }) => ({\n  root: {\n    '--spoiler-transition-duration':\n      transitionDuration !== undefined ? `${transitionDuration}ms` : undefined,\n  },\n}));\n\nexport const Spoiler = factory<SpoilerFactory>((_props, ref) => {\n  const props = useProps('Spoiler', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    initialState,\n    maxHeight,\n    hideLabel,\n    showLabel,\n    children,\n    controlRef,\n    transitionDuration,\n    id,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<SpoilerFactory>({\n    name: 'Spoiler',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  const _id = useId(id);\n  const regionId = `${_id}-region`;\n  const [show, setShowState] = useState(initialState);\n  const { ref: contentRef, height } = useElementSize();\n  const spoilerMoreContent = show ? hideLabel : showLabel;\n  const spoiler = spoilerMoreContent !== null && maxHeight! < height;\n\n  return (\n    <Box\n      {...getStyles('root')}\n      id={_id}\n      ref={ref}\n      data-has-spoiler={spoiler || undefined}\n      {...others}\n    >\n      {spoiler && (\n        <Anchor\n          component=\"button\"\n          type=\"button\"\n          ref={controlRef}\n          onClick={() => setShowState((opened) => !opened)}\n          aria-expanded={show}\n          aria-controls={regionId}\n          {...getStyles('control')}\n        >\n          {spoilerMoreContent}\n        </Anchor>\n      )}\n      <div\n        {...getStyles('content', {\n          style: { maxHeight: !show ? rem(maxHeight) : height ? rem(height) : undefined },\n        })}\n        data-reduce-motion\n        role=\"region\"\n        id={regionId}\n      >\n        <div ref={contentRef}>{children}</div>\n      </div>\n    </Box>\n  );\n});\n\nSpoiler.classes = classes;\nSpoiler.displayName = '@mantine/core/Spoiler';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 8719, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8724, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Stack/Stack.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Stack = registerClientReference(\n    function() { throw new Error(\"Attempted to call Stack() from the server but Stack is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Stack/Stack.mjs\",\n    \"Stack\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,QAAQ,2RACjB;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,uEACA"}},
    {"offset": {"line": 8733, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8738, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Stack/Stack.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getSpacing,\n  MantineSpacing,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport classes from './Stack.module.css';\n\nexport type StackStylesNames = 'root';\nexport type StackCssVariables = {\n  root: '--stack-gap' | '--stack-align' | '--stack-justify';\n};\n\nexport interface StackProps extends BoxProps, StylesApiProps<StackFactory>, ElementProps<'div'> {\n  /** Key of `theme.spacing` or any valid CSS value to set `gap` property, numbers are converted to rem, `'md'` by default */\n  gap?: MantineSpacing;\n\n  /** Controls `align-items` CSS property, `'stretch'` by default */\n  align?: React.CSSProperties['alignItems'];\n\n  /** Controls `justify-content` CSS property, `'flex-start'` by default */\n  justify?: React.CSSProperties['justifyContent'];\n}\n\nexport type StackFactory = Factory<{\n  props: StackProps;\n  ref: HTMLDivElement;\n  stylesNames: StackStylesNames;\n  vars: StackCssVariables;\n}>;\n\nconst defaultProps: Partial<StackProps> = {\n  gap: 'md',\n  align: 'stretch',\n  justify: 'flex-start',\n};\n\nconst varsResolver = createVarsResolver<StackFactory>((_, { gap, align, justify }) => ({\n  root: {\n    '--stack-gap': getSpacing(gap),\n    '--stack-align': align,\n    '--stack-justify': justify,\n  },\n}));\n\nexport const Stack = factory<StackFactory>((_props, ref) => {\n  const props = useProps('Stack', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    align,\n    justify,\n    gap,\n    variant,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<StackFactory>({\n    name: 'Stack',\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return <Box ref={ref} {...getStyles('root')} variant={variant} {...others} />;\n});\n\nStack.classes = classes;\nStack.displayName = '@mantine/core/Stack';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 8743, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8748, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Stepper/Stepper.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Stepper = registerClientReference(\n    function() { throw new Error(\"Attempted to call Stepper() from the server but Stepper is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Stepper/Stepper.mjs\",\n    \"Stepper\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,UAAU,2RACnB;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,2EACA"}},
    {"offset": {"line": 8757, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8762, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Stepper/Stepper.tsx"],"sourcesContent":["import React, { Children, cloneElement } from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getAutoContrastValue,\n  getContrastColor,\n  getFontSize,\n  getRadius,\n  getSize,\n  getSpacing,\n  getThemeColor,\n  MantineColor,\n  MantineRadius,\n  MantineSize,\n  MantineSpacing,\n  rem,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { StepperProvider } from './Stepper.context';\nimport { StepperCompleted } from './StepperCompleted/StepperCompleted';\nimport { StepperStep } from './StepperStep/StepperStep';\nimport classes from './Stepper.module.css';\n\nexport type StepFragmentComponent = React.FC<{ step: number }>;\n\nexport type StepperStylesNames =\n  | 'root'\n  | 'separator'\n  | 'steps'\n  | 'content'\n  | 'step'\n  | 'stepLoader'\n  | 'verticalSeparator'\n  | 'stepWrapper'\n  | 'stepIcon'\n  | 'stepCompletedIcon'\n  | 'stepBody'\n  | 'stepLabel'\n  | 'stepDescription';\n\nexport type StepperCssVariables = {\n  root:\n    | '--stepper-color'\n    | '--stepper-icon-color'\n    | '--stepper-icon-size'\n    | '--stepper-content-padding'\n    | '--stepper-radius'\n    | '--stepper-fz'\n    | '--stepper-spacing';\n};\n\nexport interface StepperProps\n  extends BoxProps,\n    StylesApiProps<StepperFactory>,\n    ElementProps<'div'> {\n  /** <Stepper.Step /> components */\n  children: React.ReactNode;\n\n  /** Called when step is clicked */\n  onStepClick?: (stepIndex: number) => void;\n\n  /** Index of the active step */\n  active: number;\n\n  /** Step icon, default value is step index + 1 */\n  icon?: React.ReactNode | StepFragmentComponent;\n\n  /** Step icon displayed when step is completed, check icon by default */\n  completedIcon?: React.ReactNode | StepFragmentComponent;\n\n  /** Step icon displayed when step is in progress, default value is step index + 1 */\n  progressIcon?: React.ReactNode | StepFragmentComponent;\n\n  /** Key of `theme.colors` or any valid CSS color, controls colors of active and progress steps, `theme.primaryColor` by default */\n  color?: MantineColor;\n\n  /** Controls size of the step icon, by default icon size is inferred from `size` prop */\n  iconSize?: number | string;\n\n  /** Key of `theme.spacing` or any valid CSS value to set `padding-top` of the content */\n  contentPadding?: MantineSpacing;\n\n  /** Stepper orientation, `'horizontal'` by default */\n  orientation?: 'vertical' | 'horizontal';\n\n  /** Icon position relative to the step body, `'left'` by default */\n  iconPosition?: 'right' | 'left';\n\n  /** Controls size of various Stepper elements */\n  size?: MantineSize;\n\n  /** Key of `theme.radius` or any valid CSS value to set steps border-radius, `\"xl\"` by default */\n  radius?: MantineRadius;\n\n  /** Determines whether next steps can be selected, `true` by default **/\n  allowNextStepsSelect?: boolean;\n\n  /** Determines whether steps should wrap to the next line if no space is available, `true` by default */\n  wrap?: boolean;\n\n  /** Determines whether icon color with filled variant should depend on `background-color`. If luminosity of the `color` prop is less than `theme.luminosityThreshold`, then `theme.white` will be used for text color, otherwise `theme.black`. Overrides `theme.autoContrast`. */\n  autoContrast?: boolean;\n}\n\nexport type StepperFactory = Factory<{\n  props: StepperProps;\n  ref: HTMLDivElement;\n  stylesNames: StepperStylesNames;\n  vars: StepperCssVariables;\n  staticComponents: {\n    Step: typeof StepperStep;\n    Completed: typeof StepperCompleted;\n  };\n}>;\n\nconst defaultProps: Partial<StepperProps> = {\n  orientation: 'horizontal',\n  iconPosition: 'left',\n  allowNextStepsSelect: true,\n  wrap: true,\n};\n\nconst varsResolver = createVarsResolver<StepperFactory>(\n  (theme, { color, iconSize, size, contentPadding, radius, autoContrast }) => ({\n    root: {\n      '--stepper-color': color ? getThemeColor(color, theme) : undefined,\n      '--stepper-icon-color': getAutoContrastValue(autoContrast, theme)\n        ? getContrastColor({ color, theme })\n        : undefined,\n      '--stepper-icon-size':\n        iconSize === undefined ? getSize(size, 'stepper-icon-size') : rem(iconSize),\n      '--stepper-content-padding': getSpacing(contentPadding),\n      '--stepper-radius': radius === undefined ? undefined : getRadius(radius),\n      '--stepper-fz': getFontSize(size),\n      '--stepper-spacing': getSpacing(size),\n    },\n  })\n);\n\nexport const Stepper = factory<StepperFactory>((_props, ref) => {\n  const props = useProps('Stepper', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    children,\n    onStepClick,\n    active,\n    icon,\n    completedIcon,\n    progressIcon,\n    color,\n    iconSize,\n    contentPadding,\n    orientation,\n    iconPosition,\n    size,\n    radius,\n    allowNextStepsSelect,\n    wrap,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<StepperFactory>({\n    name: 'Stepper',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  const convertedChildren = Children.toArray(children) as React.ReactElement[];\n  const _children = convertedChildren.filter((child) => child.type !== StepperCompleted);\n  const completedStep = convertedChildren.find((item) => item.type === StepperCompleted);\n\n  const items = _children.reduce<React.ReactElement[]>((acc, item, index) => {\n    const state =\n      active === index ? 'stepProgress' : active > index ? 'stepCompleted' : 'stepInactive';\n\n    const shouldAllowSelect = () => {\n      if (typeof onStepClick !== 'function') {\n        return false;\n      }\n\n      if (typeof item.props.allowStepSelect === 'boolean') {\n        return item.props.allowStepSelect;\n      }\n\n      return state === 'stepCompleted' || allowNextStepsSelect;\n    };\n\n    const isStepSelectionEnabled = shouldAllowSelect();\n\n    acc.push(\n      cloneElement(item, {\n        icon: item.props.icon || icon || index + 1,\n        key: index,\n        step: index,\n        state,\n        onClick: () => isStepSelectionEnabled && onStepClick?.(index),\n        allowStepClick: isStepSelectionEnabled,\n        completedIcon: item.props.completedIcon || completedIcon,\n        progressIcon: item.props.progressIcon || progressIcon,\n        color: item.props.color || color,\n        iconSize,\n        radius,\n        iconPosition: item.props.iconPosition || iconPosition,\n        orientation,\n        unstyled,\n      })\n    );\n\n    if (orientation === 'horizontal' && index !== _children.length - 1) {\n      acc.push(\n        <div\n          {...getStyles('separator')}\n          data-active={index < active || undefined}\n          data-orientation={orientation}\n          key={`separator-${index}`}\n        />\n      );\n    }\n\n    return acc;\n  }, []);\n\n  const stepContent = _children[active]?.props?.children;\n  const completedContent = completedStep?.props?.children;\n  const content = active > _children.length - 1 ? completedContent : stepContent;\n\n  return (\n    <StepperProvider value={{ getStyles, orientation, iconPosition }}>\n      <Box {...getStyles('root')} ref={ref} size={size} {...others}>\n        <Box\n          {...getStyles('steps')}\n          mod={{\n            orientation,\n            'icon-position': iconPosition,\n            wrap: wrap && orientation !== 'vertical',\n          }}\n        >\n          {items}\n        </Box>\n        {content && <div {...getStyles('content')}>{content}</div>}\n      </Box>\n    </StepperProvider>\n  );\n});\n\nStepper.classes = classes;\nStepper.displayName = '@mantine/core/Stepper';\nStepper.Completed = StepperCompleted;\nStepper.Step = StepperStep;\n"],"names":[],"mappings":""}},
    {"offset": {"line": 8767, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8772, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Stepper/StepperStep/StepperStep.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const StepperStep = registerClientReference(\n    function() { throw new Error(\"Attempted to call StepperStep() from the server but StepperStep is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Stepper/StepperStep/StepperStep.mjs\",\n    \"StepperStep\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,cAAc,2RACvB;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,2FACA"}},
    {"offset": {"line": 8781, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8786, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Stepper/StepperStep/StepperStep.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  BoxProps,\n  CompoundStylesApiProps,\n  ElementProps,\n  factory,\n  Factory,\n  getThemeColor,\n  MantineColor,\n  useMantineTheme,\n  useProps,\n} from '../../../core';\nimport { CheckIcon } from '../../Checkbox';\nimport { Loader } from '../../Loader';\nimport { Transition } from '../../Transition';\nimport { UnstyledButton } from '../../UnstyledButton';\nimport type { StepFragmentComponent } from '../Stepper';\nimport { useStepperContext } from '../Stepper.context';\nimport classes from '../Stepper.module.css';\n\nconst getStepFragment = (\n  Fragment: StepFragmentComponent | React.ReactNode,\n  step: number | undefined\n) => {\n  if (typeof Fragment === 'function') {\n    return <Fragment step={step || 0} />;\n  }\n\n  return Fragment;\n};\n\nexport type StepperStepStylesNames =\n  | 'step'\n  | 'stepLoader'\n  | 'verticalSeparator'\n  | 'stepWrapper'\n  | 'stepIcon'\n  | 'stepCompletedIcon'\n  | 'stepBody'\n  | 'stepLabel'\n  | 'stepDescription';\n\nexport interface StepperStepProps\n  extends BoxProps,\n    CompoundStylesApiProps<StepperStepFactory>,\n    ElementProps<'button'> {\n  /** Step index, controlled by Stepper component **/\n  step?: number;\n\n  /** Step state, controlled by Stepper component */\n  state?: 'stepInactive' | 'stepProgress' | 'stepCompleted';\n\n  /** Key of `theme.colors`, by default controlled by Stepper component */\n  color?: MantineColor;\n\n  /** Determines whether the icon should be displayed */\n  withIcon?: boolean;\n\n  /** Step icon, defaults to step index + 1 when rendered within Stepper */\n  icon?: React.ReactNode | StepFragmentComponent;\n\n  /** Step icon displayed when step is completed */\n  completedIcon?: React.ReactNode | StepFragmentComponent;\n\n  /** Step icon displayed when step is in progress */\n  progressIcon?: React.ReactNode | StepFragmentComponent;\n\n  /** Step label, render after icon */\n  label?: React.ReactNode | StepFragmentComponent;\n\n  /** Step description */\n  description?: React.ReactNode | StepFragmentComponent;\n\n  /** Icon wrapper size */\n  iconSize?: number;\n\n  /** Icon position relative to step body, controlled by Stepper component */\n  iconPosition?: 'right' | 'left';\n\n  /** Indicates loading state of the step */\n  loading?: boolean;\n\n  /** Set to false to disable clicks on step */\n  allowStepClick?: boolean;\n\n  /** Should step selection be allowed */\n  allowStepSelect?: boolean;\n\n  /** Static selector base */\n  __staticSelector?: string;\n\n  /** Component orientation */\n  orientation?: 'vertical' | 'horizontal';\n}\n\nexport type StepperStepFactory = Factory<{\n  props: StepperStepProps;\n  ref: HTMLButtonElement;\n  stylesNames: StepperStepStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<StepperStepProps> = {\n  withIcon: true,\n  allowStepClick: true,\n  iconPosition: 'left',\n};\n\nexport const StepperStep = factory<StepperStepFactory>((props, ref) => {\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    vars,\n    step,\n    state,\n    color,\n    icon,\n    completedIcon,\n    progressIcon,\n    label,\n    description,\n    withIcon,\n    iconSize,\n    loading,\n    allowStepClick,\n    allowStepSelect,\n    iconPosition,\n    orientation,\n    mod,\n    ...others\n  } = useProps('StepperStep', defaultProps, props);\n\n  const ctx = useStepperContext();\n  const theme = useMantineTheme();\n  const stylesApi = { classNames, styles };\n\n  const _icon = state === 'stepCompleted' ? null : state === 'stepProgress' ? progressIcon : icon;\n  const dataAttributes = {\n    'data-progress': state === 'stepProgress' || undefined,\n    'data-completed': state === 'stepCompleted' || undefined,\n  };\n\n  return (\n    <UnstyledButton\n      {...ctx.getStyles('step', { className, style, variant: ctx.orientation, ...stylesApi })}\n      mod={[\n        { 'icon-position': iconPosition || ctx.iconPosition, 'allow-click': allowStepClick },\n        mod,\n      ]}\n      ref={ref}\n      {...dataAttributes}\n      {...others}\n      __vars={{ '--step-color': color ? getThemeColor(color, theme) : undefined }}\n      tabIndex={allowStepClick ? 0 : -1}\n    >\n      {withIcon && (\n        <span {...ctx.getStyles('stepWrapper', stylesApi)}>\n          <span {...ctx.getStyles('stepIcon', stylesApi)} {...dataAttributes}>\n            <Transition mounted={state === 'stepCompleted'} transition=\"pop\" duration={200}>\n              {(transitionStyles) => (\n                <span\n                  {...ctx.getStyles('stepCompletedIcon', { style: transitionStyles, ...stylesApi })}\n                >\n                  {loading ? (\n                    <Loader\n                      color=\"var(--mantine-color-white)\"\n                      size=\"calc(var(--stepper-icon-size) / 2)\"\n                      {...ctx.getStyles('stepLoader', stylesApi)}\n                    />\n                  ) : (\n                    getStepFragment(completedIcon, step) || <CheckIcon size=\"60%\" />\n                  )}\n                </span>\n              )}\n            </Transition>\n\n            {state !== 'stepCompleted' ? (\n              loading ? (\n                <Loader\n                  {...ctx.getStyles('stepLoader', stylesApi)}\n                  size=\"calc(var(--stepper-icon-size) / 2)\"\n                  color={color}\n                />\n              ) : (\n                getStepFragment(_icon || icon, step)\n              )\n            ) : null}\n          </span>\n          {orientation === 'vertical' && (\n            <span\n              {...ctx.getStyles('verticalSeparator', stylesApi)}\n              data-active={state === 'stepCompleted' || undefined}\n            />\n          )}\n        </span>\n      )}\n\n      {(label || description) && (\n        <span\n          {...ctx.getStyles('stepBody', stylesApi)}\n          data-orientation={ctx.orientation}\n          data-icon-position={iconPosition || ctx.iconPosition}\n        >\n          {label && (\n            <span {...ctx.getStyles('stepLabel', stylesApi)}>{getStepFragment(label, step)}</span>\n          )}\n          {description && (\n            <span {...ctx.getStyles('stepDescription', stylesApi)}>\n              {getStepFragment(description, step)}\n            </span>\n          )}\n        </span>\n      )}\n    </UnstyledButton>\n  );\n});\n\nStepperStep.classes = classes;\nStepperStep.displayName = '@mantine/core/StepperStep';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 8791, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8796, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Stepper/StepperCompleted/StepperCompleted.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const StepperCompleted = registerClientReference(\n    function() { throw new Error(\"Attempted to call StepperCompleted() from the server but StepperCompleted is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Stepper/StepperCompleted/StepperCompleted.mjs\",\n    \"StepperCompleted\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,mBAAmB,2RAC5B;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,qGACA"}},
    {"offset": {"line": 8805, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8810, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Stepper/StepperCompleted/StepperCompleted.tsx"],"sourcesContent":["import React from 'react';\n\nexport interface StepperCompletedProps {\n  /** Label content */\n  children: React.ReactNode;\n}\n\nexport const StepperCompleted: React.FC<StepperCompletedProps> = () => null;\nStepperCompleted.displayName = '@mantine/core/StepperCompleted';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 8815, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8820, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Switch/Switch.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Switch = registerClientReference(\n    function() { throw new Error(\"Attempted to call Switch() from the server but Switch is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Switch/Switch.mjs\",\n    \"Switch\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,SAAS,2RAClB;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,yEACA"}},
    {"offset": {"line": 8829, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8834, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Switch/Switch.tsx"],"sourcesContent":["import React from 'react';\nimport { useId, useUncontrolled } from '@mantine/hooks';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  extractStyleProps,\n  factory,\n  Factory,\n  getRadius,\n  getSize,\n  getThemeColor,\n  MantineColor,\n  MantineRadius,\n  MantineSize,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { InlineInput, InlineInputClasses, InlineInputStylesNames } from '../InlineInput';\nimport { useSwitchGroupContext } from './SwitchGroup.context';\nimport { SwitchGroup } from './SwitchGroup/SwitchGroup';\nimport classes from './Switch.module.css';\n\nexport type SwitchStylesNames =\n  | 'root'\n  | 'track'\n  | 'trackLabel'\n  | 'thumb'\n  | 'input'\n  | InlineInputStylesNames;\nexport type SwitchCssVariables = {\n  root:\n    | '--switch-radius'\n    | '--switch-height'\n    | '--switch-width'\n    | '--switch-thumb-size'\n    | '--switch-label-font-size'\n    | '--switch-track-label-padding'\n    | '--switch-color';\n};\n\nexport interface SwitchProps\n  extends BoxProps,\n    StylesApiProps<SwitchFactory>,\n    ElementProps<'input', 'size'> {\n  /** Id used to bind input and label, if not passed, unique id will be generated instead */\n  id?: string;\n\n  /** Content of the `label` associated with the radio */\n  label?: React.ReactNode;\n\n  /** Inner label when the `Switch` is in unchecked state */\n  offLabel?: React.ReactNode;\n\n  /** Inner label when the `Switch` is in checked state */\n  onLabel?: React.ReactNode;\n\n  /** Key of `theme.colors` or any valid CSS color to set input color in checked state, `theme.primaryColor` by default */\n  color?: MantineColor;\n\n  /** Controls size of all elements */\n  size?: MantineSize | (string & {});\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius,` \"xl\" by default */\n  radius?: MantineRadius;\n\n  /** Props passed down to the root element */\n  wrapperProps?: Record<string, any>;\n\n  /** Icon inside the thumb of the switch */\n  thumbIcon?: React.ReactNode;\n\n  /** Position of the label relative to the input, `'right'` by default */\n  labelPosition?: 'left' | 'right';\n\n  /** Description displayed below the label */\n  description?: React.ReactNode;\n\n  /** Error displayed below the label */\n  error?: React.ReactNode;\n\n  /** Assigns ref of the root element */\n  rootRef?: React.ForwardedRef<HTMLDivElement>;\n}\n\nexport type SwitchFactory = Factory<{\n  props: SwitchProps;\n  ref: HTMLInputElement;\n  stylesNames: SwitchStylesNames;\n  vars: SwitchCssVariables;\n  staticComponents: {\n    Group: typeof SwitchGroup;\n  };\n}>;\n\nconst defaultProps: Partial<SwitchProps> = {\n  labelPosition: 'right',\n};\n\nconst varsResolver = createVarsResolver<SwitchFactory>((theme, { radius, color, size }) => ({\n  root: {\n    '--switch-radius': radius === undefined ? undefined : getRadius(radius),\n    '--switch-height': getSize(size, 'switch-height'),\n    '--switch-width': getSize(size, 'switch-width'),\n    '--switch-thumb-size': getSize(size, 'switch-thumb-size'),\n    '--switch-label-font-size': getSize(size, 'switch-label-font-size'),\n    '--switch-track-label-padding': getSize(size, 'switch-track-label-padding'),\n    '--switch-color': color ? getThemeColor(color, theme) : undefined,\n  },\n}));\n\nexport const Switch = factory<SwitchFactory>((_props, ref) => {\n  const props = useProps('Switch', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    color,\n    label,\n    offLabel,\n    onLabel,\n    id,\n    size,\n    radius,\n    wrapperProps,\n    children,\n    thumbIcon,\n    checked,\n    defaultChecked,\n    onChange,\n    labelPosition,\n    description,\n    error,\n    disabled,\n    variant,\n    rootRef,\n    mod,\n    ...others\n  } = props;\n\n  const ctx = useSwitchGroupContext();\n  const _size = size || ctx?.size;\n\n  const getStyles = useStyles<SwitchFactory>({\n    name: 'Switch',\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  const { styleProps, rest } = extractStyleProps(others);\n  const uuid = useId(id);\n\n  const contextProps = ctx\n    ? {\n        checked: ctx.value.includes(rest.value as string),\n        onChange: ctx.onChange,\n      }\n    : {};\n\n  const [_checked, handleChange] = useUncontrolled({\n    value: contextProps.checked ?? checked,\n    defaultValue: defaultChecked,\n    finalValue: false,\n  });\n\n  return (\n    <InlineInput\n      {...getStyles('root')}\n      __staticSelector=\"Switch\"\n      __stylesApiProps={props}\n      id={uuid}\n      size={_size}\n      labelPosition={labelPosition}\n      label={label}\n      description={description}\n      error={error}\n      disabled={disabled}\n      bodyElement=\"label\"\n      labelElement=\"span\"\n      classNames={classNames}\n      styles={styles}\n      unstyled={unstyled}\n      data-checked={contextProps.checked || undefined}\n      variant={variant}\n      ref={rootRef}\n      mod={mod}\n      {...styleProps}\n      {...wrapperProps}\n    >\n      <input\n        {...rest}\n        disabled={disabled}\n        checked={_checked}\n        onChange={(event) => {\n          ctx ? contextProps.onChange?.(event) : onChange?.(event);\n          handleChange(event.currentTarget.checked);\n        }}\n        id={uuid}\n        ref={ref}\n        type=\"checkbox\"\n        role=\"switch\"\n        {...getStyles('input')}\n      />\n\n      <Box\n        aria-hidden=\"true\"\n        mod={{ error, 'label-position': labelPosition }}\n        {...getStyles('track')}\n      >\n        <Box component=\"span\" mod=\"reduce-motion\" {...getStyles('thumb')}>\n          {thumbIcon}\n        </Box>\n        <span {...getStyles('trackLabel')}>{_checked ? onLabel : offLabel}</span>\n      </Box>\n    </InlineInput>\n  );\n});\n\nSwitch.classes = { ...classes, ...InlineInputClasses };\nSwitch.displayName = '@mantine/core/Switch';\nSwitch.Group = SwitchGroup;\n"],"names":[],"mappings":""}},
    {"offset": {"line": 8839, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8844, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Switch/SwitchGroup/SwitchGroup.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const SwitchGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call SwitchGroup() from the server but SwitchGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Switch/SwitchGroup/SwitchGroup.mjs\",\n    \"SwitchGroup\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,cAAc,2RACvB;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,0FACA"}},
    {"offset": {"line": 8853, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8858, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Switch/SwitchGroup/SwitchGroup.tsx"],"sourcesContent":["import React from 'react';\nimport { useUncontrolled } from '@mantine/hooks';\nimport { factory, Factory, MantineSize, useProps } from '../../../core';\nimport { Input, InputWrapperProps, InputWrapperStylesNames } from '../../Input';\nimport { InputsGroupFieldset } from '../../InputsGroupFieldset';\nimport { SwitchGroupProvider } from '../SwitchGroup.context';\n\nexport type SwitchGroupStylesNames = InputWrapperStylesNames;\n\nexport interface SwitchGroupProps extends Omit<InputWrapperProps, 'onChange'> {\n  /** `Switch` components */\n  children: React.ReactNode;\n\n  /** Controlled component value */\n  value?: string[];\n\n  /** Default value for uncontrolled component */\n  defaultValue?: string[];\n\n  /** Called when value changes */\n  onChange?: (value: string[]) => void;\n\n  /** Props passed down to the `Input.Wrapper` */\n  wrapperProps?: Record<string, any>;\n\n  /** Controls size of the `Input.Wrapper`, `'sm'` by default */\n  size?: MantineSize | (string & {});\n\n  /** If set, value cannot be changed */\n  readOnly?: boolean;\n}\n\nexport type SwitchGroupFactory = Factory<{\n  props: SwitchGroupProps;\n  ref: HTMLDivElement;\n  stylesNames: SwitchGroupStylesNames;\n}>;\n\nconst defaultProps: Partial<SwitchGroupProps> = {};\n\nexport const SwitchGroup = factory<SwitchGroupFactory>((props, ref) => {\n  const { value, defaultValue, onChange, size, wrapperProps, children, readOnly, ...others } =\n    useProps('SwitchGroup', defaultProps, props);\n\n  const [_value, setValue] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: [],\n    onChange,\n  });\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const itemValue = event.currentTarget.value;\n    !readOnly &&\n      setValue(\n        _value.includes(itemValue)\n          ? _value.filter((item) => item !== itemValue)\n          : [..._value, itemValue]\n      );\n  };\n\n  return (\n    <SwitchGroupProvider value={{ value: _value, onChange: handleChange, size }}>\n      <Input.Wrapper\n        size={size}\n        ref={ref}\n        {...wrapperProps}\n        {...others}\n        labelElement=\"div\"\n        __staticSelector=\"SwitchGroup\"\n      >\n        <InputsGroupFieldset role=\"group\">{children}</InputsGroupFieldset>\n      </Input.Wrapper>\n    </SwitchGroupProvider>\n  );\n});\n\nSwitchGroup.classes = Input.Wrapper.classes;\nSwitchGroup.displayName = '@mantine/core/SwitchGroup';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 8863, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8868, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Table/Table.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Table = registerClientReference(\n    function() { throw new Error(\"Attempted to call Table() from the server but Table is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Table/Table.mjs\",\n    \"Table\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,QAAQ,2RACjB;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,uEACA"}},
    {"offset": {"line": 8877, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8882, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Table/Table.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getSpacing,\n  getThemeColor,\n  MantineColor,\n  MantineSpacing,\n  rem,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport {\n  TableCaption,\n  TableTbody,\n  TableTd,\n  TableTfoot,\n  TableTh,\n  TableThead,\n  TableTr,\n} from './Table.components';\nimport { TableProvider } from './Table.context';\nimport { TableDataRenderer } from './TableDataRenderer';\nimport { TableScrollContainer } from './TableScrollContainer';\nimport classes from './Table.module.css';\n\nexport type TableStylesNames =\n  | 'table'\n  | 'thead'\n  | 'tbody'\n  | 'tfoot'\n  | 'tr'\n  | 'th'\n  | 'td'\n  | 'caption';\n\nexport type TableCssVariables = {\n  table:\n    | '--table-layout'\n    | '--table-border-color'\n    | '--table-caption-side'\n    | '--table-horizontal-spacing'\n    | '--table-vertical-spacing'\n    | '--table-striped-color'\n    | '--table-highlight-on-hover-color'\n    | '--table-sticky-header-offset';\n};\n\nexport interface TableData {\n  head?: React.ReactNode[];\n  body?: React.ReactNode[][];\n  foot?: React.ReactNode[];\n  caption?: string;\n}\n\nexport interface TableProps extends BoxProps, StylesApiProps<TableFactory>, ElementProps<'table'> {\n  /** Value of `table-layout` style, `auto` by default */\n  layout?: React.CSSProperties['tableLayout'];\n\n  /** Determines on which side `Table.Caption` is displayed, `bottom` by default */\n  captionSide?: 'top' | 'bottom';\n\n  /** Color of table borders, key of `theme.colors` or any valid CSS color */\n  borderColor?: MantineColor;\n\n  /** Determines whether the table should have outer border, `false` by default */\n  withTableBorder?: boolean;\n\n  /** Determines whether the table should have borders between columns, `false` by default */\n  withColumnBorders?: boolean;\n\n  /** Determines whether the table should have borders between rows, `true` by default */\n  withRowBorders?: boolean;\n\n  /** Horizontal cells spacing, key of `theme.spacing` or any valid CSS value for padding, numbers are converted to rem, default value is `xs` */\n  horizontalSpacing?: MantineSpacing;\n\n  /** Vertical cells spacing, key of `theme.spacing` or any valid CSS value for padding, numbers are converted to rem, default value is `xs` */\n  verticalSpacing?: MantineSpacing;\n\n  /** Determines whether every odd/even row background should be changed to `strippedColor`, if set to `true`, then `odd` value will be used, `false` by default  */\n  striped?: boolean | 'odd' | 'even';\n\n  /** Background color of striped rows, key of `theme.colors` or any valid CSS color */\n  stripedColor?: MantineColor;\n\n  /** Determines whether table rows background should change to `highlightOnHoverColor` when hovered, `false` by default */\n  highlightOnHover?: boolean;\n\n  /** Background color of table rows when hovered, key of `theme.colors` or any valid CSS color */\n  highlightOnHoverColor?: MantineColor;\n\n  /** Data that should be used to generate table, ignored if `children` prop is set */\n  data?: TableData;\n\n  /** Determines whether `Table.Thead` should be sticky, `false` by default */\n  stickyHeader?: boolean;\n\n  /** Offset from top at which `Table.Thead` should become sticky, `0` by default */\n  stickyHeaderOffset?: number | string;\n}\n\nexport type TableFactory = Factory<{\n  props: TableProps;\n  ref: HTMLTableElement;\n  stylesNames: TableStylesNames;\n  vars: TableCssVariables;\n  staticComponents: {\n    Thead: typeof TableThead;\n    Tbody: typeof TableTbody;\n    Tfoot: typeof TableTfoot;\n    Td: typeof TableTd;\n    Th: typeof TableTh;\n    Tr: typeof TableTr;\n    Caption: typeof TableCaption;\n    ScrollContainer: typeof TableScrollContainer;\n    DataRenderer: typeof TableDataRenderer;\n  };\n}>;\n\nconst defaultProps: Partial<TableProps> = {\n  withRowBorders: true,\n  verticalSpacing: 7,\n};\n\nconst varsResolver = createVarsResolver<TableFactory>(\n  (\n    theme,\n    {\n      layout,\n      captionSide,\n      horizontalSpacing,\n      verticalSpacing,\n      borderColor,\n      stripedColor,\n      highlightOnHoverColor,\n      striped,\n      highlightOnHover,\n      stickyHeaderOffset,\n      stickyHeader,\n    }\n  ) => ({\n    table: {\n      '--table-layout': layout,\n      '--table-caption-side': captionSide,\n      '--table-horizontal-spacing': getSpacing(horizontalSpacing),\n      '--table-vertical-spacing': getSpacing(verticalSpacing),\n      '--table-border-color': borderColor ? getThemeColor(borderColor, theme) : undefined,\n      '--table-striped-color':\n        striped && stripedColor ? getThemeColor(stripedColor, theme) : undefined,\n      '--table-highlight-on-hover-color':\n        highlightOnHover && highlightOnHoverColor\n          ? getThemeColor(highlightOnHoverColor, theme)\n          : undefined,\n      '--table-sticky-header-offset': stickyHeader ? rem(stickyHeaderOffset) : undefined,\n    },\n  })\n);\n\nexport const Table = factory<TableFactory>((_props, ref) => {\n  const props = useProps('Table', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    horizontalSpacing,\n    verticalSpacing,\n    captionSide,\n    stripedColor,\n    highlightOnHoverColor,\n    striped,\n    highlightOnHover,\n    withColumnBorders,\n    withRowBorders,\n    withTableBorder,\n    borderColor,\n    layout,\n    variant,\n    data,\n    children,\n    stickyHeader,\n    stickyHeaderOffset,\n    mod,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<TableFactory>({\n    name: 'Table',\n    props,\n    className,\n    style,\n    classes,\n    classNames,\n    styles,\n    unstyled,\n    rootSelector: 'table',\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <TableProvider\n      value={{\n        getStyles,\n        stickyHeader,\n        striped: striped === true ? 'odd' : striped || undefined,\n        highlightOnHover,\n        withColumnBorders,\n        withRowBorders,\n        captionSide: captionSide || 'bottom',\n      }}\n    >\n      <Box\n        component=\"table\"\n        variant={variant}\n        ref={ref}\n        mod={[{ 'data-with-table-border': withTableBorder }, mod]}\n        {...getStyles('table')}\n        {...others}\n      >\n        {children || (!!data && <TableDataRenderer data={data} />)}\n      </Box>\n    </TableProvider>\n  );\n});\n\nTable.classes = classes;\nTable.displayName = '@mantine/core/Table';\nTable.Td = TableTd;\nTable.Th = TableTh;\nTable.Tr = TableTr;\nTable.Thead = TableThead;\nTable.Tbody = TableTbody;\nTable.Tfoot = TableTfoot;\nTable.Caption = TableCaption;\nTable.ScrollContainer = TableScrollContainer;\nTable.DataRenderer = TableDataRenderer;\n"],"names":[],"mappings":""}},
    {"offset": {"line": 8887, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8892, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Table/Table.components.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const TableCaption = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableCaption() from the server but TableCaption is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Table/Table.components.mjs\",\n    \"TableCaption\",\n);\nexport const TableTbody = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableTbody() from the server but TableTbody is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Table/Table.components.mjs\",\n    \"TableTbody\",\n);\nexport const TableTd = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableTd() from the server but TableTd is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Table/Table.components.mjs\",\n    \"TableTd\",\n);\nexport const TableTfoot = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableTfoot() from the server but TableTfoot is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Table/Table.components.mjs\",\n    \"TableTfoot\",\n);\nexport const TableTh = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableTh() from the server but TableTh is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Table/Table.components.mjs\",\n    \"TableTh\",\n);\nexport const TableThead = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableThead() from the server but TableThead is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Table/Table.components.mjs\",\n    \"TableThead\",\n);\nexport const TableTr = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableTr() from the server but TableTr is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Table/Table.components.mjs\",\n    \"TableTr\",\n);\nexport const tableElement = registerClientReference(\n    function() { throw new Error(\"Attempted to call tableElement() from the server but tableElement is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Table/Table.components.mjs\",\n    \"tableElement\",\n);\n"],"names":[],"mappings":";;;;;;;;;;;;;AACO,MAAM,eAAe,2RACxB;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,kFACA;AAEG,MAAM,aAAa,2RACtB;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,kFACA;AAEG,MAAM,UAAU,2RACnB;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,kFACA;AAEG,MAAM,aAAa,2RACtB;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,kFACA;AAEG,MAAM,UAAU,2RACnB;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,kFACA;AAEG,MAAM,aAAa,2RACtB;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,kFACA;AAEG,MAAM,UAAU,2RACnB;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,kFACA;AAEG,MAAM,eAAe,2RACxB;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,kFACA"}},
    {"offset": {"line": 8929, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8934, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Table/Table.components.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  CompoundStylesApiProps,\n  ElementProps,\n  factory,\n  Factory,\n  FactoryPayload,\n  useProps,\n} from '../../core';\nimport type { TableFactory } from './Table';\nimport { TableContextValue, useTableContext } from './Table.context';\nimport classes from './Table.module.css';\n\nexport interface TableElementProps<Selector extends string>\n  extends BoxProps,\n    CompoundStylesApiProps<Omit<TableFactory, 'stylesNames'> & { stylesNames: Selector }> {}\n\nexport interface TableThProps extends TableElementProps<'th'>, ElementProps<'th'> {}\nexport interface TableTdProps extends TableElementProps<'td'>, ElementProps<'td'> {}\nexport interface TableTrProps extends TableElementProps<'tr'>, ElementProps<'tr'> {}\nexport interface TableTheadProps extends TableElementProps<'thead'>, ElementProps<'thead'> {}\nexport interface TableTbodyProps extends TableElementProps<'tbody'>, ElementProps<'tbody'> {}\nexport interface TableTfootProps extends TableElementProps<'tfoot'>, ElementProps<'tfoot'> {}\nexport interface TableCaptionProps extends TableElementProps<'caption'>, ElementProps<'caption'> {}\n\nexport type TableThFactory = Factory<{\n  props: TableThProps;\n  ref: HTMLTableCellElement;\n  stylesNames: 'th';\n  compound: true;\n}>;\n\nexport type TableTdFactory = Factory<{\n  props: TableTdProps;\n  ref: HTMLTableCellElement;\n  stylesNames: 'td';\n  compound: true;\n}>;\n\nexport type TableTrFactory = Factory<{\n  props: TableTrProps;\n  ref: HTMLTableRowElement;\n  stylesNames: 'tr';\n  compound: true;\n}>;\n\nexport type TableTheadFactory = Factory<{\n  props: TableTheadProps;\n  ref: HTMLTableSectionElement;\n  stylesNames: 'thead';\n  compound: true;\n}>;\n\nexport type TableTbodyFactory = Factory<{\n  props: TableTbodyProps;\n  ref: HTMLTableSectionElement;\n  stylesNames: 'tbody';\n  compound: true;\n}>;\n\nexport type TableTfootFactory = Factory<{\n  props: TableTfootProps;\n  ref: HTMLTableSectionElement;\n  stylesNames: 'tfoot';\n  compound: true;\n}>;\n\nexport type TableCaptionFactory = Factory<{\n  props: TableCaptionProps;\n  ref: HTMLTableCaptionElement;\n  stylesNames: 'caption';\n  compound: true;\n}>;\n\ninterface TableElementOptions {\n  columnBorder?: true;\n  rowBorder?: true;\n  striped?: true;\n  highlightOnHover?: true;\n  captionSide?: true;\n  stickyHeader?: true;\n}\n\nfunction getDataAttributes(ctx: TableContextValue, options?: TableElementOptions) {\n  if (!options) {\n    return undefined;\n  }\n\n  const data: Record<string, boolean | string> = {};\n\n  if (options.columnBorder && ctx.withColumnBorders) {\n    data['data-with-column-border'] = true;\n  }\n\n  if (options.rowBorder && ctx.withRowBorders) {\n    data['data-with-row-border'] = true;\n  }\n\n  if (options.striped && ctx.striped) {\n    data['data-striped'] = ctx.striped;\n  }\n\n  if (options.highlightOnHover && ctx.highlightOnHover) {\n    data['data-hover'] = true;\n  }\n\n  if (options.captionSide && ctx.captionSide) {\n    data['data-side'] = ctx.captionSide;\n  }\n\n  if (options.stickyHeader && ctx.stickyHeader) {\n    data['data-sticky'] = true;\n  }\n\n  return data;\n}\n\nexport function tableElement<Factory extends FactoryPayload>(\n  element: 'th' | 'td' | 'tr' | 'thead' | 'tbody' | 'tfoot' | 'caption',\n  options?: TableElementOptions\n) {\n  const name = `Table${element.charAt(0).toUpperCase()}${element.slice(1)}`;\n  const Component = factory<Factory>((_props, ref) => {\n    const props = useProps(name, {}, _props);\n    const { classNames, className, style, styles, ...others } = props;\n\n    const ctx = useTableContext();\n\n    return (\n      <Box\n        component={element}\n        ref={ref}\n        {...getDataAttributes(ctx, options)}\n        {...ctx.getStyles(element, { className, classNames, style, styles, props })}\n        {...others}\n      />\n    );\n  });\n\n  Component.displayName = `@mantine/core/${name}`;\n  Component.classes = classes;\n  return Component;\n}\n\nexport const TableTh = tableElement<TableThFactory>('th', { columnBorder: true });\nexport const TableTd = tableElement<TableTdFactory>('td', { columnBorder: true });\nexport const TableTr = tableElement<TableTrFactory>('tr', {\n  rowBorder: true,\n  striped: true,\n  highlightOnHover: true,\n});\nexport const TableThead = tableElement<TableTheadFactory>('thead', { stickyHeader: true });\nexport const TableTbody = tableElement<TableTbodyFactory>('tbody');\nexport const TableTfoot = tableElement<TableTfootFactory>('tfoot');\nexport const TableCaption = tableElement<TableCaptionFactory>('caption', { captionSide: true });\n"],"names":[],"mappings":""}},
    {"offset": {"line": 8939, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8944, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Table/TableScrollContainer.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const TableScrollContainer = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableScrollContainer() from the server but TableScrollContainer is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Table/TableScrollContainer.mjs\",\n    \"TableScrollContainer\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,uBAAuB,2RAChC;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,sFACA"}},
    {"offset": {"line": 8953, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8958, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Table/TableScrollContainer.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  rem,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { ScrollArea } from '../ScrollArea';\nimport classes from './Table.module.css';\n\nexport type TableScrollContainerStylesNames = 'scrollContainer' | 'scrollContainerInner';\nexport type TableScrollContainerCssVariables = {\n  scrollContainer: '--table-min-width' | '--table-overflow';\n};\n\nexport interface TableScrollContainerProps\n  extends BoxProps,\n    StylesApiProps<TableScrollContainerFactory>,\n    ElementProps<'div'> {\n  /** `min-width` of the `Table` at which it should become scrollable */\n  minWidth: React.CSSProperties['minWidth'];\n\n  /** Type of the scroll container, `native` to use native scrollbars, `scrollarea` to use `ScrollArea` component, `scrollarea` by default */\n  type?: 'native' | 'scrollarea';\n}\n\nexport type TableScrollContainerFactory = Factory<{\n  props: TableScrollContainerProps;\n  ref: HTMLDivElement;\n  stylesNames: TableScrollContainerStylesNames;\n  vars: TableScrollContainerCssVariables;\n}>;\n\nconst defaultProps: Partial<TableScrollContainerProps> = {\n  type: 'scrollarea',\n};\n\nconst varsResolver = createVarsResolver<TableScrollContainerFactory>((_, { minWidth, type }) => ({\n  scrollContainer: {\n    '--table-min-width': rem(minWidth),\n    '--table-overflow': type === 'native' ? 'auto' : undefined,\n  },\n}));\n\nexport const TableScrollContainer = factory<TableScrollContainerFactory>((_props, ref) => {\n  const props = useProps('TableScrollContainer', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    children,\n    minWidth,\n    type,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<TableScrollContainerFactory>({\n    name: 'TableScrollContainer',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n    rootSelector: 'scrollContainer',\n  });\n\n  return (\n    <Box<any>\n      component={type === 'scrollarea' ? ScrollArea : 'div'}\n      {...(type === 'scrollarea' ? { offsetScrollbars: 'x' } : {})}\n      ref={ref}\n      {...getStyles('scrollContainer')}\n      {...others}\n    >\n      <div {...getStyles('scrollContainerInner')}>{children}</div>\n    </Box>\n  );\n});\n\nTableScrollContainer.classes = classes;\nTableScrollContainer.displayName = '@mantine/core/TableScrollContainer';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 8963, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8968, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Tabs/Tabs.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Tabs = registerClientReference(\n    function() { throw new Error(\"Attempted to call Tabs() from the server but Tabs is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Tabs/Tabs.mjs\",\n    \"Tabs\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,OAAO,2RAChB;IAAa,MAAM,IAAI,MAAM;AAAwN,GACrP,qEACA"}},
    {"offset": {"line": 8977, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8982, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Tabs/Tabs.tsx"],"sourcesContent":["import React from 'react';\nimport { useId, useUncontrolled } from '@mantine/hooks';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getAutoContrastValue,\n  getContrastColor,\n  getRadius,\n  getSafeId,\n  getThemeColor,\n  MantineColor,\n  MantineRadius,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { TabsProvider } from './Tabs.context';\nimport { TabsList, TabsListStylesNames } from './TabsList/TabsList';\nimport { TabsPanel, TabsPanelStylesNames } from './TabsPanel/TabsPanel';\nimport { TabsTab, TabsTabStylesNames } from './TabsTab/TabsTab';\nimport classes from './Tabs.module.css';\n\nexport type TabsStylesNames =\n  | 'root'\n  | TabsListStylesNames\n  | TabsPanelStylesNames\n  | TabsTabStylesNames;\n\nexport type TabsVariant = 'default' | 'outline' | 'pills';\nexport type TabsCssVariables = {\n  root: '--tabs-color' | '--tabs-radius';\n};\n\nexport interface TabsProps\n  extends BoxProps,\n    StylesApiProps<TabsFactory>,\n    ElementProps<'div', 'defaultValue' | 'value' | 'onChange'> {\n  /** Default value for uncontrolled component */\n  defaultValue?: string | null;\n\n  /** Value for controlled component */\n  value?: string | null;\n\n  /** Called when value changes */\n  onChange?: (value: string | null) => void;\n\n  /** Tabs orientation, `'horizontal'` by default */\n  orientation?: 'vertical' | 'horizontal';\n\n  /** `Tabs.List` placement relative to `Tabs.Panel`, applicable only when `orientation=\"vertical\"`, `'left'` by default */\n  placement?: 'left' | 'right';\n\n  /** Base id, used to generate ids to connect labels with controls, generated randomly by default */\n  id?: string;\n\n  /** Determines whether arrow key presses should loop though items (first to last and last to first), `true` by default */\n  loop?: boolean;\n\n  /** Determines whether tab should be activated with arrow key press, `true` by default */\n  activateTabWithKeyboard?: boolean;\n\n  /** Determines whether tab can be deactivated, `false` by default */\n  allowTabDeactivation?: boolean;\n\n  /** Tabs content */\n  children?: React.ReactNode;\n\n  /** Changes colors of `Tabs.Tab` components when variant is `pills` or `default`, does nothing for other variants */\n  color?: MantineColor;\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius`, `theme.defaultRadius` by default */\n  radius?: MantineRadius;\n\n  /** Determines whether tabs should have inverted styles, `false` by default */\n  inverted?: boolean;\n\n  /** If set to `false`, `Tabs.Panel` content will be unmounted when the associated tab is not active, `true` by default */\n  keepMounted?: boolean;\n\n  /** Determines whether active item text color should depend on `background-color` of the indicator. If luminosity of the `color` prop is less than `theme.luminosityThreshold`, then `theme.white` will be used for text color, otherwise `theme.black`. Overrides `theme.autoContrast`. Only applicable when `variant=\"pills\"` */\n  autoContrast?: boolean;\n}\n\nexport type TabsFactory = Factory<{\n  props: TabsProps;\n  ref: HTMLDivElement;\n  variant: TabsVariant;\n  stylesNames: TabsStylesNames;\n  vars: TabsCssVariables;\n  staticComponents: {\n    Tab: typeof TabsTab;\n    Panel: typeof TabsPanel;\n    List: typeof TabsList;\n  };\n}>;\n\nconst VALUE_ERROR =\n  'Tabs.Tab or Tabs.Panel component was rendered with invalid value or without value';\n\nconst defaultProps: Partial<TabsProps> = {\n  keepMounted: true,\n  orientation: 'horizontal',\n  loop: true,\n  activateTabWithKeyboard: true,\n  allowTabDeactivation: false,\n  unstyled: false,\n  inverted: false,\n  variant: 'default',\n  placement: 'left',\n};\n\nconst varsResolver = createVarsResolver<TabsFactory>((theme, { radius, color, autoContrast }) => ({\n  root: {\n    '--tabs-radius': getRadius(radius),\n    '--tabs-color': getThemeColor(color, theme),\n    '--tabs-text-color': getAutoContrastValue(autoContrast, theme)\n      ? getContrastColor({ color, theme })\n      : undefined,\n  },\n}));\n\nexport const Tabs = factory<TabsFactory>((_props, ref) => {\n  const props = useProps('Tabs', defaultProps, _props);\n  const {\n    defaultValue,\n    value,\n    onChange,\n    orientation,\n    children,\n    loop,\n    id,\n    activateTabWithKeyboard,\n    allowTabDeactivation,\n    variant,\n    color,\n    radius,\n    inverted,\n    placement,\n    keepMounted,\n    classNames,\n    styles,\n    unstyled,\n    className,\n    style,\n    vars,\n    autoContrast,\n    mod,\n    ...others\n  } = props;\n\n  const uid = useId(id);\n\n  const [currentTab, setCurrentTab] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: null,\n    onChange,\n  });\n\n  const getStyles = useStyles<TabsFactory>({\n    name: 'Tabs',\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <TabsProvider\n      value={{\n        placement,\n        value: currentTab,\n        orientation,\n        id: uid,\n        loop,\n        activateTabWithKeyboard,\n        getTabId: getSafeId(`${uid}-tab`, VALUE_ERROR),\n        getPanelId: getSafeId(`${uid}-panel`, VALUE_ERROR),\n        onChange: setCurrentTab,\n        allowTabDeactivation,\n        variant,\n        color,\n        radius,\n        inverted,\n        keepMounted,\n        unstyled,\n        getStyles,\n      }}\n    >\n      <Box\n        ref={ref}\n        id={uid}\n        variant={variant}\n        mod={[\n          {\n            orientation,\n            inverted: orientation === 'horizontal' && inverted,\n            placement: orientation === 'vertical' && placement,\n          },\n          mod,\n        ]}\n        {...getStyles('root')}\n        {...others}\n      >\n        {children}\n      </Box>\n    </TabsProvider>\n  );\n});\n\nTabs.classes = classes;\nTabs.displayName = '@mantine/core/Tabs';\nTabs.Tab = TabsTab;\nTabs.Panel = TabsPanel;\nTabs.List = TabsList;\n"],"names":[],"mappings":""}},
    {"offset": {"line": 8987, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8992, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Tabs/TabsList/TabsList.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const TabsList = registerClientReference(\n    function() { throw new Error(\"Attempted to call TabsList() from the server but TabsList is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Tabs/TabsList/TabsList.mjs\",\n    \"TabsList\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,WAAW,2RACpB;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,kFACA"}},
    {"offset": {"line": 9001, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9006, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Tabs/TabsList/TabsList.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  CompoundStylesApiProps,\n  ElementProps,\n  factory,\n  Factory,\n  useProps,\n} from '../../../core';\nimport { useTabsContext } from '../Tabs.context';\nimport classes from '../Tabs.module.css';\n\nexport type TabsListStylesNames = 'list';\n\nexport interface TabsListProps\n  extends BoxProps,\n    CompoundStylesApiProps<TabsListFactory>,\n    ElementProps<'div'> {\n  /** `Tabs.Tab` components */\n  children: React.ReactNode;\n\n  /** Determines whether tabs should take all available space, `false` by default */\n  grow?: boolean;\n\n  /** Tabs alignment, `flex-start` by default */\n  justify?: React.CSSProperties['justifyContent'];\n}\n\nexport type TabsListFactory = Factory<{\n  props: TabsListProps;\n  ref: HTMLDivElement;\n  stylesNames: TabsListStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<TabsListProps> = {};\n\nexport const TabsList = factory<TabsListFactory>((_props, ref) => {\n  const props = useProps('TabsList', defaultProps, _props);\n  const { children, className, grow, justify, classNames, styles, style, mod, ...others } = props;\n\n  const ctx = useTabsContext();\n\n  return (\n    <Box\n      {...others}\n      {...ctx.getStyles('list', {\n        className,\n        style,\n        classNames,\n        styles,\n        props,\n        variant: ctx.variant,\n      })}\n      ref={ref}\n      role=\"tablist\"\n      variant={ctx.variant}\n      mod={[\n        {\n          grow,\n          orientation: ctx.orientation,\n          placement: ctx.orientation === 'vertical' && ctx.placement,\n          inverted: ctx.inverted,\n        },\n        mod,\n      ]}\n      aria-orientation={ctx.orientation}\n      __vars={{ '--tabs-justify': justify }}\n    >\n      {children}\n    </Box>\n  );\n});\n\nTabsList.classes = classes;\nTabsList.displayName = '@mantine/core/TabsList';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 9011, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9016, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Tabs/TabsTab/TabsTab.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const TabsTab = registerClientReference(\n    function() { throw new Error(\"Attempted to call TabsTab() from the server but TabsTab is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Tabs/TabsTab/TabsTab.mjs\",\n    \"TabsTab\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,UAAU,2RACnB;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,gFACA"}},
    {"offset": {"line": 9025, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9030, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Tabs/TabsTab/TabsTab.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  CompoundStylesApiProps,\n  createScopedKeydownHandler,\n  ElementProps,\n  factory,\n  Factory,\n  getThemeColor,\n  MantineColor,\n  useDirection,\n  useMantineTheme,\n  useProps,\n} from '../../../core';\nimport { UnstyledButton, UnstyledButtonProps } from '../../UnstyledButton';\nimport { useTabsContext } from '../Tabs.context';\nimport classes from '../Tabs.module.css';\n\nexport type TabsTabStylesNames = 'tab' | 'tabSection' | 'tabLabel';\n\nexport interface TabsTabProps\n  extends Omit<UnstyledButtonProps, 'classNames' | 'styles' | 'vars'>,\n    CompoundStylesApiProps<TabsTabFactory>,\n    ElementProps<'button'> {\n  /** Value of associated panel */\n  value: string;\n\n  /** Tab label */\n  children?: React.ReactNode;\n\n  /** Content displayed on the right side of the label, for example, icon */\n  rightSection?: React.ReactNode;\n\n  /** Content displayed on the left side of the label, for example, icon */\n  leftSection?: React.ReactNode;\n\n  /** Key of `theme.colors` or any valid CSS color, controls control color based on `variant` */\n  color?: MantineColor;\n}\n\nexport type TabsTabFactory = Factory<{\n  props: TabsTabProps;\n  ref: HTMLButtonElement;\n  stylesNames: TabsTabStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<TabsTabProps> = {};\n\nexport const TabsTab = factory<TabsTabFactory>((_props, ref) => {\n  const props = useProps('TabsTab', defaultProps, _props);\n  const {\n    className,\n    children,\n    rightSection,\n    leftSection,\n    value,\n    onClick,\n    onKeyDown,\n    disabled,\n    color,\n    style,\n    classNames,\n    styles,\n    vars,\n    mod,\n    ...others\n  } = props;\n\n  const theme = useMantineTheme();\n  const { dir } = useDirection();\n  const ctx = useTabsContext();\n  const active = value === ctx.value;\n  const activateTab = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    ctx.onChange(ctx.allowTabDeactivation ? (value === ctx.value ? null : value) : value);\n    onClick?.(event);\n  };\n\n  const stylesApiProps = { classNames, styles, props };\n\n  return (\n    <UnstyledButton\n      {...others}\n      {...ctx.getStyles('tab', { className, style, variant: ctx.variant, ...stylesApiProps })}\n      disabled={disabled}\n      unstyled={ctx.unstyled}\n      variant={ctx.variant}\n      mod={[\n        {\n          active,\n          disabled,\n          orientation: ctx.orientation,\n          inverted: ctx.inverted,\n          placement: ctx.orientation === 'vertical' && ctx.placement,\n        },\n        mod,\n      ]}\n      ref={ref}\n      role=\"tab\"\n      id={ctx.getTabId(value)}\n      aria-selected={active}\n      tabIndex={active || ctx.value === null ? 0 : -1}\n      aria-controls={ctx.getPanelId(value)}\n      onClick={activateTab}\n      __vars={{ '--tabs-color': color ? getThemeColor(color, theme) : undefined }}\n      onKeyDown={createScopedKeydownHandler({\n        siblingSelector: '[role=\"tab\"]',\n        parentSelector: '[role=\"tablist\"]',\n        activateOnFocus: ctx.activateTabWithKeyboard,\n        loop: ctx.loop,\n        orientation: ctx.orientation || 'horizontal',\n        dir,\n        onKeyDown,\n      })}\n    >\n      {leftSection && (\n        <span {...ctx.getStyles('tabSection', stylesApiProps)} data-position=\"left\">\n          {leftSection}\n        </span>\n      )}\n      {children && <span {...ctx.getStyles('tabLabel', stylesApiProps)}>{children}</span>}\n      {rightSection && (\n        <span {...ctx.getStyles('tabSection', stylesApiProps)} data-position=\"right\">\n          {rightSection}\n        </span>\n      )}\n    </UnstyledButton>\n  );\n});\n\nTabsTab.classes = classes;\nTabsTab.displayName = '@mantine/core/TabsTab';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 9035, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9040, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Tabs/TabsPanel/TabsPanel.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const TabsPanel = registerClientReference(\n    function() { throw new Error(\"Attempted to call TabsPanel() from the server but TabsPanel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Tabs/TabsPanel/TabsPanel.mjs\",\n    \"TabsPanel\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,YAAY,2RACrB;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,oFACA"}},
    {"offset": {"line": 9049, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9054, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Tabs/TabsPanel/TabsPanel.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  CompoundStylesApiProps,\n  ElementProps,\n  factory,\n  Factory,\n  useProps,\n} from '../../../core';\nimport { useTabsContext } from '../Tabs.context';\nimport classes from '../Tabs.module.css';\n\nexport type TabsPanelStylesNames = 'panel';\n\nexport interface TabsPanelProps\n  extends BoxProps,\n    CompoundStylesApiProps<TabsPanelFactory>,\n    ElementProps<'div'> {\n  /** Panel content */\n  children: React.ReactNode;\n\n  /** If set to `true`, the content will be kept mounted, even if `keepMounted` is set `false` in the parent `Tabs` component */\n  keepMounted?: boolean;\n\n  /** Value of associated control */\n  value: string;\n}\n\nexport type TabsPanelFactory = Factory<{\n  props: TabsPanelProps;\n  ref: HTMLDivElement;\n  stylesNames: TabsPanelStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<TabsPanelProps> = {};\n\nexport const TabsPanel = factory<TabsPanelFactory>((_props, ref) => {\n  const props = useProps('TabsPanel', defaultProps, _props);\n  const { children, className, value, classNames, styles, style, mod, ...others } = props;\n\n  const ctx = useTabsContext();\n\n  const active = ctx.value === value;\n  const content = ctx.keepMounted || props.keepMounted ? children : active ? children : null;\n\n  return (\n    <Box\n      {...others}\n      {...ctx.getStyles('panel', {\n        className,\n        classNames,\n        styles,\n        style: [style, !active ? { display: 'none' } : undefined],\n        props,\n      })}\n      ref={ref}\n      mod={[{ orientation: ctx.orientation }, mod]}\n      role=\"tabpanel\"\n      id={ctx.getPanelId(value)}\n      aria-labelledby={ctx.getTabId(value)}\n    >\n      {content}\n    </Box>\n  );\n});\n\nTabsPanel.classes = classes;\nTabsPanel.displayName = '@mantine/core/TabsPanel';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 9059, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9064, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/TagsInput/TagsInput.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const TagsInput = registerClientReference(\n    function() { throw new Error(\"Attempted to call TagsInput() from the server but TagsInput is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/TagsInput/TagsInput.mjs\",\n    \"TagsInput\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,YAAY,2RACrB;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,+EACA"}},
    {"offset": {"line": 9073, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9078, "column": 0}, "map": {"version":3,"sources":["../../../src/components/TagsInput/TagsInput.tsx"],"sourcesContent":["import React from 'react';\nimport { useId, useUncontrolled } from '@mantine/hooks';\nimport {\n  BoxProps,\n  ElementProps,\n  extractStyleProps,\n  factory,\n  Factory,\n  StylesApiProps,\n  useProps,\n  useResolvedStylesApi,\n  useStyles,\n} from '../../core';\nimport { __CloseButtonProps } from '../CloseButton';\nimport {\n  Combobox,\n  ComboboxLikeProps,\n  ComboboxLikeRenderOptionInput,\n  ComboboxLikeStylesNames,\n  ComboboxStringData,\n  ComboboxStringItem,\n  getOptionsLockup,\n  getParsedComboboxData,\n  OptionsDropdown,\n  useCombobox,\n} from '../Combobox';\nimport { __BaseInputProps, __InputStylesNames } from '../Input';\nimport { InputBase } from '../InputBase';\nimport { Pill } from '../Pill';\nimport { PillsInput } from '../PillsInput';\nimport { ScrollAreaProps } from '../ScrollArea';\nimport { filterPickedTags } from './filter-picked-tags';\nimport { getSplittedTags } from './get-splitted-tags';\n\nexport type TagsInputStylesNames =\n  | __InputStylesNames\n  | ComboboxLikeStylesNames\n  | 'pill'\n  | 'pillsList'\n  | 'inputField';\n\nexport interface TagsInputProps\n  extends BoxProps,\n    __BaseInputProps,\n    Omit<ComboboxLikeProps, 'data'>,\n    StylesApiProps<TagsInputFactory>,\n    ElementProps<'input', 'size' | 'value' | 'defaultValue' | 'onChange'> {\n  /** Data displayed in the dropdown */\n  data?: ComboboxStringData;\n\n  /** Controlled component value */\n  value?: string[];\n\n  /** Default value for uncontrolled component */\n  defaultValue?: string[];\n\n  /** Called whe value changes */\n  onChange?: (value: string[]) => void;\n\n  /** Called when tag is removed */\n  onRemove?: (value: string) => void;\n\n  /** Called whe the clear button is clicked */\n  onClear?: () => void;\n\n  /** Controlled search value */\n  searchValue?: string;\n\n  /** Default search value */\n  defaultSearchValue?: string;\n\n  /** Called when search changes */\n  onSearchChange?: (value: string) => void;\n\n  /** Maximum number of tags, `Infinity` by default */\n  maxTags?: number;\n\n  /** Determines whether duplicate tags are allowed, `false` by default */\n  allowDuplicates?: boolean;\n\n  /** Called when user tries to submit a duplicated tag */\n  onDuplicate?: (value: string) => void;\n\n  /** Characters that should trigger tags split, `[',']` by default */\n  splitChars?: string[];\n\n  /** Determines whether the clear button should be displayed in the right section when the component has value, `false` by default */\n  clearable?: boolean;\n\n  /** Props passed down to the clear button */\n  clearButtonProps?: __CloseButtonProps & ElementProps<'button'>;\n\n  /** Props passed down to the hidden input */\n  hiddenInputProps?: Omit<React.ComponentPropsWithoutRef<'input'>, 'value'>;\n\n  /** Divider used to separate values in the hidden input `value` attribute, `','` by default */\n  hiddenInputValuesDivider?: string;\n\n  /** A function to render content of the option, replaces the default content of the option */\n  renderOption?: (input: ComboboxLikeRenderOptionInput<ComboboxStringItem>) => React.ReactNode;\n\n  /** Props passed down to the underlying `ScrollArea` component in the dropdown */\n  scrollAreaProps?: ScrollAreaProps;\n}\n\nexport type TagsInputFactory = Factory<{\n  props: TagsInputProps;\n  ref: HTMLInputElement;\n  stylesNames: TagsInputStylesNames;\n}>;\n\nconst defaultProps: Partial<TagsInputProps> = {\n  maxTags: Infinity,\n  allowDuplicates: false,\n  splitChars: [','],\n  hiddenInputValuesDivider: ',',\n};\n\nexport const TagsInput = factory<TagsInputFactory>((_props, ref) => {\n  const props = useProps('TagsInput', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    size,\n    value,\n    defaultValue,\n    onChange,\n    onKeyDown,\n    maxTags,\n    allowDuplicates,\n    onDuplicate,\n    variant,\n    data,\n    dropdownOpened,\n    defaultDropdownOpened,\n    onDropdownOpen,\n    onDropdownClose,\n    selectFirstOptionOnChange,\n    onOptionSubmit,\n    comboboxProps,\n    filter,\n    limit,\n    withScrollArea,\n    maxDropdownHeight,\n    searchValue,\n    defaultSearchValue,\n    onSearchChange,\n    readOnly,\n    disabled,\n    splitChars,\n    onFocus,\n    onBlur,\n    onPaste,\n    radius,\n    rightSection,\n    rightSectionWidth,\n    rightSectionPointerEvents,\n    rightSectionProps,\n    leftSection,\n    leftSectionWidth,\n    leftSectionPointerEvents,\n    leftSectionProps,\n    inputContainer,\n    inputWrapperOrder,\n    withAsterisk,\n    required,\n    labelProps,\n    descriptionProps,\n    errorProps,\n    wrapperProps,\n    description,\n    label,\n    error,\n    withErrorStyles,\n    name,\n    form,\n    id,\n    clearable,\n    clearButtonProps,\n    hiddenInputProps,\n    hiddenInputValuesDivider,\n    mod,\n    renderOption,\n    onRemove,\n    onClear,\n    scrollAreaProps,\n    ...others\n  } = props;\n\n  const _id = useId(id);\n  const parsedData = getParsedComboboxData(data);\n  const optionsLockup = getOptionsLockup(parsedData);\n\n  const combobox = useCombobox({\n    opened: dropdownOpened,\n    defaultOpened: defaultDropdownOpened,\n    onDropdownOpen,\n    onDropdownClose: () => {\n      onDropdownClose?.();\n      combobox.resetSelectedOption();\n    },\n  });\n\n  const {\n    styleProps,\n    rest: { type, autoComplete, ...rest },\n  } = extractStyleProps(others);\n\n  const [_value, setValue] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: [],\n    onChange,\n  });\n\n  const [_searchValue, setSearchValue] = useUncontrolled({\n    value: searchValue,\n    defaultValue: defaultSearchValue,\n    finalValue: '',\n    onChange: onSearchChange,\n  });\n\n  const getStyles = useStyles<TagsInputFactory>({\n    name: 'TagsInput',\n    classes: {} as any,\n    props,\n    classNames,\n    styles,\n    unstyled,\n  });\n\n  const { resolvedClassNames, resolvedStyles } = useResolvedStylesApi<TagsInputFactory>({\n    props,\n    styles,\n    classNames,\n  });\n\n  const handleInputKeydown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    onKeyDown?.(event);\n\n    const inputValue = _searchValue.trim();\n    const { length } = inputValue;\n\n    if (splitChars!.includes(event.key) && length > 0) {\n      setValue(\n        getSplittedTags({\n          splitChars,\n          allowDuplicates,\n          maxTags,\n          value: _searchValue,\n          currentTags: _value,\n        })\n      );\n      setSearchValue('');\n      event.preventDefault();\n    }\n\n    if (event.key === 'Enter' && length > 0 && !event.nativeEvent.isComposing) {\n      event.preventDefault();\n      const isDuplicate = _value.some((tag) => tag.toLowerCase() === inputValue.toLowerCase());\n\n      if (isDuplicate) {\n        onDuplicate?.(inputValue);\n      }\n\n      if ((!isDuplicate || (isDuplicate && allowDuplicates)) && _value.length < maxTags!) {\n        onOptionSubmit?.(inputValue);\n        setSearchValue('');\n\n        if (inputValue.length > 0) {\n          setValue([..._value, inputValue]);\n        }\n      }\n    }\n\n    if (\n      event.key === 'Backspace' &&\n      length === 0 &&\n      _value.length > 0 &&\n      !event.nativeEvent.isComposing\n    ) {\n      onRemove?.(_value[_value.length - 1]);\n      setValue(_value.slice(0, _value.length - 1));\n    }\n  };\n\n  const handlePaste = (event: React.ClipboardEvent<HTMLInputElement>) => {\n    onPaste?.(event);\n    event.preventDefault();\n\n    if (event.clipboardData) {\n      const pastedText = event.clipboardData.getData('text/plain');\n      setValue(\n        getSplittedTags({\n          splitChars,\n          allowDuplicates,\n          maxTags,\n          value: pastedText,\n          currentTags: _value,\n        })\n      );\n      setSearchValue('');\n    }\n  };\n\n  const values = _value.map((item, index) => (\n    <Pill\n      key={`${item}-${index}`}\n      withRemoveButton={!readOnly}\n      onRemove={() => {\n        setValue(_value.filter((i) => item !== i));\n        onRemove?.(item);\n      }}\n      unstyled={unstyled}\n      disabled={disabled}\n      {...getStyles('pill')}\n    >\n      {item}\n    </Pill>\n  ));\n\n  const clearButton = clearable && _value.length > 0 && !disabled && !readOnly && (\n    <Combobox.ClearButton\n      size={size as string}\n      {...clearButtonProps}\n      onClear={() => {\n        setValue([]);\n        setSearchValue('');\n        onClear?.();\n      }}\n    />\n  );\n\n  return (\n    <>\n      <Combobox\n        store={combobox}\n        classNames={resolvedClassNames}\n        styles={resolvedStyles}\n        unstyled={unstyled}\n        size={size}\n        readOnly={readOnly}\n        __staticSelector=\"TagsInput\"\n        onOptionSubmit={(val) => {\n          onOptionSubmit?.(val);\n          setSearchValue('');\n          _value.length < maxTags! && setValue([..._value, optionsLockup[val].label]);\n        }}\n        {...comboboxProps}\n      >\n        <Combobox.DropdownTarget>\n          <PillsInput\n            {...styleProps}\n            __staticSelector=\"TagsInput\"\n            classNames={resolvedClassNames}\n            styles={resolvedStyles}\n            unstyled={unstyled}\n            size={size}\n            className={className}\n            style={style}\n            variant={variant}\n            disabled={disabled}\n            radius={radius}\n            rightSection={rightSection || clearButton}\n            rightSectionWidth={rightSectionWidth}\n            rightSectionPointerEvents={rightSectionPointerEvents}\n            rightSectionProps={rightSectionProps}\n            leftSection={leftSection}\n            leftSectionWidth={leftSectionWidth}\n            leftSectionPointerEvents={leftSectionPointerEvents}\n            leftSectionProps={leftSectionProps}\n            inputContainer={inputContainer}\n            inputWrapperOrder={inputWrapperOrder}\n            withAsterisk={withAsterisk}\n            required={required}\n            labelProps={labelProps}\n            descriptionProps={descriptionProps}\n            errorProps={errorProps}\n            wrapperProps={wrapperProps}\n            description={description}\n            label={label}\n            error={error}\n            multiline\n            withErrorStyles={withErrorStyles}\n            __stylesApiProps={{ ...props, multiline: true }}\n            id={_id}\n            mod={mod}\n          >\n            <Pill.Group disabled={disabled} unstyled={unstyled} {...getStyles('pillsList')}>\n              {values}\n              <Combobox.EventsTarget autoComplete={autoComplete}>\n                <PillsInput.Field\n                  {...rest}\n                  ref={ref}\n                  {...getStyles('inputField')}\n                  unstyled={unstyled}\n                  onKeyDown={handleInputKeydown}\n                  onFocus={(event) => {\n                    onFocus?.(event);\n                    combobox.openDropdown();\n                  }}\n                  onBlur={(event) => {\n                    onBlur?.(event);\n                    combobox.closeDropdown();\n                  }}\n                  onPaste={handlePaste}\n                  value={_searchValue}\n                  onChange={(event) => setSearchValue(event.currentTarget.value)}\n                  required={required && _value.length === 0}\n                  disabled={disabled}\n                  readOnly={readOnly}\n                  id={_id}\n                />\n              </Combobox.EventsTarget>\n            </Pill.Group>\n          </PillsInput>\n        </Combobox.DropdownTarget>\n\n        <OptionsDropdown\n          data={filterPickedTags({ data: parsedData, value: _value })}\n          hidden={readOnly || disabled}\n          filter={filter}\n          search={_searchValue}\n          limit={limit}\n          hiddenWhenEmpty\n          withScrollArea={withScrollArea}\n          maxDropdownHeight={maxDropdownHeight}\n          unstyled={unstyled}\n          labelId={`${_id}-label`}\n          renderOption={renderOption}\n          scrollAreaProps={scrollAreaProps}\n        />\n      </Combobox>\n      <Combobox.HiddenInput\n        name={name}\n        form={form}\n        value={_value}\n        valuesDivider={hiddenInputValuesDivider}\n        disabled={disabled}\n        {...hiddenInputProps}\n      />\n    </>\n  );\n});\n\nTagsInput.classes = { ...InputBase.classes, ...Combobox.classes };\nTagsInput.displayName = '@mantine/core/TagsInput';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 9083, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9088, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Text/Text.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Text = registerClientReference(\n    function() { throw new Error(\"Attempted to call Text() from the server but Text is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Text/Text.mjs\",\n    \"Text\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,OAAO,2RAChB;IAAa,MAAM,IAAI,MAAM;AAAwN,GACrP,qEACA"}},
    {"offset": {"line": 9097, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9102, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Text/Text.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  getFontSize,\n  getGradient,\n  getLineHeight,\n  getThemeColor,\n  MantineColor,\n  MantineGradient,\n  MantineSize,\n  polymorphicFactory,\n  PolymorphicFactory,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport classes from './Text.module.css';\n\ntype TextTruncate = 'end' | 'start' | boolean;\n\nfunction getTextTruncate(truncate: TextTruncate | undefined) {\n  if (truncate === 'start') {\n    return 'start';\n  }\n\n  if (truncate === 'end' || truncate) {\n    return 'end';\n  }\n\n  return undefined;\n}\n\nexport type TextStylesNames = 'root';\nexport type TextVariant = 'text' | 'gradient';\nexport type TextCssVariables = {\n  root: '--text-gradient' | '--text-line-clamp' | '--text-fz' | '--text-lh';\n};\n\nexport interface TextProps extends BoxProps, StylesApiProps<TextFactory> {\n  __staticSelector?: string;\n\n  /** Controls `font-size` and `line-height`, `'md'` by default */\n  size?: MantineSize | (string & {});\n\n  /** Number of lines after which Text will be truncated */\n  lineClamp?: number;\n\n  /** Side on which Text must be truncated, if `true`, text is truncated from the start */\n  truncate?: TextTruncate;\n\n  /** Sets `line-height` to 1 for centering, `false` by default */\n  inline?: boolean;\n\n  /** Determines whether font properties should be inherited from the parent, `false` by default */\n  inherit?: boolean;\n\n  /** Gradient configuration, ignored when `variant` is not `gradient`, `theme.defaultGradient` by default */\n  gradient?: MantineGradient;\n\n  /** Shorthand for `component=\"span\"`, `false` by default, default root element is `p` */\n  span?: boolean;\n\n  /** @deprecated Use `c` prop instead */\n  color?: MantineColor;\n}\n\nexport type TextFactory = PolymorphicFactory<{\n  props: TextProps;\n  defaultComponent: 'p';\n  defaultRef: HTMLParagraphElement;\n  stylesNames: TextStylesNames;\n  vars: TextCssVariables;\n  variant: TextVariant;\n}>;\n\nconst defaultProps: Partial<TextProps> = {\n  inherit: false,\n};\n\nconst varsResolver = createVarsResolver<TextFactory>(\n  (theme, { variant, lineClamp, gradient, size, color }) => ({\n    root: {\n      '--text-fz': getFontSize(size),\n      '--text-lh': getLineHeight(size),\n      '--text-gradient': variant === 'gradient' ? getGradient(gradient, theme) : undefined,\n      '--text-line-clamp': typeof lineClamp === 'number' ? lineClamp.toString() : undefined,\n      '--text-color': color ? getThemeColor(color, theme) : undefined,\n    },\n  })\n);\n\nexport const Text = polymorphicFactory<TextFactory>((_props, ref) => {\n  const props = useProps('Text', defaultProps, _props);\n  const {\n    lineClamp,\n    truncate,\n    inline,\n    inherit,\n    gradient,\n    span,\n    __staticSelector,\n    vars,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    variant,\n    mod,\n    size,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<TextFactory>({\n    name: ['Text', __staticSelector],\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <Box\n      {...getStyles('root', { focusable: true })}\n      ref={ref}\n      component={span ? 'span' : 'p'}\n      variant={variant}\n      mod={[\n        {\n          'data-truncate': getTextTruncate(truncate),\n          'data-line-clamp': typeof lineClamp === 'number',\n          'data-inline': inline,\n          'data-inherit': inherit,\n        },\n        mod,\n      ]}\n      size={size}\n      {...others}\n    />\n  );\n});\n\nText.classes = classes;\nText.displayName = '@mantine/core/Text';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 9107, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9112, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Textarea/Textarea.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Textarea = registerClientReference(\n    function() { throw new Error(\"Attempted to call Textarea() from the server but Textarea is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Textarea/Textarea.mjs\",\n    \"Textarea\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,WAAW,2RACpB;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,6EACA"}},
    {"offset": {"line": 9121, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9126, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Textarea/Textarea.tsx"],"sourcesContent":["import React from 'react';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport {\n  BoxProps,\n  ElementProps,\n  factory,\n  Factory,\n  getEnv,\n  StylesApiProps,\n  useProps,\n} from '../../core';\nimport { __BaseInputProps, __InputStylesNames } from '../Input';\nimport { InputBase } from '../InputBase';\n\nexport interface TextareaProps\n  extends BoxProps,\n    __BaseInputProps,\n    StylesApiProps<TextareaFactory>,\n    ElementProps<'textarea', 'size'> {\n  __staticSelector?: string;\n\n  /** Determines whether the textarea height should grow with its content, `false` by default */\n  autosize?: boolean;\n\n  /** Maximum rows for autosize textarea to grow, ignored if `autosize` prop is not set */\n  maxRows?: number;\n\n  /** Minimum rows of autosize textarea, ignored if `autosize` prop is not set */\n  minRows?: number;\n\n  /** Controls `resize` CSS property, `'none'` by default */\n  resize?: React.CSSProperties['resize'];\n}\n\nexport type TextareaFactory = Factory<{\n  props: TextareaProps;\n  ref: HTMLTextAreaElement;\n  stylesNames: __InputStylesNames;\n}>;\n\nconst defaultProps: Partial<TextareaProps> = {};\n\nexport const Textarea = factory<TextareaFactory>((props, ref) => {\n  const { autosize, maxRows, minRows, __staticSelector, resize, ...others } = useProps(\n    'Textarea',\n    defaultProps,\n    props\n  );\n\n  const shouldAutosize = autosize && getEnv() !== 'test';\n  const autosizeProps = shouldAutosize ? { maxRows, minRows } : {};\n\n  return (\n    <InputBase<any>\n      component={shouldAutosize ? TextareaAutosize : 'textarea'}\n      ref={ref}\n      {...others}\n      __staticSelector={__staticSelector || 'Textarea'}\n      multiline\n      data-no-overflow={(autosize && maxRows === undefined) || undefined}\n      __vars={{ '--input-resize': resize }}\n      {...autosizeProps}\n    />\n  );\n});\n\nTextarea.classes = InputBase.classes;\nTextarea.displayName = '@mantine/core/Textarea';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 9131, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9136, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/TextInput/TextInput.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const TextInput = registerClientReference(\n    function() { throw new Error(\"Attempted to call TextInput() from the server but TextInput is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/TextInput/TextInput.mjs\",\n    \"TextInput\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,YAAY,2RACrB;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,+EACA"}},
    {"offset": {"line": 9145, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9150, "column": 0}, "map": {"version":3,"sources":["../../../src/components/TextInput/TextInput.tsx"],"sourcesContent":["import React from 'react';\nimport { BoxProps, ElementProps, factory, Factory, StylesApiProps, useProps } from '../../core';\nimport { __BaseInputProps, __InputStylesNames } from '../Input';\nimport { InputBase } from '../InputBase';\n\nexport interface TextInputProps\n  extends BoxProps,\n    __BaseInputProps,\n    StylesApiProps<TextInputFactory>,\n    ElementProps<'input', 'size'> {}\n\nexport type TextInputFactory = Factory<{\n  props: TextInputProps;\n  ref: HTMLInputElement;\n  stylesNames: __InputStylesNames;\n}>;\n\nconst defaultProps: Partial<TextInputProps> = {};\n\nexport const TextInput = factory<TextInputFactory>((props, ref) => {\n  const _props = useProps('TextInput', defaultProps, props);\n\n  return <InputBase component=\"input\" ref={ref} {..._props} __staticSelector=\"TextInput\" />;\n});\n\nTextInput.classes = InputBase.classes;\nTextInput.displayName = '@mantine/core/TextInput';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 9155, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9160, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/ThemeIcon/ThemeIcon.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ThemeIcon = registerClientReference(\n    function() { throw new Error(\"Attempted to call ThemeIcon() from the server but ThemeIcon is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/ThemeIcon/ThemeIcon.mjs\",\n    \"ThemeIcon\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,YAAY,2RACrB;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,+EACA"}},
    {"offset": {"line": 9169, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9174, "column": 0}, "map": {"version":3,"sources":["../../../src/components/ThemeIcon/ThemeIcon.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getRadius,\n  getSize,\n  MantineColor,\n  MantineGradient,\n  MantineRadius,\n  MantineSize,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport classes from './ThemeIcon.module.css';\n\nexport type ThemeIconStylesNames = 'root';\nexport type ThemeIconVariant =\n  | 'filled'\n  | 'light'\n  | 'outline'\n  | 'transparent'\n  | 'white'\n  | 'default'\n  | 'gradient';\n\nexport type ThemeIconCssVariables = {\n  root: '--ti-radius' | '--ti-size' | '--ti-bg' | '--ti-color' | '--ti-bd';\n};\n\nexport interface ThemeIconProps\n  extends BoxProps,\n    StylesApiProps<ThemeIconFactory>,\n    ElementProps<'div'> {\n  /** Controls width and height of the button. Numbers are converted to rem. `'md'` by default. */\n  size?: MantineSize | (string & {}) | number;\n\n  /** Key of `theme.colors` or any valid CSS color. Default value is `theme.primaryColor`.  */\n  color?: MantineColor;\n\n  /** Key of `theme.radius` or any valid CSS value to set border-radius. Numbers are converted to rem. `theme.defaultRadius` by default. */\n  radius?: MantineRadius;\n\n  /** Gradient data used when `variant=\"gradient\"`, default value is `theme.defaultGradient` */\n  gradient?: MantineGradient;\n\n  /** Icon displayed inside the component */\n  children?: React.ReactNode;\n\n  /** Determines whether button text color with filled variant should depend on `background-color`. If luminosity of the `color` prop is less than `theme.luminosityThreshold`, then `theme.white` will be used for text color, otherwise `theme.black`. Overrides `theme.autoContrast`. */\n  autoContrast?: boolean;\n}\n\nexport type ThemeIconFactory = Factory<{\n  props: ThemeIconProps;\n  ref: HTMLDivElement;\n  stylesNames: ThemeIconStylesNames;\n  vars: ThemeIconCssVariables;\n  variant: ThemeIconVariant;\n}>;\n\nconst defaultProps: Partial<ThemeIconProps> = {};\n\nconst varsResolver = createVarsResolver<ThemeIconFactory>(\n  (theme, { size, radius, variant, gradient, color, autoContrast }) => {\n    const colors = theme.variantColorResolver({\n      color: color || theme.primaryColor,\n      theme,\n      gradient,\n      variant: variant || 'filled',\n      autoContrast,\n    });\n\n    return {\n      root: {\n        '--ti-size': getSize(size, 'ti-size'),\n        '--ti-radius': radius === undefined ? undefined : getRadius(radius),\n        '--ti-bg': color || variant ? colors.background : undefined,\n        '--ti-color': color || variant ? colors.color : undefined,\n        '--ti-bd': color || variant ? colors.border : undefined,\n      },\n    };\n  }\n);\n\nexport const ThemeIcon = factory<ThemeIconFactory>((_props, ref) => {\n  const props = useProps('ThemeIcon', defaultProps, _props);\n  const { classNames, className, style, styles, unstyled, vars, autoContrast, ...others } = props;\n\n  const getStyles = useStyles<ThemeIconFactory>({\n    name: 'ThemeIcon',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return <Box ref={ref} {...getStyles('root')} {...others} />;\n});\n\nThemeIcon.classes = classes;\nThemeIcon.displayName = '@mantine/core/ThemeIcon';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 9179, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9184, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Timeline/Timeline.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Timeline = registerClientReference(\n    function() { throw new Error(\"Attempted to call Timeline() from the server but Timeline is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Timeline/Timeline.mjs\",\n    \"Timeline\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,WAAW,2RACpB;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,6EACA"}},
    {"offset": {"line": 9193, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9198, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Timeline/Timeline.tsx"],"sourcesContent":["import React, { Children, cloneElement } from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getAutoContrastValue,\n  getContrastColor,\n  getRadius,\n  getThemeColor,\n  MantineColor,\n  MantineRadius,\n  rem,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { TimelineProvider } from './Timeline.context';\nimport { TimelineItem, TimelineItemStylesNames } from './TimelineItem/TimelineItem';\nimport classes from './Timeline.module.css';\n\nexport type TimelineStylesNames = 'root' | TimelineItemStylesNames;\nexport type TimelineCssVariables = {\n  root: '--tl-line-width' | '--tl-bullet-size' | '--tl-color' | '--tl-icon-color' | '--tl-radius';\n};\n\nexport interface TimelineProps\n  extends BoxProps,\n    StylesApiProps<TimelineFactory>,\n    ElementProps<'div'> {\n  /** `Timeline.Item` components */\n  children?: React.ReactNode;\n\n  /** Index of active element */\n  active?: number;\n\n  /** Key of `theme.colors` or any valid CSS color to control active item colors, `theme.primaryColor` by default */\n  color?: MantineColor;\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius`, numbers are converted to rem, `'xl'` by default */\n  radius?: MantineRadius;\n\n  /** Controls size of the bullet, `20` by default */\n  bulletSize?: number | string;\n\n  /** Controls how the content is positioned relative to the bullet, `'left'` by default */\n  align?: 'right' | 'left';\n\n  /** Control width of the line */\n  lineWidth?: number | string;\n\n  /** Determines whether the active items direction should be reversed without reversing items order, `false` by default */\n  reverseActive?: boolean;\n\n  /** Determines whether icon color should depend on `background-color`. If luminosity of the `color` prop is less than `theme.luminosityThreshold`, then `theme.white` will be used for text color, otherwise `theme.black`. Overrides `theme.autoContrast`. */\n  autoContrast?: boolean;\n}\n\nexport type TimelineFactory = Factory<{\n  props: TimelineProps;\n  ref: HTMLDivElement;\n  stylesNames: TimelineStylesNames;\n  vars: TimelineCssVariables;\n  staticComponents: {\n    Item: typeof TimelineItem;\n  };\n}>;\n\nconst defaultProps: Partial<TimelineProps> = {\n  active: -1,\n  align: 'left',\n  reverseActive: false,\n};\n\nconst varsResolver = createVarsResolver<TimelineFactory>(\n  (theme, { bulletSize, lineWidth, radius, color, autoContrast }) => ({\n    root: {\n      '--tl-bullet-size': rem(bulletSize),\n      '--tl-line-width': rem(lineWidth),\n      '--tl-radius': radius === undefined ? undefined : getRadius(radius),\n      '--tl-color': color ? getThemeColor(color, theme) : undefined,\n      '--tl-icon-color': getAutoContrastValue(autoContrast, theme)\n        ? getContrastColor({ color, theme })\n        : undefined,\n    },\n  })\n);\n\nexport const Timeline = factory<TimelineFactory>((_props, ref) => {\n  const props = useProps('Timeline', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    children,\n    active,\n    color,\n    radius,\n    bulletSize,\n    align,\n    lineWidth,\n    reverseActive,\n    mod,\n    autoContrast,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<TimelineFactory>({\n    name: 'Timeline',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  const _children = Children.toArray(children);\n  const items = _children.map((item: any, index) =>\n    cloneElement(item, {\n      unstyled,\n      __align: align,\n      __active:\n        item.props?.active ||\n        (reverseActive ? active! >= _children.length - index - 1 : active! >= index),\n      __lineActive:\n        item.props?.lineActive ||\n        (reverseActive ? active! >= _children.length - index - 1 : active! - 1 >= index),\n    })\n  );\n\n  return (\n    <TimelineProvider value={{ getStyles }}>\n      <Box {...getStyles('root')} mod={[{ align }, mod]} ref={ref} {...others}>\n        {items}\n      </Box>\n    </TimelineProvider>\n  );\n});\n\nTimeline.classes = classes;\nTimeline.displayName = '@mantine/core/Timeline';\nTimeline.Item = TimelineItem;\n"],"names":[],"mappings":""}},
    {"offset": {"line": 9203, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9208, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Timeline/TimelineItem/TimelineItem.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const TimelineItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call TimelineItem() from the server but TimelineItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Timeline/TimelineItem/TimelineItem.mjs\",\n    \"TimelineItem\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,eAAe,2RACxB;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,8FACA"}},
    {"offset": {"line": 9217, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9222, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Timeline/TimelineItem/TimelineItem.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  CompoundStylesApiProps,\n  ElementProps,\n  factory,\n  Factory,\n  getRadius,\n  getThemeColor,\n  MantineColor,\n  MantineRadius,\n  useMantineTheme,\n  useProps,\n} from '../../../core';\nimport { useTimelineContext } from '../Timeline.context';\nimport classes from '../Timeline.module.css';\n\nexport type TimelineItemStylesNames =\n  | 'itemBody'\n  | 'itemContent'\n  | 'itemBullet'\n  | 'item'\n  | 'itemTitle';\n\nexport interface TimelineItemProps\n  extends BoxProps,\n    CompoundStylesApiProps<TimelineItemFactory>,\n    ElementProps<'div', 'title'> {\n  /** Determines whether the item should be highlighted, controlled by the parent `Timeline` component  */\n  __active?: boolean;\n\n  /** Determines whether the line of the item should be highlighted, controlled by the parent Timeline component */\n  __lineActive?: boolean;\n\n  /** Line and bullet position relative to item content, controlled by the parent Timeline component */\n  __align?: 'right' | 'left';\n\n  /** Item title, displayed next to the bullet */\n  title?: React.ReactNode;\n\n  /** Content displayed below the title */\n  children?: React.ReactNode;\n\n  /** React node that should be rendered inside the bullet – icon, image, avatar, etc. By default, large white dot is displayed. */\n  bullet?: React.ReactNode;\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius`, numbers are converted to rem, `'xl'` by default */\n  radius?: MantineRadius;\n\n  /** Key of `theme.colors` or any valid CSS color to control active item colors, `theme.primaryColor` by default */\n  color?: MantineColor;\n\n  /** Controls line border style, `'solid'` by default */\n  lineVariant?: 'solid' | 'dashed' | 'dotted';\n}\n\nexport type TimelineItemFactory = Factory<{\n  props: TimelineItemProps;\n  ref: HTMLDivElement;\n  stylesNames: TimelineItemStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<TimelineItemProps> = {};\n\nexport const TimelineItem = factory<TimelineItemFactory>((_props, ref) => {\n  const props = useProps('TimelineItem', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    vars,\n    __active,\n    __align,\n    __lineActive,\n    __vars,\n    bullet,\n    radius,\n    color,\n    lineVariant,\n    children,\n    title,\n    mod,\n    ...others\n  } = props;\n\n  const ctx = useTimelineContext();\n  const theme = useMantineTheme();\n\n  const stylesApiProps = { classNames, styles };\n\n  return (\n    <Box\n      {...ctx.getStyles('item', { ...stylesApiProps, className, style })}\n      mod={[{ 'line-active': __lineActive, active: __active }, mod]}\n      ref={ref}\n      __vars={{\n        '--tli-radius': radius ? getRadius(radius) : undefined,\n        '--tli-color': color ? getThemeColor(color, theme) : undefined,\n        '--tli-border-style': lineVariant || undefined,\n      }}\n      {...others}\n    >\n      <Box\n        {...ctx.getStyles('itemBullet', stylesApiProps)}\n        mod={{ 'with-child': !!bullet, align: __align, active: __active }}\n      >\n        {bullet}\n      </Box>\n\n      <div {...ctx.getStyles('itemBody', stylesApiProps)}>\n        {title && <div {...ctx.getStyles('itemTitle', stylesApiProps)}>{title}</div>}\n        <div {...ctx.getStyles('itemContent', stylesApiProps)}>{children}</div>\n      </div>\n    </Box>\n  );\n});\n\nTimelineItem.classes = classes;\nTimelineItem.displayName = '@mantine/core/TimelineItem';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 9227, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9232, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Title/Title.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Title = registerClientReference(\n    function() { throw new Error(\"Attempted to call Title() from the server but Title is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Title/Title.mjs\",\n    \"Title\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,QAAQ,2RACjB;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,uEACA"}},
    {"offset": {"line": 9241, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9246, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Title/Title.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { getTitleSize } from './get-title-size';\nimport classes from './Title.module.css';\n\nexport type TitleOrder = 1 | 2 | 3 | 4 | 5 | 6;\nexport type TitleSize = `h${TitleOrder}` | React.CSSProperties['fontSize'];\n\nexport type TitleStylesNames = 'root';\nexport type TitleCssVariables = {\n  root: '--title-fw' | '--title-lh' | '--title-fz' | '--title-line-clamp' | '--title-text-wrap';\n};\n\nexport interface TitleProps\n  extends BoxProps,\n    StylesApiProps<TitleFactory>,\n    ElementProps<'h1', 'color'> {\n  /** Determines which tag will be used (h1-h6), controls `font-size` style if `size` prop is not set, `1` by default */\n  order?: TitleOrder;\n\n  /** Changes title size, if not set, then size is controlled by `order` prop */\n  size?: TitleSize;\n\n  /** Number of lines after which Text will be truncated */\n  lineClamp?: number;\n\n  /** Controls `text-wrap` property, `'wrap'` by default */\n  textWrap?: 'wrap' | 'nowrap' | 'balance' | 'pretty' | 'stable';\n}\n\nexport type TitleFactory = Factory<{\n  props: TitleProps;\n  ref: HTMLHeadingElement;\n  stylesNames: TitleStylesNames;\n  vars: TitleCssVariables;\n}>;\n\nconst defaultProps: Partial<TitleProps> = {\n  order: 1,\n};\n\nconst varsResolver = createVarsResolver<TitleFactory>((_, { order, size, lineClamp, textWrap }) => {\n  const sizeVariables = getTitleSize(order!, size);\n  return {\n    root: {\n      '--title-fw': sizeVariables.fontWeight,\n      '--title-lh': sizeVariables.lineHeight,\n      '--title-fz': sizeVariables.fontSize,\n      '--title-line-clamp': typeof lineClamp === 'number' ? lineClamp.toString() : undefined,\n      '--title-text-wrap': textWrap,\n    },\n  };\n});\n\nexport const Title = factory<TitleFactory>((_props, ref) => {\n  const props = useProps('Title', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    order,\n    vars,\n    size,\n    variant,\n    lineClamp,\n    textWrap,\n    mod,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<TitleFactory>({\n    name: 'Title',\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  if (![1, 2, 3, 4, 5, 6].includes(order!)) {\n    return null;\n  }\n\n  return (\n    <Box\n      {...getStyles('root')}\n      component={`h${order!}`}\n      variant={variant}\n      ref={ref}\n      mod={[{ order, 'data-line-clamp': typeof lineClamp === 'number' }, mod]}\n      size={size}\n      {...others}\n    />\n  );\n});\n\nTitle.classes = classes;\nTitle.displayName = '@mantine/core/Title';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 9251, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9256, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Tooltip/Tooltip.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Tooltip = registerClientReference(\n    function() { throw new Error(\"Attempted to call Tooltip() from the server but Tooltip is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Tooltip/Tooltip.mjs\",\n    \"Tooltip\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,UAAU,2RACnB;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,2EACA"}},
    {"offset": {"line": 9265, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9270, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Tooltip/Tooltip.tsx"],"sourcesContent":["import React, { cloneElement, useRef } from 'react';\nimport cx from 'clsx';\nimport { useMergedRef } from '@mantine/hooks';\nimport {\n  Box,\n  createVarsResolver,\n  factory,\n  Factory,\n  getDefaultZIndex,\n  getRadius,\n  getThemeColor,\n  isElement,\n  useDirection,\n  useProps,\n  useStyles,\n} from '../../core';\nimport {\n  ArrowPosition,\n  FloatingArrow,\n  FloatingAxesOffsets,\n  FloatingPosition,\n  FloatingStrategy,\n  getFloatingPosition,\n} from '../Floating';\nimport { OptionalPortal } from '../Portal';\nimport { getTransitionProps, Transition, TransitionOverride } from '../Transition';\nimport { TooltipBaseProps, TooltipCssVariables, TooltipStylesNames } from './Tooltip.types';\nimport { TooltipFloating } from './TooltipFloating/TooltipFloating';\nimport { TooltipGroup } from './TooltipGroup/TooltipGroup';\nimport { useTooltip } from './use-tooltip';\nimport classes from './Tooltip.module.css';\n\nexport interface TooltipProps extends TooltipBaseProps {\n  /** Called when tooltip position changes */\n  onPositionChange?: (position: FloatingPosition) => void;\n\n  /** Open delay in ms */\n  openDelay?: number;\n\n  /** Close delay in ms, `0` by default */\n  closeDelay?: number;\n\n  /** Controlled opened state */\n  opened?: boolean;\n\n  /** Space between target element and tooltip in px, `5` by default */\n  offset?: number | FloatingAxesOffsets;\n\n  /** Determines whether the tooltip should have an arrow, `false` by default */\n  withArrow?: boolean;\n\n  /** Arrow size in px, `4` by default */\n  arrowSize?: number;\n\n  /** Arrow offset in px, `5` by default */\n  arrowOffset?: number;\n\n  /** Arrow `border-radius` in px, `0` by default */\n  arrowRadius?: number;\n\n  /** Arrow position relative to the tooltip, `side` by default */\n  arrowPosition?: ArrowPosition;\n\n  /** Props passed down to the `Transition` component that used to animate tooltip presence, use to configure duration and animation type, `{ duration: 100, transition: 'fade' }` by default */\n  transitionProps?: TransitionOverride;\n\n  /** Determines which events will be used to show tooltip, `{ hover: true, focus: false, touch: false }` by default */\n  events?: { hover: boolean; focus: boolean; touch: boolean };\n\n  /** `useEffect` dependencies to force update tooltip position */\n  positionDependencies?: any[];\n\n  /** Must be set if the tooltip target is an inline element */\n  inline?: boolean;\n\n  /** If set, the tooltip will not be unmounted from the DOM when it is hidden, `display: none` styles will be applied instead */\n  keepMounted?: boolean;\n\n  /** Changes floating ui [position strategy](https://floating-ui.com/docs/usefloating#strategy), `'absolute'` by default */\n  floatingStrategy?: FloatingStrategy;\n}\n\nexport type TooltipFactory = Factory<{\n  props: TooltipProps;\n  ref: HTMLDivElement;\n  stylesNames: TooltipStylesNames;\n  vars: TooltipCssVariables;\n  staticComponents: {\n    Floating: typeof TooltipFloating;\n    Group: typeof TooltipGroup;\n  };\n}>;\n\nconst defaultProps: Partial<TooltipProps> = {\n  position: 'top',\n  refProp: 'ref',\n  withinPortal: true,\n  inline: false,\n  arrowSize: 4,\n  arrowOffset: 5,\n  arrowRadius: 0,\n  arrowPosition: 'side',\n  offset: 5,\n  transitionProps: { duration: 100, transition: 'fade' },\n  events: { hover: true, focus: false, touch: false },\n  zIndex: getDefaultZIndex('popover'),\n  positionDependencies: [],\n};\n\nconst varsResolver = createVarsResolver<TooltipFactory>((theme, { radius, color }) => ({\n  tooltip: {\n    '--tooltip-radius': radius === undefined ? undefined : getRadius(radius),\n    '--tooltip-bg': color ? getThemeColor(color, theme) : undefined,\n    '--tooltip-color': color ? 'var(--mantine-color-white)' : undefined,\n  },\n}));\n\nexport const Tooltip = factory<TooltipFactory>((_props, ref) => {\n  const props = useProps('Tooltip', defaultProps, _props);\n  const {\n    children,\n    position,\n    refProp,\n    label,\n    openDelay,\n    closeDelay,\n    onPositionChange,\n    opened,\n    withinPortal,\n    radius,\n    color,\n    classNames,\n    styles,\n    unstyled,\n    style,\n    className,\n    withArrow,\n    arrowSize,\n    arrowOffset,\n    arrowRadius,\n    arrowPosition,\n    offset,\n    transitionProps,\n    multiline,\n    events,\n    zIndex,\n    disabled,\n    positionDependencies,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    inline,\n    variant,\n    keepMounted,\n    vars,\n    portalProps,\n    mod,\n    floatingStrategy,\n    ...others\n  } = useProps('Tooltip', defaultProps, props);\n\n  const { dir } = useDirection();\n  const arrowRef = useRef<HTMLDivElement>(null);\n  const tooltip = useTooltip({\n    position: getFloatingPosition(dir, position!),\n    closeDelay,\n    openDelay,\n    onPositionChange,\n    opened,\n    events,\n    arrowRef,\n    arrowOffset,\n    offset: typeof offset === 'number' ? offset! + (withArrow ? arrowSize! / 2 : 0) : offset!,\n    positionDependencies: [...positionDependencies!, children],\n    inline,\n    strategy: floatingStrategy,\n  });\n\n  const getStyles = useStyles<TooltipFactory>({\n    name: 'Tooltip',\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    rootSelector: 'tooltip',\n    vars,\n    varsResolver,\n  });\n\n  if (!isElement(children)) {\n    throw new Error(\n      '[@mantine/core] Tooltip component children should be an element or a component that accepts ref, fragments, strings, numbers and other primitive values are not supported'\n    );\n  }\n\n  const targetRef = useMergedRef(tooltip.reference, (children as any).ref, ref);\n  const transition = getTransitionProps(transitionProps, { duration: 100, transition: 'fade' });\n\n  return (\n    <>\n      <OptionalPortal {...portalProps} withinPortal={withinPortal}>\n        <Transition\n          {...transition}\n          keepMounted={keepMounted}\n          mounted={!disabled && !!tooltip.opened}\n          duration={tooltip.isGroupPhase ? 10 : transition.duration}\n        >\n          {(transitionStyles) => (\n            <Box\n              {...others}\n              variant={variant}\n              mod={[{ multiline }, mod]}\n              {...tooltip.getFloatingProps({\n                ref: tooltip.floating,\n                className: getStyles('tooltip').className,\n                style: {\n                  ...getStyles('tooltip').style,\n                  ...transitionStyles,\n                  zIndex: zIndex as React.CSSProperties['zIndex'],\n                  top: tooltip.y ?? 0,\n                  left: tooltip.x ?? 0,\n                },\n              })}\n            >\n              {label}\n\n              <FloatingArrow\n                ref={arrowRef}\n                arrowX={tooltip.arrowX!}\n                arrowY={tooltip.arrowY!}\n                visible={withArrow!}\n                position={tooltip.placement!}\n                arrowSize={arrowSize!}\n                arrowOffset={arrowOffset!}\n                arrowRadius={arrowRadius!}\n                arrowPosition={arrowPosition!}\n                {...getStyles('arrow')}\n              />\n            </Box>\n          )}\n        </Transition>\n      </OptionalPortal>\n\n      {cloneElement(\n        children,\n        tooltip.getReferenceProps({\n          onClick,\n          onMouseEnter,\n          onMouseLeave,\n          onMouseMove: props.onMouseMove,\n          onPointerDown: props.onPointerDown,\n          onPointerEnter: props.onPointerEnter,\n          [refProp!]: targetRef,\n          className: cx(className, children.props.className),\n          ...children.props,\n        })\n      )}\n    </>\n  );\n});\n\nTooltip.classes = classes;\nTooltip.displayName = '@mantine/core/Tooltip';\nTooltip.Floating = TooltipFloating;\nTooltip.Group = TooltipGroup;\n"],"names":[],"mappings":""}},
    {"offset": {"line": 9275, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9280, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Tooltip/TooltipGroup/TooltipGroup.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const TooltipGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call TooltipGroup() from the server but TooltipGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Tooltip/TooltipGroup/TooltipGroup.mjs\",\n    \"TooltipGroup\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,eAAe,2RACxB;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,6FACA"}},
    {"offset": {"line": 9289, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9294, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Tooltip/TooltipGroup/TooltipGroup.tsx"],"sourcesContent":["import React from 'react';\nimport { FloatingDelayGroup } from '@floating-ui/react';\nimport { useProps } from '../../../core';\nimport { TooltipGroupProvider } from './TooltipGroup.context';\n\nexport interface TooltipGroupProps {\n  /** <Tooltip /> components */\n  children: React.ReactNode;\n\n  /** Open delay in ms */\n  openDelay?: number;\n\n  /** Close delay in ms */\n  closeDelay?: number;\n}\n\nconst defaultProps: Partial<TooltipGroupProps> = {\n  openDelay: 0,\n  closeDelay: 0,\n};\n\nexport function TooltipGroup(props: TooltipGroupProps) {\n  const { openDelay, closeDelay, children } = useProps('TooltipGroup', defaultProps, props);\n\n  return (\n    <TooltipGroupProvider value>\n      <FloatingDelayGroup delay={{ open: openDelay, close: closeDelay }}>\n        {children}\n      </FloatingDelayGroup>\n    </TooltipGroupProvider>\n  );\n}\n\nTooltipGroup.displayName = '@mantine/core/TooltipGroup';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 9299, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9304, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Tooltip/TooltipFloating/TooltipFloating.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const TooltipFloating = registerClientReference(\n    function() { throw new Error(\"Attempted to call TooltipFloating() from the server but TooltipFloating is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Tooltip/TooltipFloating/TooltipFloating.mjs\",\n    \"TooltipFloating\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,kBAAkB,2RAC3B;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,mGACA"}},
    {"offset": {"line": 9313, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9318, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Tooltip/TooltipFloating/TooltipFloating.tsx"],"sourcesContent":["import React, { cloneElement } from 'react';\nimport { useMergedRef } from '@mantine/hooks';\nimport {\n  Box,\n  createVarsResolver,\n  factory,\n  Factory,\n  getDefaultZIndex,\n  getRadius,\n  getStyleObject,\n  getThemeColor,\n  isElement,\n  useMantineTheme,\n  useProps,\n  useStyles,\n} from '../../../core';\nimport { OptionalPortal } from '../../Portal';\nimport { TooltipBaseProps, TooltipCssVariables, TooltipStylesNames } from '../Tooltip.types';\nimport { useFloatingTooltip } from './use-floating-tooltip';\nimport classes from '../Tooltip.module.css';\n\nexport interface TooltipFloatingProps extends TooltipBaseProps {\n  /** Offset from mouse in px, `10` by default */\n  offset?: number;\n}\n\nexport type TooltipFloatingFactory = Factory<{\n  props: TooltipFloatingProps;\n  ref: HTMLDivElement;\n  stylesNames: TooltipStylesNames;\n  vars: TooltipCssVariables;\n}>;\n\nconst defaultProps: Partial<TooltipFloatingProps> = {\n  refProp: 'ref',\n  withinPortal: true,\n  offset: 10,\n  position: 'right',\n  zIndex: getDefaultZIndex('popover'),\n};\n\nconst varsResolver = createVarsResolver<TooltipFloatingFactory>((theme, { radius, color }) => ({\n  tooltip: {\n    '--tooltip-radius': radius === undefined ? undefined : getRadius(radius),\n    '--tooltip-bg': color ? getThemeColor(color, theme) : undefined,\n    '--tooltip-color': color ? 'var(--mantine-color-white)' : undefined,\n  },\n}));\n\nexport const TooltipFloating = factory<TooltipFloatingFactory>((_props, ref) => {\n  const props = useProps('TooltipFloating', defaultProps, _props);\n  const {\n    children,\n    refProp,\n    withinPortal,\n    style,\n    className,\n    classNames,\n    styles,\n    unstyled,\n    radius,\n    color,\n    label,\n    offset,\n    position,\n    multiline,\n    zIndex,\n    disabled,\n    variant,\n    vars,\n    portalProps,\n    ...others\n  } = props;\n\n  const theme = useMantineTheme();\n  const getStyles = useStyles<TooltipFloatingFactory>({\n    name: 'TooltipFloating',\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    rootSelector: 'tooltip',\n    vars,\n    varsResolver,\n  });\n\n  const { handleMouseMove, x, y, opened, boundaryRef, floating, setOpened } = useFloatingTooltip({\n    offset: offset!,\n    position: position!,\n  });\n\n  if (!isElement(children)) {\n    throw new Error(\n      '[@mantine/core] Tooltip.Floating component children should be an element or a component that accepts ref, fragments, strings, numbers and other primitive values are not supported'\n    );\n  }\n\n  const targetRef = useMergedRef(boundaryRef, (children as any).ref, ref);\n\n  const onMouseEnter = (event: React.MouseEvent<unknown, MouseEvent>) => {\n    children.props.onMouseEnter?.(event);\n    handleMouseMove(event);\n    setOpened(true);\n  };\n\n  const onMouseLeave = (event: React.MouseEvent<unknown, MouseEvent>) => {\n    children.props.onMouseLeave?.(event);\n    setOpened(false);\n  };\n\n  return (\n    <>\n      <OptionalPortal {...portalProps} withinPortal={withinPortal}>\n        <Box\n          {...others}\n          {...getStyles('tooltip', {\n            style: {\n              ...getStyleObject(style, theme),\n              zIndex: zIndex as React.CSSProperties['zIndex'],\n              display: !disabled && opened ? 'block' : 'none',\n              top: (y && Math.round(y)) ?? '',\n              left: (x && Math.round(x)) ?? '',\n            },\n          })}\n          variant={variant}\n          ref={floating}\n          mod={{ multiline }}\n        >\n          {label}\n        </Box>\n      </OptionalPortal>\n\n      {cloneElement(children, {\n        ...children.props,\n        [refProp!]: targetRef,\n        onMouseEnter,\n        onMouseLeave,\n      })}\n    </>\n  );\n});\n\nTooltipFloating.classes = classes;\nTooltipFloating.displayName = '@mantine/core/TooltipFloating';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 9323, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9328, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Transition/transitions.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const transitions = registerClientReference(\n    function() { throw new Error(\"Attempted to call transitions() from the server but transitions is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Transition/transitions.mjs\",\n    \"transitions\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,cAAc,2RACvB;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,kFACA"}},
    {"offset": {"line": 9337, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9342, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Transition/transitions.ts"],"sourcesContent":["import React from 'react';\nimport { rem } from '../../core';\n\nexport interface MantineTransitionStyles {\n  common?: React.CSSProperties;\n  in: React.CSSProperties;\n  out: React.CSSProperties;\n  transitionProperty: React.CSSProperties['transitionProperty'];\n}\n\nexport type MantineTransitionName =\n  | 'fade'\n  | 'fade-down'\n  | 'fade-up'\n  | 'fade-left'\n  | 'fade-right'\n  | 'skew-up'\n  | 'skew-down'\n  | 'rotate-right'\n  | 'rotate-left'\n  | 'slide-down'\n  | 'slide-up'\n  | 'slide-right'\n  | 'slide-left'\n  | 'scale-y'\n  | 'scale-x'\n  | 'scale'\n  | 'pop'\n  | 'pop-top-left'\n  | 'pop-top-right'\n  | 'pop-bottom-left'\n  | 'pop-bottom-right';\n\nexport type MantineTransition = MantineTransitionName | MantineTransitionStyles;\n\nconst popIn = (from: 'top' | 'bottom') => ({\n  in: { opacity: 1, transform: 'scale(1)' },\n  out: { opacity: 0, transform: `scale(.9) translateY(${rem(from === 'bottom' ? 10 : -10)})` },\n  transitionProperty: 'transform, opacity',\n});\n\nexport const transitions: Record<MantineTransitionName, MantineTransitionStyles> = {\n  fade: {\n    in: { opacity: 1 },\n    out: { opacity: 0 },\n    transitionProperty: 'opacity',\n  },\n\n  'fade-up': {\n    in: { opacity: 1, transform: 'translateY(0)' },\n    out: { opacity: 0, transform: `translateY(${rem(30)}` },\n    transitionProperty: 'opacity, transform',\n  },\n\n  'fade-down': {\n    in: { opacity: 1, transform: 'translateY(0)' },\n    out: { opacity: 0, transform: `translateY(${rem(-30)}` },\n    transitionProperty: 'opacity, transform',\n  },\n\n  'fade-left': {\n    in: { opacity: 1, transform: 'translateX(0)' },\n    out: { opacity: 0, transform: `translateX(${rem(30)}` },\n    transitionProperty: 'opacity, transform',\n  },\n\n  'fade-right': {\n    in: { opacity: 1, transform: 'translateX(0)' },\n    out: { opacity: 0, transform: `translateX(${rem(-30)}` },\n    transitionProperty: 'opacity, transform',\n  },\n\n  scale: {\n    in: { opacity: 1, transform: 'scale(1)' },\n    out: { opacity: 0, transform: 'scale(0)' },\n    common: { transformOrigin: 'top' },\n    transitionProperty: 'transform, opacity',\n  },\n\n  'scale-y': {\n    in: { opacity: 1, transform: 'scaleY(1)' },\n    out: { opacity: 0, transform: 'scaleY(0)' },\n    common: { transformOrigin: 'top' },\n    transitionProperty: 'transform, opacity',\n  },\n\n  'scale-x': {\n    in: { opacity: 1, transform: 'scaleX(1)' },\n    out: { opacity: 0, transform: 'scaleX(0)' },\n    common: { transformOrigin: 'left' },\n    transitionProperty: 'transform, opacity',\n  },\n\n  'skew-up': {\n    in: { opacity: 1, transform: 'translateY(0) skew(0deg, 0deg)' },\n    out: { opacity: 0, transform: `translateY(${rem(-20)}) skew(-10deg, -5deg)` },\n    common: { transformOrigin: 'top' },\n    transitionProperty: 'transform, opacity',\n  },\n\n  'skew-down': {\n    in: { opacity: 1, transform: 'translateY(0) skew(0deg, 0deg)' },\n    out: { opacity: 0, transform: `translateY(${rem(20)}) skew(-10deg, -5deg)` },\n    common: { transformOrigin: 'bottom' },\n    transitionProperty: 'transform, opacity',\n  },\n\n  'rotate-left': {\n    in: { opacity: 1, transform: 'translateY(0) rotate(0deg)' },\n    out: { opacity: 0, transform: `translateY(${rem(20)}) rotate(-5deg)` },\n    common: { transformOrigin: 'bottom' },\n    transitionProperty: 'transform, opacity',\n  },\n\n  'rotate-right': {\n    in: { opacity: 1, transform: 'translateY(0) rotate(0deg)' },\n    out: { opacity: 0, transform: `translateY(${rem(20)}) rotate(5deg)` },\n    common: { transformOrigin: 'top' },\n    transitionProperty: 'transform, opacity',\n  },\n\n  'slide-down': {\n    in: { opacity: 1, transform: 'translateY(0)' },\n    out: { opacity: 0, transform: 'translateY(-100%)' },\n    common: { transformOrigin: 'top' },\n    transitionProperty: 'transform, opacity',\n  },\n\n  'slide-up': {\n    in: { opacity: 1, transform: 'translateY(0)' },\n    out: { opacity: 0, transform: 'translateY(100%)' },\n    common: { transformOrigin: 'bottom' },\n    transitionProperty: 'transform, opacity',\n  },\n\n  'slide-left': {\n    in: { opacity: 1, transform: 'translateX(0)' },\n    out: { opacity: 0, transform: 'translateX(100%)' },\n    common: { transformOrigin: 'left' },\n    transitionProperty: 'transform, opacity',\n  },\n\n  'slide-right': {\n    in: { opacity: 1, transform: 'translateX(0)' },\n    out: { opacity: 0, transform: 'translateX(-100%)' },\n    common: { transformOrigin: 'right' },\n    transitionProperty: 'transform, opacity',\n  },\n\n  pop: {\n    ...popIn('bottom'),\n    common: { transformOrigin: 'center center' },\n  },\n\n  'pop-bottom-left': {\n    ...popIn('bottom'),\n    common: { transformOrigin: 'bottom left' },\n  },\n\n  'pop-bottom-right': {\n    ...popIn('bottom'),\n    common: { transformOrigin: 'bottom right' },\n  },\n\n  'pop-top-left': {\n    ...popIn('top'),\n    common: { transformOrigin: 'top left' },\n  },\n\n  'pop-top-right': {\n    ...popIn('top'),\n    common: { transformOrigin: 'top right' },\n  },\n};\n"],"names":[],"mappings":""}},
    {"offset": {"line": 9347, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9352, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Transition/Transition.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Transition = registerClientReference(\n    function() { throw new Error(\"Attempted to call Transition() from the server but Transition is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Transition/Transition.mjs\",\n    \"Transition\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,aAAa,2RACtB;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,iFACA"}},
    {"offset": {"line": 9361, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9366, "column": 0}, "map": {"version":3,"sources":["../../../src/components/Transition/Transition.tsx"],"sourcesContent":["import React from 'react';\nimport { getTransitionStyles } from './get-transition-styles/get-transition-styles';\nimport { MantineTransition } from './transitions';\nimport { useTransition } from './use-transition';\n\nexport interface TransitionProps {\n  /** If set element will not be unmounted from the DOM when it is hidden, `display: none` styles will be applied instead */\n  keepMounted?: boolean;\n\n  /** Transition name or object */\n  transition?: MantineTransition;\n\n  /** Transition duration in ms, `250` by default */\n  duration?: number;\n\n  /** Exit transition duration in ms, `250` by default */\n  exitDuration?: number;\n\n  /** Transition timing function, `theme.transitionTimingFunction` by default */\n  timingFunction?: string;\n\n  /** Determines whether component should be mounted to the DOM */\n  mounted: boolean;\n\n  /** Render function with transition styles argument */\n  children: (styles: React.CSSProperties) => JSX.Element;\n\n  /** Called when exit transition ends */\n  onExited?: () => void;\n\n  /** Called when exit transition starts */\n  onExit?: () => void;\n\n  /** Called when enter transition starts */\n  onEnter?: () => void;\n\n  /** Called when enter transition ends */\n  onEntered?: () => void;\n}\n\nexport type TransitionOverride = Partial<Omit<TransitionProps, 'mounted'>>;\n\nexport function Transition({\n  keepMounted,\n  transition = 'fade',\n  duration = 250,\n  exitDuration = duration,\n  mounted,\n  children,\n  timingFunction = 'ease',\n  onExit,\n  onEntered,\n  onEnter,\n  onExited,\n}: TransitionProps) {\n  const { transitionDuration, transitionStatus, transitionTimingFunction } = useTransition({\n    mounted,\n    exitDuration,\n    duration,\n    timingFunction,\n    onExit,\n    onEntered,\n    onEnter,\n    onExited,\n  });\n\n  if (transitionDuration === 0) {\n    return mounted ? <>{children({})}</> : keepMounted ? children({ display: 'none' }) : null;\n  }\n\n  return transitionStatus === 'exited' ? (\n    keepMounted ? (\n      children({ display: 'none' })\n    ) : null\n  ) : (\n    <>\n      {children(\n        getTransitionStyles({\n          transition,\n          duration: transitionDuration,\n          state: transitionStatus,\n          timingFunction: transitionTimingFunction,\n        })\n      )}\n    </>\n  );\n}\n\nTransition.displayName = '@mantine/core/Transition';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 9371, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9376, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/Transition/get-transition-props/get-transition-props.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const getTransitionProps = registerClientReference(\n    function() { throw new Error(\"Attempted to call getTransitionProps() from the server but getTransitionProps is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/Transition/get-transition-props/get-transition-props.mjs\",\n    \"getTransitionProps\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,qBAAqB,2RAC9B;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,gHACA"}},
    {"offset": {"line": 9385, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9390, "column": 0}, "map": {"version":3,"sources":["../../../../src/components/Transition/get-transition-props/get-transition-props.ts"],"sourcesContent":["import type { SetRequired } from 'type-fest';\nimport type { TransitionOverride } from '../Transition';\n\ntype MinimalTransitionOverride = SetRequired<TransitionOverride, 'duration' | 'transition'>;\n\nconst defaultTransition: MinimalTransitionOverride = {\n  duration: 100,\n  transition: 'fade',\n};\n\nexport function getTransitionProps(\n  transitionProps: TransitionOverride | undefined,\n  componentTransition: TransitionOverride | undefined\n): MinimalTransitionOverride {\n  return { ...defaultTransition, ...componentTransition, ...transitionProps };\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 9395, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9400, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/components/TypographyStylesProvider/TypographyStylesProvider.mjs/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const TypographyStylesProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call TypographyStylesProvider() from the server but TypographyStylesProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/@mantine/core/esm/components/TypographyStylesProvider/TypographyStylesProvider.mjs\",\n    \"TypographyStylesProvider\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,2BAA2B,2RACpC;IAAa,MAAM,IAAI,MAAM;AAAgQ,GAC7R,6GACA"}},
    {"offset": {"line": 9409, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9414, "column": 0}, "map": {"version":3,"sources":["../../../src/components/TypographyStylesProvider/TypographyStylesProvider.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  ElementProps,\n  factory,\n  Factory,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport classes from './TypographyStylesProvider.module.css';\n\nexport type TypographyStylesProviderStylesNames = 'root';\n\nexport interface TypographyStylesProviderProps\n  extends BoxProps,\n    StylesApiProps<TypographyStylesProviderFactory>,\n    ElementProps<'div'> {}\n\nexport type TypographyStylesProviderFactory = Factory<{\n  props: TypographyStylesProviderProps;\n  ref: HTMLDivElement;\n  stylesNames: TypographyStylesProviderStylesNames;\n}>;\n\nconst defaultProps: Partial<TypographyStylesProviderProps> = {};\n\nexport const TypographyStylesProvider = factory<TypographyStylesProviderFactory>((_props, ref) => {\n  const props = useProps('TypographyStylesProvider', defaultProps, _props);\n  const { classNames, className, style, styles, unstyled, ...others } = props;\n\n  const getStyles = useStyles<TypographyStylesProviderFactory>({\n    name: 'TypographyStylesProvider',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n  });\n\n  return <Box ref={ref} {...getStyles('root')} {...others} />;\n});\n\nTypographyStylesProvider.classes = classes;\nTypographyStylesProvider.displayName = '@mantine/core/TypographyStylesProvider';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 9419, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9424, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@mantine/core/esm/index.mjs"],"names":[],"mappings":""}},
    {"offset": {"line": 9715, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10016, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@swc/helpers/cjs/_interop_require_default.cjs"],"sourcesContent":["\"use strict\";\n\nexports._ = exports._interop_require_default = _interop_require_default;\nfunction _interop_require_default(obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n}\n"],"names":[],"mappings":"AAAA;AAEA,QAAQ,CAAC,GAAG,QAAQ,wBAAwB,GAAG;AAC/C,SAAS,yBAAyB,GAAG;IACjC,OAAO,OAAO,IAAI,UAAU,GAAG,MAAM;QAAE,SAAS;IAAI;AACxD"}},
    {"offset": {"line": 10023, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10028, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@swc/helpers/esm/_interop_require_default.js"],"sourcesContent":["export function _interop_require_default(obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n}\nexport { _interop_require_default as _ };\n"],"names":[],"mappings":";;;;AAAO,SAAS,yBAAyB,GAAG;IACxC,OAAO,OAAO,IAAI,UAAU,GAAG,MAAM;QAAE,SAAS;IAAI;AACxD"}},
    {"offset": {"line": 10038, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10042, "column": 0}, "map": {"version":3,"sources":["../../../../../../../src/server/future/route-modules/app-page/vendored/rsc/react-jsx-runtime.ts","/turbopack/[project]/node_modules/next/dist/server/future/route-modules/app-page/vendored/rsc/react-jsx-runtime.js"],"names":["module","exports","require","vendored","ReactJsxRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,yIAAiCC,QAAQ,CACxD,YACD,CAACC,eAAe"}},
    {"offset": {"line": 10044, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10048, "column": 0}, "map": {"version":3,"sources":["../../../src/client/components/not-found-error.tsx","/turbopack/[project]/node_modules/next/dist/client/components/not-found-error.js"],"names":["NotFound","styles","error","fontFamily","height","textAlign","display","flexDirection","alignItems","justifyContent","desc","h1","margin","padding","fontSize","fontWeight","verticalAlign","lineHeight","h2","title","div","style","dangerouslySetInnerHTML","__html","className"],"mappings":";;;;+BAqCA,WAAA;;;eAAwBA;;;;;;AAnCxB,MAAMC,SAA8C;IAClDC,OAAO;QACL,0FAA0F;QAC1FC,YACE;QACFC,QAAQ;QACRC,WAAW;QACXC,SAAS;QACTC,eAAe;QACfC,YAAY;QACZC,gBAAgB;IAClB;IAEAC,MAAM;QACJJ,SAAS;IACX;IAEAK,IAAI;QACFL,SAAS;QACTM,QAAQ;QACRC,SAAS;QACTC,UAAU;QACVC,YAAY;QACZC,eAAe;QACfC,YAAY;IACd;IAEAC,IAAI;QACFJ,UAAU;QACVC,YAAY;QACZE,YAAY;QACZL,QAAQ;IACV;AACF;AAEe,SAASZ;IACtB,OAAA,WAAA,GACE,CAAA,GAAA,YAAA,IAAA,EAAA,YAAA,QAAA,EAAA;;0BAEE,CAAA,GAAA,YAAA,GAAA,EAACmB,SAAAA;0BAAM;;0BAEP,CAAA,GAAA,YAAA,GAAA,EAACC,OAAAA;gBAAIC,OAAOpB,OAAOC,KAAK;0BACtB,WAAA,GAAA,CAAA,GAAA,YAAA,IAAA,EAACkB,OAAAA;;sCACC,CAAA,GAAA,YAAA,GAAA,EAACC,SAAAA;4BACCC,yBAAyB;gCACvB;;;;;;;;;;;;cAYA,GACAC,QAAS;4BACX;;sCAEF,CAAA,GAAA,YAAA,GAAA,EAACZ,MAAAA;4BAAGa,WAAU;4BAAgBH,OAAOpB,OAAOU,EAAE;sCAAE;;sCAGhD,CAAA,GAAA,YAAA,GAAA,EAACS,OAAAA;4BAAIC,OAAOpB,OAAOS,IAAI;sCACrB,WAAA,GAAA,CAAA,GAAA,YAAA,GAAA,EAACQ,MAAAA;gCAAGG,OAAOpB,OAAOiB,EAAE;0CAAE;;;;;;;;AAMlC"}},
    {"offset": {"line": 10143, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10154, "column": 0}, "map": {"version":3,"sources":["../../../../../src/server/future/route-modules/app-page/module.compiled.js","/turbopack/[project]/node_modules/next/dist/esm/server/future/route-modules/app-page/module.compiled.js"],"names":["module","exports","require"],"mappings":"AAAA;;OAEO;IACL;;WAQO;QACL,wCAA4C;YAC1CA,OAAOC,OAAO,GAAGC;QACnB;;;IAKF;AACF"}},
    {"offset": {"line": 10167, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10172, "column": 0}, "map": {"version":3,"sources":["../../../src/server/future/route-kind.ts","/turbopack/[project]/node_modules/next/dist/esm/server/future/route-kind.js"],"names":["RouteKind","PAGES","PAGES_API","APP_PAGE","APP_ROUTE"],"mappings":";;;IAAO;UAAWA,SAAS;IAATA,SAAAA,CAChB;;GAEC,GACDC,QAAAA,GAAAA;IAJgBD,SAAAA,CAKhB;;GAEC,GACDE,YAAAA,GAAAA;IARgBF,SAAAA,CAShB;;;GAGC,GACDG,WAAAA,GAAAA;IAbgBH,SAAAA,CAchB;;;GAGC,GACDI,YAAAA,GAAAA;GAlBgBJ,aAAAA,CAAAA,YAAAA,CAAAA,CAAAA"}},
    {"offset": {"line": 10192, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10196, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/next/dist/client/components/error-boundary.js/proxy.js"],"sourcesContent":["const { createClientModuleProxy } = require(\"react-server-dom-turbopack/server.edge\");\n\n__turbopack_export_namespace__(createClientModuleProxy(\"[project]/node_modules/next/dist/client/components/error-boundary.js\"));\n"],"names":[],"mappings":"AAAA,MAAM,EAAE,uBAAuB,EAAE,GAAG;AAEpC,+BAA+B,wBAAwB"}},
    {"offset": {"line": 10198, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10203, "column": 0}, "map": {"version":3,"sources":["../../../src/client/components/error-boundary.tsx"],"names":[],"mappings":""}},
    {"offset": {"line": 10208, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10212, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/next/dist/esm/client/components/app-router.js/proxy.js"],"sourcesContent":["const { createClientModuleProxy } = require(\"react-server-dom-turbopack/server.edge\");\n\n__turbopack_export_namespace__(createClientModuleProxy(\"[project]/node_modules/next/dist/esm/client/components/app-router.js\"));\n"],"names":[],"mappings":"AAAA,MAAM,EAAE,uBAAuB,EAAE,GAAG;AAEpC,+BAA+B,wBAAwB"}},
    {"offset": {"line": 10214, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10219, "column": 0}, "map": {"version":3,"sources":["../../../src/client/components/app-router.tsx"],"names":[],"mappings":""}},
    {"offset": {"line": 10224, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10228, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/next/dist/esm/client/components/layout-router.js/proxy.js"],"sourcesContent":["const { createClientModuleProxy } = require(\"react-server-dom-turbopack/server.edge\");\n\n__turbopack_export_namespace__(createClientModuleProxy(\"[project]/node_modules/next/dist/esm/client/components/layout-router.js\"));\n"],"names":[],"mappings":"AAAA,MAAM,EAAE,uBAAuB,EAAE,GAAG;AAEpC,+BAA+B,wBAAwB"}},
    {"offset": {"line": 10230, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10235, "column": 0}, "map": {"version":3,"sources":["../../../src/client/components/layout-router.tsx"],"names":[],"mappings":""}},
    {"offset": {"line": 10240, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10244, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/next/dist/esm/client/components/render-from-template-context.js/proxy.js"],"sourcesContent":["const { createClientModuleProxy } = require(\"react-server-dom-turbopack/server.edge\");\n\n__turbopack_export_namespace__(createClientModuleProxy(\"[project]/node_modules/next/dist/esm/client/components/render-from-template-context.js\"));\n"],"names":[],"mappings":"AAAA,MAAM,EAAE,uBAAuB,EAAE,GAAG;AAEpC,+BAA+B,wBAAwB"}},
    {"offset": {"line": 10246, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10251, "column": 0}, "map": {"version":3,"sources":["../../../src/client/components/render-from-template-context.tsx"],"names":[],"mappings":""}},
    {"offset": {"line": 10256, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10261, "column": 0}, "map": {"version":3,"sources":["../../../src/client/components/hooks-server-context.ts","/turbopack/[project]/node_modules/next/dist/esm/client/components/hooks-server-context.js"],"names":["DYNAMIC_ERROR_CODE","DynamicServerError","Error","constructor","description","digest","isDynamicServerError","err"],"mappings":";;;;AAAA,MAAMA,qBAAqB;AAEpB,MAAMC,2BAA2BC;IAGtCC,YAA4BC,WAAAA,CAAqB;QAC/C,KAAK,CAAC,2BAAyBA;2BADLA;aAF5BC,MAAAA,GAAoCL;IAIpC;AACF;AAEO,SAASM,qBAAqBC,GAAY;IAC/C,IACE,OAAOA,QAAQ,YACfA,QAAQ,QACR,CAAE,CAAA,YAAYA,GAAE,KAChB,OAAOA,IAAIF,MAAM,KAAK,UACtB;QACA,OAAO;IACT;IAEA,OAAOE,IAAIF,MAAM,KAAKL;AACxB"}},
    {"offset": {"line": 10279, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10284, "column": 0}, "map": {"version":3,"sources":["../../../src/client/components/static-generation-bailout.ts","/turbopack/[project]/node_modules/next/dist/esm/client/components/static-generation-bailout.js"],"names":["NEXT_STATIC_GEN_BAILOUT","StaticGenBailoutError","Error","code","isStaticGenBailoutError","error","formatErrorMessage","reason","opts","dynamic","link","suffix","staticGenerationBailout","staticGenerationStore","staticGenerationAsyncStorage","getStore","forceStatic","dynamicShouldError","message","postpone","revalidate","isStaticGeneration","err","dynamicUsageDescription","dynamicUsageStack","stack"],"mappings":";;;;;;;;;AAKA,MAAMA,0BAA0B;AAEhC,MAAMC,8BAA8BC;;;aAClBC,IAAAA,GAAOH;;AACzB;AAEO,SAASI,wBACdC,KAAc;IAEd,IAAI,OAAOA,UAAU,YAAYA,UAAU,QAAQ,CAAE,CAAA,UAAUA,KAAI,GAAI;QACrE,OAAO;IACT;IAEA,OAAOA,MAAMF,IAAI,KAAKH;AACxB;AASA,SAASM,mBAAmBC,MAAc,EAAEC,IAAkB;IAC5D,MAAM,EAAEC,OAAO,EAAEC,IAAI,EAAE,GAAGF,QAAQ,CAAC;IACnC,MAAMG,SAASD,OAAO,0BAAwBA,OAAS;IACvD,OAAO,SACLD,CAAAA,UAAU,uBAAsBA,UAAQ,OAAO,EAAC,IACjD,uDAAqDF,SAAO,OAAKI;AACpE;AAEO,MAAMC,0BAAmD,CAC9DL,QAAAA;QACA,EAAEE,OAAO,EAAEC,IAAI,EAAE,GAAA,UAAA,KAAA,IAAG,CAAC,IAAA;IAErB,MAAMG,wBAAwBC,4JAA6BC,QAAQ;IACnE,IAAI,CAACF,uBAAuB,OAAO;IAEnC,IAAIA,sBAAsBG,WAAW,EAAE;QACrC,OAAO;IACT;IAEA,IAAIH,sBAAsBI,kBAAkB,EAAE;QAC5C,MAAM,IAAIhB,sBACRK,mBAAmBC,QAAQ;YAAEG;YAAMD,SAASA,WAAAA,OAAAA,UAAW;QAAQ;IAEnE;IAEA,MAAMS,UAAUZ,mBAAmBC,QAAQ;QACzCE;QACA,uEAAuE;QACvE,8EAA8E;QAC9EC,MAAM;IACR;IAEA,2DAA2D;IAC3DG,sBAAsBM,QAAQ,IAAA,OAAA,KAAA,IAA9BN,sBAAsBM,QAAQ,CAAA,IAAA,CAA9BN,uBAAiCN;IAEjC,2EAA2E;IAC3E,QAAQ;IACRM,sBAAsBO,UAAU,GAAG;IAEnC,IAAIP,sBAAsBQ,kBAAkB,EAAE;QAC5C,MAAMC,MAAM,oNAAuBJ;QACnCL,sBAAsBU,uBAAuB,GAAGhB;QAChDM,sBAAsBW,iBAAiB,GAAGF,IAAIG,KAAK;QAEnD,MAAMH;IACR;IAEA,OAAO;AACT"}},
    {"offset": {"line": 10343, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10347, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/next/dist/esm/client/components/static-generation-searchparams-bailout-provider.js/proxy.js"],"sourcesContent":["const { createClientModuleProxy } = require(\"react-server-dom-turbopack/server.edge\");\n\n__turbopack_export_namespace__(createClientModuleProxy(\"[project]/node_modules/next/dist/esm/client/components/static-generation-searchparams-bailout-provider.js\"));\n"],"names":[],"mappings":"AAAA,MAAM,EAAE,uBAAuB,EAAE,GAAG;AAEpC,+BAA+B,wBAAwB"}},
    {"offset": {"line": 10349, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10354, "column": 0}, "map": {"version":3,"sources":["../../../src/client/components/static-generation-searchparams-bailout-provider.tsx"],"names":[],"mappings":""}},
    {"offset": {"line": 10359, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10364, "column": 0}, "map": {"version":3,"sources":["../../../src/client/components/searchparams-bailout-proxy.ts","/turbopack/[project]/node_modules/next/dist/esm/client/components/searchparams-bailout-proxy.js"],"names":["createSearchParamsBailoutProxy","Proxy","get","_target","prop","staticGenerationBailout"],"mappings":";;;;;;AAEO,SAASA;IACd,OAAO,IAAIC,MACT,CAAC,GACD;QACEC,KAAIC,OAAO,EAAEC,IAAI;YACf,kFAAkF;YAClF,IAAI,OAAOA,SAAS,UAAU;gBAC5BC,0NAAwB,kBAAgBD;YAC1C;QACF;IACF;AAEJ"}},
    {"offset": {"line": 10380, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10384, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/next/dist/esm/client/components/not-found-boundary.js/proxy.js"],"sourcesContent":["const { createClientModuleProxy } = require(\"react-server-dom-turbopack/server.edge\");\n\n__turbopack_export_namespace__(createClientModuleProxy(\"[project]/node_modules/next/dist/esm/client/components/not-found-boundary.js\"));\n"],"names":[],"mappings":"AAAA,MAAM,EAAE,uBAAuB,EAAE,GAAG;AAEpC,+BAA+B,wBAAwB"}},
    {"offset": {"line": 10386, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10391, "column": 0}, "map": {"version":3,"sources":["../../../src/client/components/not-found-boundary.tsx"],"names":[],"mappings":""}},
    {"offset": {"line": 10396, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10401, "column": 0}, "map": {"version":3,"sources":["../../../../src/server/lib/trace/constants.ts","/turbopack/[project]/node_modules/next/dist/esm/server/lib/trace/constants.js"],"names":["BaseServerSpan","handleRequest","run","pipe","getStaticHTML","render","renderToResponseWithComponents","renderToResponse","renderToHTML","renderError","renderErrorToResponse","renderErrorToHTML","render404","LoadComponentsSpan","loadDefaultErrorComponents","loadComponents","NextServerSpan","getRequestHandler","getServer","getServerRequestHandler","createServer","NextNodeServerSpan","compression","getBuildId","getLayoutOrPageModule","generateStaticRoutes","generateFsStaticRoutes","generatePublicRoutes","generateImageRoutes","sendRenderResult","proxyRequest","runApi","renderHTML","imageOptimizer","getPagePath","getRoutesManifest","findPageComponents","getFontManifest","getServerComponentManifest","route","onProxyReq","apiResolver","internalFetch","StartServerSpan","startServer","RenderSpan","getServerSideProps","getStaticProps","renderToString","renderDocument","createBodyResult","AppRenderSpan","renderToReadableStream","getBodyResult","fetch","RouterSpan","executeRoute","NodeSpan","runHandler","AppRouteRouteHandlersSpan","ResolveMetadataSpan","generateMetadata","generateViewport","NextVanillaSpanAllowlist"],"mappings":"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"}},
    {"offset": {"line": 10530, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10534, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/next/dist/compiled/@opentelemetry/api/index.js"],"sourcesContent":["(()=>{\"use strict\";var e={491:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.ContextAPI=void 0;const n=r(223);const a=r(172);const o=r(930);const i=\"context\";const c=new n.NoopContextManager;class ContextAPI{constructor(){}static getInstance(){if(!this._instance){this._instance=new ContextAPI}return this._instance}setGlobalContextManager(e){return(0,a.registerGlobal)(i,e,o.DiagAPI.instance())}active(){return this._getContextManager().active()}with(e,t,r,...n){return this._getContextManager().with(e,t,r,...n)}bind(e,t){return this._getContextManager().bind(e,t)}_getContextManager(){return(0,a.getGlobal)(i)||c}disable(){this._getContextManager().disable();(0,a.unregisterGlobal)(i,o.DiagAPI.instance())}}t.ContextAPI=ContextAPI},930:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.DiagAPI=void 0;const n=r(56);const a=r(912);const o=r(957);const i=r(172);const c=\"diag\";class DiagAPI{constructor(){function _logProxy(e){return function(...t){const r=(0,i.getGlobal)(\"diag\");if(!r)return;return r[e](...t)}}const e=this;const setLogger=(t,r={logLevel:o.DiagLogLevel.INFO})=>{var n,c,s;if(t===e){const t=new Error(\"Cannot use diag as the logger for itself. Please use a DiagLogger implementation like ConsoleDiagLogger or a custom implementation\");e.error((n=t.stack)!==null&&n!==void 0?n:t.message);return false}if(typeof r===\"number\"){r={logLevel:r}}const u=(0,i.getGlobal)(\"diag\");const l=(0,a.createLogLevelDiagLogger)((c=r.logLevel)!==null&&c!==void 0?c:o.DiagLogLevel.INFO,t);if(u&&!r.suppressOverrideMessage){const e=(s=(new Error).stack)!==null&&s!==void 0?s:\"<failed to generate stacktrace>\";u.warn(`Current logger will be overwritten from ${e}`);l.warn(`Current logger will overwrite one already registered from ${e}`)}return(0,i.registerGlobal)(\"diag\",l,e,true)};e.setLogger=setLogger;e.disable=()=>{(0,i.unregisterGlobal)(c,e)};e.createComponentLogger=e=>new n.DiagComponentLogger(e);e.verbose=_logProxy(\"verbose\");e.debug=_logProxy(\"debug\");e.info=_logProxy(\"info\");e.warn=_logProxy(\"warn\");e.error=_logProxy(\"error\")}static instance(){if(!this._instance){this._instance=new DiagAPI}return this._instance}}t.DiagAPI=DiagAPI},653:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.MetricsAPI=void 0;const n=r(660);const a=r(172);const o=r(930);const i=\"metrics\";class MetricsAPI{constructor(){}static getInstance(){if(!this._instance){this._instance=new MetricsAPI}return this._instance}setGlobalMeterProvider(e){return(0,a.registerGlobal)(i,e,o.DiagAPI.instance())}getMeterProvider(){return(0,a.getGlobal)(i)||n.NOOP_METER_PROVIDER}getMeter(e,t,r){return this.getMeterProvider().getMeter(e,t,r)}disable(){(0,a.unregisterGlobal)(i,o.DiagAPI.instance())}}t.MetricsAPI=MetricsAPI},181:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.PropagationAPI=void 0;const n=r(172);const a=r(874);const o=r(194);const i=r(277);const c=r(369);const s=r(930);const u=\"propagation\";const l=new a.NoopTextMapPropagator;class PropagationAPI{constructor(){this.createBaggage=c.createBaggage;this.getBaggage=i.getBaggage;this.getActiveBaggage=i.getActiveBaggage;this.setBaggage=i.setBaggage;this.deleteBaggage=i.deleteBaggage}static getInstance(){if(!this._instance){this._instance=new PropagationAPI}return this._instance}setGlobalPropagator(e){return(0,n.registerGlobal)(u,e,s.DiagAPI.instance())}inject(e,t,r=o.defaultTextMapSetter){return this._getGlobalPropagator().inject(e,t,r)}extract(e,t,r=o.defaultTextMapGetter){return this._getGlobalPropagator().extract(e,t,r)}fields(){return this._getGlobalPropagator().fields()}disable(){(0,n.unregisterGlobal)(u,s.DiagAPI.instance())}_getGlobalPropagator(){return(0,n.getGlobal)(u)||l}}t.PropagationAPI=PropagationAPI},997:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.TraceAPI=void 0;const n=r(172);const a=r(846);const o=r(139);const i=r(607);const c=r(930);const s=\"trace\";class TraceAPI{constructor(){this._proxyTracerProvider=new a.ProxyTracerProvider;this.wrapSpanContext=o.wrapSpanContext;this.isSpanContextValid=o.isSpanContextValid;this.deleteSpan=i.deleteSpan;this.getSpan=i.getSpan;this.getActiveSpan=i.getActiveSpan;this.getSpanContext=i.getSpanContext;this.setSpan=i.setSpan;this.setSpanContext=i.setSpanContext}static getInstance(){if(!this._instance){this._instance=new TraceAPI}return this._instance}setGlobalTracerProvider(e){const t=(0,n.registerGlobal)(s,this._proxyTracerProvider,c.DiagAPI.instance());if(t){this._proxyTracerProvider.setDelegate(e)}return t}getTracerProvider(){return(0,n.getGlobal)(s)||this._proxyTracerProvider}getTracer(e,t){return this.getTracerProvider().getTracer(e,t)}disable(){(0,n.unregisterGlobal)(s,c.DiagAPI.instance());this._proxyTracerProvider=new a.ProxyTracerProvider}}t.TraceAPI=TraceAPI},277:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.deleteBaggage=t.setBaggage=t.getActiveBaggage=t.getBaggage=void 0;const n=r(491);const a=r(780);const o=(0,a.createContextKey)(\"OpenTelemetry Baggage Key\");function getBaggage(e){return e.getValue(o)||undefined}t.getBaggage=getBaggage;function getActiveBaggage(){return getBaggage(n.ContextAPI.getInstance().active())}t.getActiveBaggage=getActiveBaggage;function setBaggage(e,t){return e.setValue(o,t)}t.setBaggage=setBaggage;function deleteBaggage(e){return e.deleteValue(o)}t.deleteBaggage=deleteBaggage},993:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.BaggageImpl=void 0;class BaggageImpl{constructor(e){this._entries=e?new Map(e):new Map}getEntry(e){const t=this._entries.get(e);if(!t){return undefined}return Object.assign({},t)}getAllEntries(){return Array.from(this._entries.entries()).map((([e,t])=>[e,t]))}setEntry(e,t){const r=new BaggageImpl(this._entries);r._entries.set(e,t);return r}removeEntry(e){const t=new BaggageImpl(this._entries);t._entries.delete(e);return t}removeEntries(...e){const t=new BaggageImpl(this._entries);for(const r of e){t._entries.delete(r)}return t}clear(){return new BaggageImpl}}t.BaggageImpl=BaggageImpl},830:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.baggageEntryMetadataSymbol=void 0;t.baggageEntryMetadataSymbol=Symbol(\"BaggageEntryMetadata\")},369:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.baggageEntryMetadataFromString=t.createBaggage=void 0;const n=r(930);const a=r(993);const o=r(830);const i=n.DiagAPI.instance();function createBaggage(e={}){return new a.BaggageImpl(new Map(Object.entries(e)))}t.createBaggage=createBaggage;function baggageEntryMetadataFromString(e){if(typeof e!==\"string\"){i.error(`Cannot create baggage metadata from unknown type: ${typeof e}`);e=\"\"}return{__TYPE__:o.baggageEntryMetadataSymbol,toString(){return e}}}t.baggageEntryMetadataFromString=baggageEntryMetadataFromString},67:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.context=void 0;const n=r(491);t.context=n.ContextAPI.getInstance()},223:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NoopContextManager=void 0;const n=r(780);class NoopContextManager{active(){return n.ROOT_CONTEXT}with(e,t,r,...n){return t.call(r,...n)}bind(e,t){return t}enable(){return this}disable(){return this}}t.NoopContextManager=NoopContextManager},780:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.ROOT_CONTEXT=t.createContextKey=void 0;function createContextKey(e){return Symbol.for(e)}t.createContextKey=createContextKey;class BaseContext{constructor(e){const t=this;t._currentContext=e?new Map(e):new Map;t.getValue=e=>t._currentContext.get(e);t.setValue=(e,r)=>{const n=new BaseContext(t._currentContext);n._currentContext.set(e,r);return n};t.deleteValue=e=>{const r=new BaseContext(t._currentContext);r._currentContext.delete(e);return r}}}t.ROOT_CONTEXT=new BaseContext},506:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.diag=void 0;const n=r(930);t.diag=n.DiagAPI.instance()},56:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.DiagComponentLogger=void 0;const n=r(172);class DiagComponentLogger{constructor(e){this._namespace=e.namespace||\"DiagComponentLogger\"}debug(...e){return logProxy(\"debug\",this._namespace,e)}error(...e){return logProxy(\"error\",this._namespace,e)}info(...e){return logProxy(\"info\",this._namespace,e)}warn(...e){return logProxy(\"warn\",this._namespace,e)}verbose(...e){return logProxy(\"verbose\",this._namespace,e)}}t.DiagComponentLogger=DiagComponentLogger;function logProxy(e,t,r){const a=(0,n.getGlobal)(\"diag\");if(!a){return}r.unshift(t);return a[e](...r)}},972:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.DiagConsoleLogger=void 0;const r=[{n:\"error\",c:\"error\"},{n:\"warn\",c:\"warn\"},{n:\"info\",c:\"info\"},{n:\"debug\",c:\"debug\"},{n:\"verbose\",c:\"trace\"}];class DiagConsoleLogger{constructor(){function _consoleFunc(e){return function(...t){if(console){let r=console[e];if(typeof r!==\"function\"){r=console.log}if(typeof r===\"function\"){return r.apply(console,t)}}}}for(let e=0;e<r.length;e++){this[r[e].n]=_consoleFunc(r[e].c)}}}t.DiagConsoleLogger=DiagConsoleLogger},912:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.createLogLevelDiagLogger=void 0;const n=r(957);function createLogLevelDiagLogger(e,t){if(e<n.DiagLogLevel.NONE){e=n.DiagLogLevel.NONE}else if(e>n.DiagLogLevel.ALL){e=n.DiagLogLevel.ALL}t=t||{};function _filterFunc(r,n){const a=t[r];if(typeof a===\"function\"&&e>=n){return a.bind(t)}return function(){}}return{error:_filterFunc(\"error\",n.DiagLogLevel.ERROR),warn:_filterFunc(\"warn\",n.DiagLogLevel.WARN),info:_filterFunc(\"info\",n.DiagLogLevel.INFO),debug:_filterFunc(\"debug\",n.DiagLogLevel.DEBUG),verbose:_filterFunc(\"verbose\",n.DiagLogLevel.VERBOSE)}}t.createLogLevelDiagLogger=createLogLevelDiagLogger},957:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.DiagLogLevel=void 0;var r;(function(e){e[e[\"NONE\"]=0]=\"NONE\";e[e[\"ERROR\"]=30]=\"ERROR\";e[e[\"WARN\"]=50]=\"WARN\";e[e[\"INFO\"]=60]=\"INFO\";e[e[\"DEBUG\"]=70]=\"DEBUG\";e[e[\"VERBOSE\"]=80]=\"VERBOSE\";e[e[\"ALL\"]=9999]=\"ALL\"})(r=t.DiagLogLevel||(t.DiagLogLevel={}))},172:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.unregisterGlobal=t.getGlobal=t.registerGlobal=void 0;const n=r(200);const a=r(521);const o=r(130);const i=a.VERSION.split(\".\")[0];const c=Symbol.for(`opentelemetry.js.api.${i}`);const s=n._globalThis;function registerGlobal(e,t,r,n=false){var o;const i=s[c]=(o=s[c])!==null&&o!==void 0?o:{version:a.VERSION};if(!n&&i[e]){const t=new Error(`@opentelemetry/api: Attempted duplicate registration of API: ${e}`);r.error(t.stack||t.message);return false}if(i.version!==a.VERSION){const t=new Error(`@opentelemetry/api: Registration of version v${i.version} for ${e} does not match previously registered API v${a.VERSION}`);r.error(t.stack||t.message);return false}i[e]=t;r.debug(`@opentelemetry/api: Registered a global for ${e} v${a.VERSION}.`);return true}t.registerGlobal=registerGlobal;function getGlobal(e){var t,r;const n=(t=s[c])===null||t===void 0?void 0:t.version;if(!n||!(0,o.isCompatible)(n)){return}return(r=s[c])===null||r===void 0?void 0:r[e]}t.getGlobal=getGlobal;function unregisterGlobal(e,t){t.debug(`@opentelemetry/api: Unregistering a global for ${e} v${a.VERSION}.`);const r=s[c];if(r){delete r[e]}}t.unregisterGlobal=unregisterGlobal},130:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.isCompatible=t._makeCompatibilityCheck=void 0;const n=r(521);const a=/^(\\d+)\\.(\\d+)\\.(\\d+)(-(.+))?$/;function _makeCompatibilityCheck(e){const t=new Set([e]);const r=new Set;const n=e.match(a);if(!n){return()=>false}const o={major:+n[1],minor:+n[2],patch:+n[3],prerelease:n[4]};if(o.prerelease!=null){return function isExactmatch(t){return t===e}}function _reject(e){r.add(e);return false}function _accept(e){t.add(e);return true}return function isCompatible(e){if(t.has(e)){return true}if(r.has(e)){return false}const n=e.match(a);if(!n){return _reject(e)}const i={major:+n[1],minor:+n[2],patch:+n[3],prerelease:n[4]};if(i.prerelease!=null){return _reject(e)}if(o.major!==i.major){return _reject(e)}if(o.major===0){if(o.minor===i.minor&&o.patch<=i.patch){return _accept(e)}return _reject(e)}if(o.minor<=i.minor){return _accept(e)}return _reject(e)}}t._makeCompatibilityCheck=_makeCompatibilityCheck;t.isCompatible=_makeCompatibilityCheck(n.VERSION)},886:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.metrics=void 0;const n=r(653);t.metrics=n.MetricsAPI.getInstance()},901:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.ValueType=void 0;var r;(function(e){e[e[\"INT\"]=0]=\"INT\";e[e[\"DOUBLE\"]=1]=\"DOUBLE\"})(r=t.ValueType||(t.ValueType={}))},102:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.createNoopMeter=t.NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC=t.NOOP_OBSERVABLE_GAUGE_METRIC=t.NOOP_OBSERVABLE_COUNTER_METRIC=t.NOOP_UP_DOWN_COUNTER_METRIC=t.NOOP_HISTOGRAM_METRIC=t.NOOP_COUNTER_METRIC=t.NOOP_METER=t.NoopObservableUpDownCounterMetric=t.NoopObservableGaugeMetric=t.NoopObservableCounterMetric=t.NoopObservableMetric=t.NoopHistogramMetric=t.NoopUpDownCounterMetric=t.NoopCounterMetric=t.NoopMetric=t.NoopMeter=void 0;class NoopMeter{constructor(){}createHistogram(e,r){return t.NOOP_HISTOGRAM_METRIC}createCounter(e,r){return t.NOOP_COUNTER_METRIC}createUpDownCounter(e,r){return t.NOOP_UP_DOWN_COUNTER_METRIC}createObservableGauge(e,r){return t.NOOP_OBSERVABLE_GAUGE_METRIC}createObservableCounter(e,r){return t.NOOP_OBSERVABLE_COUNTER_METRIC}createObservableUpDownCounter(e,r){return t.NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC}addBatchObservableCallback(e,t){}removeBatchObservableCallback(e){}}t.NoopMeter=NoopMeter;class NoopMetric{}t.NoopMetric=NoopMetric;class NoopCounterMetric extends NoopMetric{add(e,t){}}t.NoopCounterMetric=NoopCounterMetric;class NoopUpDownCounterMetric extends NoopMetric{add(e,t){}}t.NoopUpDownCounterMetric=NoopUpDownCounterMetric;class NoopHistogramMetric extends NoopMetric{record(e,t){}}t.NoopHistogramMetric=NoopHistogramMetric;class NoopObservableMetric{addCallback(e){}removeCallback(e){}}t.NoopObservableMetric=NoopObservableMetric;class NoopObservableCounterMetric extends NoopObservableMetric{}t.NoopObservableCounterMetric=NoopObservableCounterMetric;class NoopObservableGaugeMetric extends NoopObservableMetric{}t.NoopObservableGaugeMetric=NoopObservableGaugeMetric;class NoopObservableUpDownCounterMetric extends NoopObservableMetric{}t.NoopObservableUpDownCounterMetric=NoopObservableUpDownCounterMetric;t.NOOP_METER=new NoopMeter;t.NOOP_COUNTER_METRIC=new NoopCounterMetric;t.NOOP_HISTOGRAM_METRIC=new NoopHistogramMetric;t.NOOP_UP_DOWN_COUNTER_METRIC=new NoopUpDownCounterMetric;t.NOOP_OBSERVABLE_COUNTER_METRIC=new NoopObservableCounterMetric;t.NOOP_OBSERVABLE_GAUGE_METRIC=new NoopObservableGaugeMetric;t.NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC=new NoopObservableUpDownCounterMetric;function createNoopMeter(){return t.NOOP_METER}t.createNoopMeter=createNoopMeter},660:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NOOP_METER_PROVIDER=t.NoopMeterProvider=void 0;const n=r(102);class NoopMeterProvider{getMeter(e,t,r){return n.NOOP_METER}}t.NoopMeterProvider=NoopMeterProvider;t.NOOP_METER_PROVIDER=new NoopMeterProvider},200:function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){if(n===undefined)n=r;Object.defineProperty(e,n,{enumerable:true,get:function(){return t[r]}})}:function(e,t,r,n){if(n===undefined)n=r;e[n]=t[r]});var a=this&&this.__exportStar||function(e,t){for(var r in e)if(r!==\"default\"&&!Object.prototype.hasOwnProperty.call(t,r))n(t,e,r)};Object.defineProperty(t,\"__esModule\",{value:true});a(r(46),t)},651:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t._globalThis=void 0;t._globalThis=typeof globalThis===\"object\"?globalThis:global},46:function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){if(n===undefined)n=r;Object.defineProperty(e,n,{enumerable:true,get:function(){return t[r]}})}:function(e,t,r,n){if(n===undefined)n=r;e[n]=t[r]});var a=this&&this.__exportStar||function(e,t){for(var r in e)if(r!==\"default\"&&!Object.prototype.hasOwnProperty.call(t,r))n(t,e,r)};Object.defineProperty(t,\"__esModule\",{value:true});a(r(651),t)},939:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.propagation=void 0;const n=r(181);t.propagation=n.PropagationAPI.getInstance()},874:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NoopTextMapPropagator=void 0;class NoopTextMapPropagator{inject(e,t){}extract(e,t){return e}fields(){return[]}}t.NoopTextMapPropagator=NoopTextMapPropagator},194:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.defaultTextMapSetter=t.defaultTextMapGetter=void 0;t.defaultTextMapGetter={get(e,t){if(e==null){return undefined}return e[t]},keys(e){if(e==null){return[]}return Object.keys(e)}};t.defaultTextMapSetter={set(e,t,r){if(e==null){return}e[t]=r}}},845:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.trace=void 0;const n=r(997);t.trace=n.TraceAPI.getInstance()},403:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NonRecordingSpan=void 0;const n=r(476);class NonRecordingSpan{constructor(e=n.INVALID_SPAN_CONTEXT){this._spanContext=e}spanContext(){return this._spanContext}setAttribute(e,t){return this}setAttributes(e){return this}addEvent(e,t){return this}setStatus(e){return this}updateName(e){return this}end(e){}isRecording(){return false}recordException(e,t){}}t.NonRecordingSpan=NonRecordingSpan},614:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NoopTracer=void 0;const n=r(491);const a=r(607);const o=r(403);const i=r(139);const c=n.ContextAPI.getInstance();class NoopTracer{startSpan(e,t,r=c.active()){const n=Boolean(t===null||t===void 0?void 0:t.root);if(n){return new o.NonRecordingSpan}const s=r&&(0,a.getSpanContext)(r);if(isSpanContext(s)&&(0,i.isSpanContextValid)(s)){return new o.NonRecordingSpan(s)}else{return new o.NonRecordingSpan}}startActiveSpan(e,t,r,n){let o;let i;let s;if(arguments.length<2){return}else if(arguments.length===2){s=t}else if(arguments.length===3){o=t;s=r}else{o=t;i=r;s=n}const u=i!==null&&i!==void 0?i:c.active();const l=this.startSpan(e,o,u);const g=(0,a.setSpan)(u,l);return c.with(g,s,undefined,l)}}t.NoopTracer=NoopTracer;function isSpanContext(e){return typeof e===\"object\"&&typeof e[\"spanId\"]===\"string\"&&typeof e[\"traceId\"]===\"string\"&&typeof e[\"traceFlags\"]===\"number\"}},124:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NoopTracerProvider=void 0;const n=r(614);class NoopTracerProvider{getTracer(e,t,r){return new n.NoopTracer}}t.NoopTracerProvider=NoopTracerProvider},125:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.ProxyTracer=void 0;const n=r(614);const a=new n.NoopTracer;class ProxyTracer{constructor(e,t,r,n){this._provider=e;this.name=t;this.version=r;this.options=n}startSpan(e,t,r){return this._getTracer().startSpan(e,t,r)}startActiveSpan(e,t,r,n){const a=this._getTracer();return Reflect.apply(a.startActiveSpan,a,arguments)}_getTracer(){if(this._delegate){return this._delegate}const e=this._provider.getDelegateTracer(this.name,this.version,this.options);if(!e){return a}this._delegate=e;return this._delegate}}t.ProxyTracer=ProxyTracer},846:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.ProxyTracerProvider=void 0;const n=r(125);const a=r(124);const o=new a.NoopTracerProvider;class ProxyTracerProvider{getTracer(e,t,r){var a;return(a=this.getDelegateTracer(e,t,r))!==null&&a!==void 0?a:new n.ProxyTracer(this,e,t,r)}getDelegate(){var e;return(e=this._delegate)!==null&&e!==void 0?e:o}setDelegate(e){this._delegate=e}getDelegateTracer(e,t,r){var n;return(n=this._delegate)===null||n===void 0?void 0:n.getTracer(e,t,r)}}t.ProxyTracerProvider=ProxyTracerProvider},996:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.SamplingDecision=void 0;var r;(function(e){e[e[\"NOT_RECORD\"]=0]=\"NOT_RECORD\";e[e[\"RECORD\"]=1]=\"RECORD\";e[e[\"RECORD_AND_SAMPLED\"]=2]=\"RECORD_AND_SAMPLED\"})(r=t.SamplingDecision||(t.SamplingDecision={}))},607:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.getSpanContext=t.setSpanContext=t.deleteSpan=t.setSpan=t.getActiveSpan=t.getSpan=void 0;const n=r(780);const a=r(403);const o=r(491);const i=(0,n.createContextKey)(\"OpenTelemetry Context Key SPAN\");function getSpan(e){return e.getValue(i)||undefined}t.getSpan=getSpan;function getActiveSpan(){return getSpan(o.ContextAPI.getInstance().active())}t.getActiveSpan=getActiveSpan;function setSpan(e,t){return e.setValue(i,t)}t.setSpan=setSpan;function deleteSpan(e){return e.deleteValue(i)}t.deleteSpan=deleteSpan;function setSpanContext(e,t){return setSpan(e,new a.NonRecordingSpan(t))}t.setSpanContext=setSpanContext;function getSpanContext(e){var t;return(t=getSpan(e))===null||t===void 0?void 0:t.spanContext()}t.getSpanContext=getSpanContext},325:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.TraceStateImpl=void 0;const n=r(564);const a=32;const o=512;const i=\",\";const c=\"=\";class TraceStateImpl{constructor(e){this._internalState=new Map;if(e)this._parse(e)}set(e,t){const r=this._clone();if(r._internalState.has(e)){r._internalState.delete(e)}r._internalState.set(e,t);return r}unset(e){const t=this._clone();t._internalState.delete(e);return t}get(e){return this._internalState.get(e)}serialize(){return this._keys().reduce(((e,t)=>{e.push(t+c+this.get(t));return e}),[]).join(i)}_parse(e){if(e.length>o)return;this._internalState=e.split(i).reverse().reduce(((e,t)=>{const r=t.trim();const a=r.indexOf(c);if(a!==-1){const o=r.slice(0,a);const i=r.slice(a+1,t.length);if((0,n.validateKey)(o)&&(0,n.validateValue)(i)){e.set(o,i)}else{}}return e}),new Map);if(this._internalState.size>a){this._internalState=new Map(Array.from(this._internalState.entries()).reverse().slice(0,a))}}_keys(){return Array.from(this._internalState.keys()).reverse()}_clone(){const e=new TraceStateImpl;e._internalState=new Map(this._internalState);return e}}t.TraceStateImpl=TraceStateImpl},564:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.validateValue=t.validateKey=void 0;const r=\"[_0-9a-z-*/]\";const n=`[a-z]${r}{0,255}`;const a=`[a-z0-9]${r}{0,240}@[a-z]${r}{0,13}`;const o=new RegExp(`^(?:${n}|${a})$`);const i=/^[ -~]{0,255}[!-~]$/;const c=/,|=/;function validateKey(e){return o.test(e)}t.validateKey=validateKey;function validateValue(e){return i.test(e)&&!c.test(e)}t.validateValue=validateValue},98:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.createTraceState=void 0;const n=r(325);function createTraceState(e){return new n.TraceStateImpl(e)}t.createTraceState=createTraceState},476:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.INVALID_SPAN_CONTEXT=t.INVALID_TRACEID=t.INVALID_SPANID=void 0;const n=r(475);t.INVALID_SPANID=\"0000000000000000\";t.INVALID_TRACEID=\"00000000000000000000000000000000\";t.INVALID_SPAN_CONTEXT={traceId:t.INVALID_TRACEID,spanId:t.INVALID_SPANID,traceFlags:n.TraceFlags.NONE}},357:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.SpanKind=void 0;var r;(function(e){e[e[\"INTERNAL\"]=0]=\"INTERNAL\";e[e[\"SERVER\"]=1]=\"SERVER\";e[e[\"CLIENT\"]=2]=\"CLIENT\";e[e[\"PRODUCER\"]=3]=\"PRODUCER\";e[e[\"CONSUMER\"]=4]=\"CONSUMER\"})(r=t.SpanKind||(t.SpanKind={}))},139:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.wrapSpanContext=t.isSpanContextValid=t.isValidSpanId=t.isValidTraceId=void 0;const n=r(476);const a=r(403);const o=/^([0-9a-f]{32})$/i;const i=/^[0-9a-f]{16}$/i;function isValidTraceId(e){return o.test(e)&&e!==n.INVALID_TRACEID}t.isValidTraceId=isValidTraceId;function isValidSpanId(e){return i.test(e)&&e!==n.INVALID_SPANID}t.isValidSpanId=isValidSpanId;function isSpanContextValid(e){return isValidTraceId(e.traceId)&&isValidSpanId(e.spanId)}t.isSpanContextValid=isSpanContextValid;function wrapSpanContext(e){return new a.NonRecordingSpan(e)}t.wrapSpanContext=wrapSpanContext},847:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.SpanStatusCode=void 0;var r;(function(e){e[e[\"UNSET\"]=0]=\"UNSET\";e[e[\"OK\"]=1]=\"OK\";e[e[\"ERROR\"]=2]=\"ERROR\"})(r=t.SpanStatusCode||(t.SpanStatusCode={}))},475:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.TraceFlags=void 0;var r;(function(e){e[e[\"NONE\"]=0]=\"NONE\";e[e[\"SAMPLED\"]=1]=\"SAMPLED\"})(r=t.TraceFlags||(t.TraceFlags={}))},521:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.VERSION=void 0;t.VERSION=\"1.6.0\"}};var t={};function __nccwpck_require__(r){var n=t[r];if(n!==undefined){return n.exports}var a=t[r]={exports:{}};var o=true;try{e[r].call(a.exports,a,a.exports,__nccwpck_require__);o=false}finally{if(o)delete t[r]}return a.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var r={};(()=>{var e=r;Object.defineProperty(e,\"__esModule\",{value:true});e.trace=e.propagation=e.metrics=e.diag=e.context=e.INVALID_SPAN_CONTEXT=e.INVALID_TRACEID=e.INVALID_SPANID=e.isValidSpanId=e.isValidTraceId=e.isSpanContextValid=e.createTraceState=e.TraceFlags=e.SpanStatusCode=e.SpanKind=e.SamplingDecision=e.ProxyTracerProvider=e.ProxyTracer=e.defaultTextMapSetter=e.defaultTextMapGetter=e.ValueType=e.createNoopMeter=e.DiagLogLevel=e.DiagConsoleLogger=e.ROOT_CONTEXT=e.createContextKey=e.baggageEntryMetadataFromString=void 0;var t=__nccwpck_require__(369);Object.defineProperty(e,\"baggageEntryMetadataFromString\",{enumerable:true,get:function(){return t.baggageEntryMetadataFromString}});var n=__nccwpck_require__(780);Object.defineProperty(e,\"createContextKey\",{enumerable:true,get:function(){return n.createContextKey}});Object.defineProperty(e,\"ROOT_CONTEXT\",{enumerable:true,get:function(){return n.ROOT_CONTEXT}});var a=__nccwpck_require__(972);Object.defineProperty(e,\"DiagConsoleLogger\",{enumerable:true,get:function(){return a.DiagConsoleLogger}});var o=__nccwpck_require__(957);Object.defineProperty(e,\"DiagLogLevel\",{enumerable:true,get:function(){return o.DiagLogLevel}});var i=__nccwpck_require__(102);Object.defineProperty(e,\"createNoopMeter\",{enumerable:true,get:function(){return i.createNoopMeter}});var c=__nccwpck_require__(901);Object.defineProperty(e,\"ValueType\",{enumerable:true,get:function(){return c.ValueType}});var s=__nccwpck_require__(194);Object.defineProperty(e,\"defaultTextMapGetter\",{enumerable:true,get:function(){return s.defaultTextMapGetter}});Object.defineProperty(e,\"defaultTextMapSetter\",{enumerable:true,get:function(){return s.defaultTextMapSetter}});var u=__nccwpck_require__(125);Object.defineProperty(e,\"ProxyTracer\",{enumerable:true,get:function(){return u.ProxyTracer}});var l=__nccwpck_require__(846);Object.defineProperty(e,\"ProxyTracerProvider\",{enumerable:true,get:function(){return l.ProxyTracerProvider}});var g=__nccwpck_require__(996);Object.defineProperty(e,\"SamplingDecision\",{enumerable:true,get:function(){return g.SamplingDecision}});var p=__nccwpck_require__(357);Object.defineProperty(e,\"SpanKind\",{enumerable:true,get:function(){return p.SpanKind}});var d=__nccwpck_require__(847);Object.defineProperty(e,\"SpanStatusCode\",{enumerable:true,get:function(){return d.SpanStatusCode}});var _=__nccwpck_require__(475);Object.defineProperty(e,\"TraceFlags\",{enumerable:true,get:function(){return _.TraceFlags}});var f=__nccwpck_require__(98);Object.defineProperty(e,\"createTraceState\",{enumerable:true,get:function(){return f.createTraceState}});var b=__nccwpck_require__(139);Object.defineProperty(e,\"isSpanContextValid\",{enumerable:true,get:function(){return b.isSpanContextValid}});Object.defineProperty(e,\"isValidTraceId\",{enumerable:true,get:function(){return b.isValidTraceId}});Object.defineProperty(e,\"isValidSpanId\",{enumerable:true,get:function(){return b.isValidSpanId}});var v=__nccwpck_require__(476);Object.defineProperty(e,\"INVALID_SPANID\",{enumerable:true,get:function(){return v.INVALID_SPANID}});Object.defineProperty(e,\"INVALID_TRACEID\",{enumerable:true,get:function(){return v.INVALID_TRACEID}});Object.defineProperty(e,\"INVALID_SPAN_CONTEXT\",{enumerable:true,get:function(){return v.INVALID_SPAN_CONTEXT}});const O=__nccwpck_require__(67);Object.defineProperty(e,\"context\",{enumerable:true,get:function(){return O.context}});const P=__nccwpck_require__(506);Object.defineProperty(e,\"diag\",{enumerable:true,get:function(){return P.diag}});const N=__nccwpck_require__(886);Object.defineProperty(e,\"metrics\",{enumerable:true,get:function(){return N.metrics}});const S=__nccwpck_require__(939);Object.defineProperty(e,\"propagation\",{enumerable:true,get:function(){return S.propagation}});const C=__nccwpck_require__(845);Object.defineProperty(e,\"trace\",{enumerable:true,get:function(){return C.trace}});e[\"default\"]={context:O.context,diag:P.diag,metrics:N.metrics,propagation:S.propagation,trace:C.trace}})();module.exports=r})();"],"names":[],"mappings":"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"}},
    {"offset": {"line": 12016, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12021, "column": 0}, "map": {"version":3,"sources":["../../../../src/server/lib/trace/tracer.ts","/turbopack/[project]/node_modules/next/dist/esm/server/lib/trace/tracer.js"],"names":["api","require","err","context","propagation","trace","SpanStatusCode","SpanKind","ROOT_CONTEXT","isPromise","p","then","closeSpanWithError","span","error","bubble","setAttribute","recordException","setStatus","code","ERROR","message","end","rootSpanAttributesStore","Map","rootSpanIdKey","createContextKey","lastSpanId","getSpanId","NextTracerImpl","getTracer","getContext","getActiveScopeSpan","getSpan","active","withPropagatedContext","carrier","fn","getter","activeContext","getSpanContext","remoteContext","extract","with","args","type","fnOrOptions","fnOrEmpty","options","NextVanillaSpanAllowlist","includes","process","env","NEXT_OTEL_VERBOSE","hideSpan","spanName","spanContext","parentSpan","isRootSpan","isRemote","spanId","attributes","setValue","getTracerInstance","startActiveSpan","onCleanup","delete","set","Object","entries","length","result","res","catch","finally","wrap","tracer","name","optionsObj","apply","arguments","lastArgId","cb","scopeBoundCb","bind","_span","done","startSpan","setSpan","undefined","getRootSpanAttributes","getValue","get"],"mappings":"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"}},
    {"offset": {"line": 12209, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12214, "column": 0}, "map": {"version":3,"sources":["../../src/lib/constants.ts","/turbopack/[project]/node_modules/next/dist/esm/lib/constants.js"],"names":["NEXT_QUERY_PARAM_PREFIX","PRERENDER_REVALIDATE_HEADER","PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER","RSC_PREFETCH_SUFFIX","RSC_SUFFIX","NEXT_DATA_SUFFIX","NEXT_META_SUFFIX","NEXT_BODY_SUFFIX","NEXT_CACHE_TAGS_HEADER","NEXT_CACHE_SOFT_TAGS_HEADER","NEXT_CACHE_REVALIDATED_TAGS_HEADER","NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER","NEXT_CACHE_TAG_MAX_LENGTH","NEXT_CACHE_SOFT_TAG_MAX_LENGTH","NEXT_CACHE_IMPLICIT_TAG_ID","CACHE_ONE_YEAR","MIDDLEWARE_FILENAME","MIDDLEWARE_LOCATION_REGEXP","INSTRUMENTATION_HOOK_FILENAME","PAGES_DIR_ALIAS","DOT_NEXT_ALIAS","ROOT_DIR_ALIAS","APP_DIR_ALIAS","RSC_MOD_REF_PROXY_ALIAS","RSC_ACTION_VALIDATE_ALIAS","RSC_ACTION_PROXY_ALIAS","RSC_ACTION_ENCRYPTION_ALIAS","RSC_ACTION_CLIENT_WRAPPER_ALIAS","PUBLIC_DIR_MIDDLEWARE_CONFLICT","SSG_GET_INITIAL_PROPS_CONFLICT","SERVER_PROPS_GET_INIT_PROPS_CONFLICT","SERVER_PROPS_SSG_CONFLICT","STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR","SERVER_PROPS_EXPORT_ERROR","GSP_NO_RETURNED_VALUE","GSSP_NO_RETURNED_VALUE","UNSTABLE_REVALIDATE_RENAME_ERROR","GSSP_COMPONENT_MEMBER_ERROR","NON_STANDARD_NODE_ENV","SSG_FALLBACK_EXPORT_ERROR","ESLINT_DEFAULT_DIRS","ESLINT_PROMPT_VALUES","title","recommended","config","extends","SERVER_RUNTIME","edge","experimentalEdge","nodejs","WEBPACK_LAYERS_NAMES","shared","reactServerComponents","serverSideRendering","actionBrowser","api","middleware","edgeAsset","appPagesBrowser","appMetadataRoute","appRouteHandler","WEBPACK_LAYERS","GROUP","server","nonClientServerTarget","app","WEBPACK_RESOURCE_QUERIES","edgeSSREntry","metadata","metadataRoute","metadataImageMeta"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEO,MAAMA,0BAA0B;AAEhC,MAAMC,8BAA8B;AACpC,MAAMC,6CACX;AAEK,MAAMC,sBAAsB;AAC5B,MAAMC,aAAa;AACnB,MAAMC,mBAAmB;AACzB,MAAMC,mBAAmB;AACzB,MAAMC,mBAAmB;AAEzB,MAAMC,yBAAyB;AAC/B,MAAMC,8BAA8B;AACpC,MAAMC,qCAAqC;AAC3C,MAAMC,yCACX;AAEK,MAAMC,4BAA4B;AAClC,MAAMC,iCAAiC;AACvC,MAAMC,6BAA6B;AAGnC,MAAMC,iBAAiB;AAGvB,MAAMC,sBAAsB;AAC5B,MAAMC,6BAA6B,CAAC,SAAS,EAAED,oBAAoB,CAAC;AAGpE,MAAME,gCAAgC;AAItC,MAAMC,kBAAkB;AACxB,MAAMC,iBAAiB;AACvB,MAAMC,iBAAiB;AACvB,MAAMC,gBAAgB;AACtB,MAAMC,0BAA0B;AAChC,MAAMC,4BAA4B;AAClC,MAAMC,yBAAyB;AAC/B,MAAMC,8BAA8B;AACpC,MAAMC,kCACX;AAEK,MAAMC,iCAAiC,CAAC,6KAA6K,CAAC;AAEtN,MAAMC,iCAAiC,CAAC,mGAAmG,CAAC;AAE5I,MAAMC,uCAAuC,CAAC,uFAAuF,CAAC;AAEtI,MAAMC,4BAA4B,CAAC,sHAAsH,CAAC;AAE1J,MAAMC,6CAA6C,CAAC,uGAAuG,CAAC;AAE5J,MAAMC,4BAA4B,CAAC,uHAAuH,CAAC;AAE3J,MAAMC,wBACX;AACK,MAAMC,yBACX;AAEK,MAAMC,mCACX,uEACA;AAEK,MAAMC,8BAA8B,CAAC,wJAAwJ,CAAC;AAE9L,MAAMC,wBAAwB,CAAC,iNAAiN,CAAC;AAEjP,MAAMC,4BAA4B,CAAC,wJAAwJ,CAAC;AAE5L,MAAMC,sBAAsB;IAAC;IAAO;IAAS;IAAc;IAAO;CAAM;AAExE,MAAMC,uBAAuB;IAClC;QACEC,OAAO;QACPC,aAAa;QACbC,QAAQ;YACNC,SAAS;QACX;IACF;IACA;QACEH,OAAO;QACPE,QAAQ;YACNC,SAAS;QACX;IACF;IACA;QACEH,OAAO;QACPE,QAAQ;IACV;CACD;AAEM,MAAME,iBAAgD;IAC3DC,MAAM;IACNC,kBAAkB;IAClBC,QAAQ;AACV;AAEA;;;CAGC,GACD,MAAMC,uBAAuB;IAC3B;;GAEC,GACDC,QAAQ;IACR;;GAEC,GACDC,uBAAuB;IACvB;;GAEC,GACDC,qBAAqB;IACrB;;GAEC,GACDC,eAAe;IACf;;GAEC,GACDC,KAAK;IACL;;GAEC,GACDC,YAAY;IACZ;;GAEC,GACDC,WAAW;IACX;;GAEC,GACDC,iBAAiB;IACjB;;GAEC,GACDC,kBAAkB;IAClB;;GAEC,GACDC,iBAAiB;AACnB;AAKA,MAAMC,iBAAiB;IACrB,GAAGX,oBAAoB;IACvBY,OAAO;QACLC,QAAQ;YACNb,qBAAqBE,qBAAqB;YAC1CF,qBAAqBI,aAAa;YAClCJ,qBAAqBS,gBAAgB;YACrCT,qBAAqBU,eAAe;SACrC;QACDI,uBAAuB;YACrB,gCAAgC;YAChCd,qBAAqBM,UAAU;YAC/BN,qBAAqBK,GAAG;SACzB;QACDU,KAAK;YACHf,qBAAqBE,qBAAqB;YAC1CF,qBAAqBI,aAAa;YAClCJ,qBAAqBS,gBAAgB;YACrCT,qBAAqBU,eAAe;YACpCV,qBAAqBG,mBAAmB;YACxCH,qBAAqBQ,eAAe;YACpCR,qBAAqBC,MAAM;SAC5B;IACH;AACF;AAEA,MAAMe,2BAA2B;IAC/BC,cAAc;IACdC,UAAU;IACVC,eAAe;IACfC,mBAAmB;AACrB"}},
    {"offset": {"line": 12400, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12405, "column": 0}, "map": {"version":3,"sources":["../../src/lib/picocolors.ts","/turbopack/[project]/node_modules/next/dist/esm/lib/picocolors.js"],"names":["globalThis","env","stdout","process","enabled","NO_COLOR","FORCE_COLOR","isTTY","CI","TERM","replaceClose","str","close","replace","index","start","substring","end","length","nextIndex","indexOf","formatter","open","String","input","string","reset","s","bold","dim","italic","underline","inverse","hidden","strikethrough","black","red","green","yellow","blue","magenta","purple","cyan","white","gray","bgBlack","bgRed","bgGreen","bgYellow","bgBlue","bgMagenta","bgCyan","bgWhite"],"mappings":"AAAA,cAAc;AAEd,wEAAwE;AAExE,2EAA2E;AAC3E,yEAAyE;AACzE,oEAAoE;AAEpE,2EAA2E;AAC3E,mEAAmE;AACnE,0EAA0E;AAC1E,yEAAyE;AACzE,wEAAwE;AACxE,0EAA0E;AAC1E,iEAAiE;AACjE,EAAE;AACF,8GAA8G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEtFA;AAAxB,MAAM,EAAEC,GAAG,EAAEC,MAAM,EAAE,GAAGF,CAAAA,CAAAA,cAAAA,UAAAA,KAAAA,OAAAA,KAAAA,IAAAA,YAAYG,OAAO,KAAI,CAAC;AAEhD,MAAMC,UACJH,OACA,CAACA,IAAII,QAAQ,IACZJ,CAAAA,IAAIK,WAAW,IAAKJ,CAAAA,UAAAA,OAAAA,KAAAA,IAAAA,OAAQK,KAAK,KAAI,CAACN,IAAIO,EAAE,IAAIP,IAAIQ,IAAI,KAAK,MAAM;AAEtE,MAAMC,eAAe,CACnBC,KACAC,OACAC,SACAC;IAEA,MAAMC,QAAQJ,IAAIK,SAAS,CAAC,GAAGF,SAASD;IACxC,MAAMI,MAAMN,IAAIK,SAAS,CAACF,QAAQF,MAAMM,MAAM;IAC9C,MAAMC,YAAYF,IAAIG,OAAO,CAACR;IAC9B,OAAO,CAACO,YACJJ,QAAQL,aAAaO,KAAKL,OAAOC,SAASM,aAC1CJ,QAAQE;AACd;AAEA,MAAMI,YAAY,CAACC,MAAcV,OAAeC,UAAUS,IAAI;IAC5D,IAAI,CAAClB,SAAS,OAAOmB;IACrB,OAAO,CAACC;QACN,MAAMC,SAAS,KAAKD;QACpB,MAAMV,QAAQW,OAAOL,OAAO,CAACR,OAAOU,KAAKJ,MAAM;QAC/C,OAAO,CAACJ,QACJQ,OAAOZ,aAAae,QAAQb,OAAOC,SAASC,SAASF,QACrDU,OAAOG,SAASb;IACtB;AACF;AAEO,MAAMc,QAAQtB,UAAU,CAACuB,IAAc,CAAC,OAAO,EAAEA,EAAE,OAAO,CAAC,GAAGJ;AAC9D,MAAMK,OAAOP,UAAU,WAAW,YAAY;AAC9C,MAAMQ,MAAMR,UAAU,WAAW,YAAY;AAC7C,MAAMS,SAAST,UAAU,WAAW;AACpC,MAAMU,YAAYV,UAAU,WAAW;AACvC,MAAMW,UAAUX,UAAU,WAAW;AACrC,MAAMY,SAASZ,UAAU,WAAW;AACpC,MAAMa,gBAAgBb,UAAU,WAAW;AAC3C,MAAMc,QAAQd,UAAU,YAAY;AACpC,MAAMe,MAAMf,UAAU,YAAY;AAClC,MAAMgB,QAAQhB,UAAU,YAAY;AACpC,MAAMiB,SAASjB,UAAU,YAAY;AACrC,MAAMkB,OAAOlB,UAAU,YAAY;AACnC,MAAMmB,UAAUnB,UAAU,YAAY;AACtC,MAAMoB,SAASpB,UAAU,0BAA0B;AACnD,MAAMqB,OAAOrB,UAAU,YAAY;AACnC,MAAMsB,QAAQtB,UAAU,YAAY;AACpC,MAAMuB,OAAOvB,UAAU,YAAY;AACnC,MAAMwB,UAAUxB,UAAU,YAAY;AACtC,MAAMyB,QAAQzB,UAAU,YAAY;AACpC,MAAM0B,UAAU1B,UAAU,YAAY;AACtC,MAAM2B,WAAW3B,UAAU,YAAY;AACvC,MAAM4B,SAAS5B,UAAU,YAAY;AACrC,MAAM6B,YAAY7B,UAAU,YAAY;AACxC,MAAM8B,SAAS9B,UAAU,YAAY;AACrC,MAAM+B,UAAU/B,UAAU,YAAY"}},
    {"offset": {"line": 12490, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12495, "column": 0}, "map": {"version":3,"sources":["../../../src/build/output/log.ts","/turbopack/[project]/node_modules/next/dist/esm/build/output/log.js"],"names":["prefixes","wait","white","bold","error","red","warn","yellow","ready","info","event","green","trace","magenta","LOGGING_METHOD","log","prefixedLog","prefixType","message","undefined","length","shift","consoleMethod","prefix","console","bootstrap","warnOnceMessages","Set","warnOnce","has","add","join"],"mappings":";;;;;;;;;;;;;;;AAEO,MAAMA,WAAW;IACtBC,MAAMC,kKAAMC,iKAAK;IACjBC,OAAOC,gKAAIF,iKAAK;IAChBG,MAAMC,mKAAOJ,iKAAK;IAClBK,OAAO;IACPC,MAAMP,kKAAMC,iKAAK;IACjBO,OAAOC,kKAAMR,iKAAK;IAClBS,OAAOC,oKAAQV,iKAAK;AACtB;AAEA,MAAMW,iBAAiB;IACrBC,KAAK;IACLT,MAAM;IACNF,OAAO;AACT;AAEA,SAASY,YAAYC,UAAiC,EAAE,GAAGC,OAAc;IACvE,IAAI,CAACA,OAAO,CAAC,EAAE,KAAK,MAAMA,OAAO,CAAC,EAAE,KAAKC,SAAQ,KAAMD,QAAQE,MAAM,KAAK,GAAG;QAC3EF,QAAQG,KAAK;IACf;IAEA,MAAMC,gBACJL,cAAcH,iBACVA,cAAc,CAACG,WAA0C,GACzD;IAEN,MAAMM,SAASvB,QAAQ,CAACiB,WAAW;IACnC,+DAA+D;IAC/D,IAAIC,QAAQE,MAAM,KAAK,GAAG;QACxBI,OAAO,CAACF,cAAc,CAAC;IACzB,OAAO;QACLE,OAAO,CAACF,cAAc,CAAC,MAAMC,WAAWL;IAC1C;AACF;AAEO,SAASO,UAAU,GAAGP,OAAc;IACzCM,QAAQT,GAAG,CAAC,QAAQG;AACtB;AAEO,SAASjB,KAAK,GAAGiB,OAAc;IACpCF,YAAY,WAAWE;AACzB;AAEO,SAASd,MAAM,GAAGc,OAAc;IACrCF,YAAY,YAAYE;AAC1B;AAEO,SAASZ,KAAK,GAAGY,OAAc;IACpCF,YAAY,WAAWE;AACzB;AAEO,SAASV,MAAM,GAAGU,OAAc;IACrCF,YAAY,YAAYE;AAC1B;AAEO,SAAST,KAAK,GAAGS,OAAc;IACpCF,YAAY,WAAWE;AACzB;AAEO,SAASR,MAAM,GAAGQ,OAAc;IACrCF,YAAY,YAAYE;AAC1B;AAEO,SAASN,MAAM,GAAGM,OAAc;IACrCF,YAAY,YAAYE;AAC1B;AAEA,MAAMQ,mBAAmB,IAAIC;AACtB,SAASC,SAAS,GAAGV,OAAc;IACxC,IAAI,CAACQ,iBAAiBG,GAAG,CAACX,OAAO,CAAC,EAAE,GAAG;QACrCQ,iBAAiBI,GAAG,CAACZ,QAAQa,IAAI,CAAC;QAElCzB,QAAQY;IACV;AACF"}},
    {"offset": {"line": 12568, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12573, "column": 0}, "map": {"version":3,"sources":["../../../src/server/lib/patch-fetch.ts","/turbopack/[project]/node_modules/next/dist/esm/server/lib/patch-fetch.js"],"names":["isEdgeRuntime","process","validateRevalidate","revalidateVal","pathname","normalizedRevalidate","undefined","isNaN","Error","err","message","includes","validateTags","tags","description","validTags","invalidTags","tag","push","reason","length","console","warn","log","getDerivedTags","derivedTags","startsWith","pathnameParts","split","i","curPathname","slice","join","endsWith","addImplicitTags","staticGenerationStore","newTags","pagePath","urlPathname","Array","isArray","parsedPathname","URL","trackFetchMetric","ctx","fetchMetrics","dedupeFields","some","metric","every","field","url","cacheStatus","cacheReason","status","method","start","end","Date","now","idx","nextFetchId","patchFetch","serverHooks","staticGenerationAsyncStorage","_nextOriginalFetch","globalThis","fetch","__nextPatched","DynamicServerError","originFetch","input","init","Request","username","password","fetchUrl","href","fetchStart","toUpperCase","isInternal","next","internal","hideSpan","env","NEXT_OTEL_FETCH_DISABLED","getTracer","trace","NextNodeServerSpan","internalFetch","AppRenderSpan","kind","SpanKind","CLIENT","spanName","filter","Boolean","attributes","hostname","port","getRequestMeta","getStore","__nextGetStaticStore","isRequestInput","value","isDraftMode","revalidate","getNextField","curRevalidate","toString","implicitTags","isOnlyCache","fetchCache","isForceCache","isDefaultCache","isDefaultNoStore","isOnlyNoStore","isForceNoStore","isUsingNoStore","isUnstableNoStore","_cache","Log","_headers","initHeaders","get","Headers","hasUnCacheableHeader","isUnCacheableMethod","toLowerCase","autoNoCache","forceStatic","postpone","isCacheableRevalidate","cacheKey","incrementalCache","fetchCacheKey","error","fetchIdx","doOriginalFetch","isStale","cacheReasonOverride","requestInputFields","reqInput","reqOptions","body","_ogBody","initialInit","clonedInit","fetchType","then","res","bodyBuffer","Buffer","from","arrayBuffer","set","data","headers","Object","fromEntries","entries","response","Response","defineProperty","handleUnlock","Promise","resolve","lock","entry","isOnDemandRevalidate","kindHint","softTags","isRevalidate","pendingRevalidates","catch","resData","isStaticGeneration","cache","dynamicUsageReason","dynamicUsageErr","dynamicUsageDescription","hasNextConfig","forceDynamic","finally"],"mappings":"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"}},
    {"offset": {"line": 13066, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13070, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/next/dist/esm/client/components/error-boundary.js/proxy.js"],"sourcesContent":["const { createClientModuleProxy } = require(\"react-server-dom-turbopack/server.edge\");\n\n__turbopack_export_namespace__(createClientModuleProxy(\"[project]/node_modules/next/dist/esm/client/components/error-boundary.js\"));\n"],"names":[],"mappings":"AAAA,MAAM,EAAE,uBAAuB,EAAE,GAAG;AAEpC,+BAA+B,wBAAwB"}},
    {"offset": {"line": 13072, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13077, "column": 0}, "map": {"version":3,"sources":["../../../src/client/components/error-boundary.tsx"],"names":[],"mappings":""}},
    {"offset": {"line": 13082, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13086, "column": 0}, "map": {"version":3,"sources":["../../../../../../../src/server/future/route-modules/app-page/vendored/rsc/react-dom.ts","/turbopack/[project]/node_modules/next/dist/server/future/route-modules/app-page/vendored/rsc/react-dom.js"],"names":["module","exports","require","vendored","ReactDOM"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,yIAAiCC,QAAQ,CAAC,YAAY,CAACC,QAAQ"}},
    {"offset": {"line": 13088, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13093, "column": 0}, "map": {"version":3,"sources":["../../../../src/server/app-render/rsc/preloads.ts","/turbopack/[project]/node_modules/next/dist/esm/server/app-render/rsc/preloads.js"],"names":["preloadStyle","href","crossOrigin","opts","as","ReactDOM","preload","preloadFont","type","preconnect","undefined"],"mappings":"AAAA;;;;AAIA;;;;;;;;AAIO,SAASA,aAAaC,IAAY,EAAEC,WAAgC;IACzE,MAAMC,OAAY;QAAEC,IAAI;IAAQ;IAChC,IAAI,OAAOF,gBAAgB,UAAU;QACnCC,KAAKD,WAAW,GAAGA;IACrB;IACAG,kOAASC,OAAO,CAACL,MAAME;AACzB;AAEO,SAASI,YACdN,IAAY,EACZO,IAAY,EACZN,WAAgC;IAEhC,MAAMC,OAAY;QAAEC,IAAI;QAAQI;IAAK;IACrC,IAAI,OAAON,gBAAgB,UAAU;QACnCC,KAAKD,WAAW,GAAGA;IACrB;IACAG,kOAASC,OAAO,CAACL,MAAME;AACzB;AAEO,SAASM,WAAWR,IAAY,EAAEC,WAAgC;IACrEG,kOAAiBI,UAAU,CAC3BR,MACA,OAAOC,gBAAgB,WAAW;QAAEA;IAAY,IAAIQ;AAExD"}},
    {"offset": {"line": 13129, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13134, "column": 0}, "map": {"version":3,"sources":["../../../../src/server/app-render/rsc/taint.ts","/turbopack/[project]/node_modules/next/dist/esm/server/app-render/rsc/taint.js"],"names":["notImplemented","Error","taintObjectReference","process","taintUniqueValue"],"mappings":"AAAA;;;;AAIA;;;;;;;AAOA,SAASA;IACP,MAAM,IAAIC,MAAM;AAClB;AAEO,MAAMC,uBAGDC,6EAGRH;AACG,MAAMI,mBAIDD,6EAGRH"}},
    {"offset": {"line": 13150, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13155, "column": 0}, "map": {"version":3,"sources":["../../../src/server/app-render/entry-base.ts","/turbopack/[project]/node_modules/next/dist/esm/server/app-render/entry-base.js"],"names":["patchFetch","_patchFetch","serverHooks","staticGenerationAsyncStorage"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AA+BA,0FAA0F;AAC1F,yGAAyG;AACzG,SAASA;IACP,OAAOC,qLAAY;QAAEC,WAAAA;QAAaC,4BAAAA;IAA6B;AACjE"}},
    {"offset": {"line": 13188, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13217, "column": 0}, "map": {"version":3,"sources":["../../../src/build/templates/app-page.ts","/turbopack/[project]/node_modules/next/dist/esm/build/templates/app-page.js"],"names":["require","__next_app_require__","loadChunk","__next_app_load_chunk__","AppPageRouteModule","appPaths","loaderTree","tree"],"mappings":";;;;;;;;;;;;;;;;;;AAsBA;;;AASA,yEAAuD;AACvD,UAAO;MACLA,OAASC;IAAAA;IAAAA;oBACTC;YAAAA;YAAWC;gBACb,YAAC;oBAAA;oBAAA;wBAED,YAAA;4BAAA;4BAAc,CAEd;4BAAA;gCACA,QAAO;oCAAA;oCAAwBC;iCAAmB;;;;;;;;0BAK9C;oBAAA;oBAAA;iBAA2C;;;;;kBAG3CC;YAAAA;YAAY;SAAA;qBACd;YAAA;YAAA;SAAA;;;cAEEC;IAAAA;CAAYC"}},
    {"offset": {"line": 13309, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}