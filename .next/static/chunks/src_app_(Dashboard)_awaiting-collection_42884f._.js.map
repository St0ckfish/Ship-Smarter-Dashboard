{
  "version": 3,
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/app/(Dashboard)/awaiting-collection/components/AwaitingCollectionTable/Data.ts"],"sourcesContent":["\r\nexport type Collection = {\r\n    trackID: string\r\n    customerPhone: string\r\n    orderID: string\r\n    cityFrom: string\r\n    cityTo: string\r\n}\r\n\r\nexport const Data: Collection[] = [\r\n    {\r\n        trackID: \"MNJOF3867\",\r\n        customerPhone: \"50 MAD\",\r\n        orderID: \"1234567891\",\r\n        cityFrom: \"Marrakech\",\r\n        cityTo: \"Casablanca\",\r\n    },\r\n    {\r\n        trackID: \"MNJOF3867\",\r\n        customerPhone: \"50 MAD\",\r\n        orderID: \"1234567891\",\r\n        cityFrom: \"Marrakech\",\r\n        cityTo: \"Casablanca\",\r\n    },\r\n    {\r\n        trackID: \"MNJOF3867\",\r\n        customerPhone: \"50 MAD\",\r\n        orderID: \"1234567891\",\r\n        cityFrom: \"Marrakech\",\r\n        cityTo: \"Casablanca\",\r\n    },\r\n    {\r\n        trackID: \"MNJOF3867\",\r\n        customerPhone: \"50 MAD\",\r\n        orderID: \"1234567891\",\r\n        cityFrom: \"Marrakech\",\r\n        cityTo: \"Casablanca\",\r\n    },\r\n]"],"names":[],"mappings":";;;AASO,MAAM,OAAqB;IAC9B;QACI,SAAS;QACT,eAAe;QACf,SAAS;QACT,UAAU;QACV,QAAQ;IACZ;IACA;QACI,SAAS;QACT,eAAe;QACf,SAAS;QACT,UAAU;QACV,QAAQ;IACZ;IACA;QACI,SAAS;QACT,eAAe;QACf,SAAS;QACT,UAAU;QACV,QAAQ;IACZ;IACA;QACI,SAAS;QACT,eAAe;QACf,SAAS;QACT,UAAU;QACV,QAAQ;IACZ;CACH"}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/app/(Dashboard)/awaiting-collection/components/AwaitingCollectionTable/AwaitingCollectionTable.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport \"@mantine/core/styles.css\";\r\nimport \"@mantine/dates/styles.css\"; //if using mantine date picker features\r\nimport \"mantine-react-table/styles.css\"; //make sure MRT styles were imported in your app root (once)\r\nimport {\r\n  MRT_EditActionButtons,\r\n  flexRender,\r\n  MRT_GlobalFilterTextInput,\r\n  MRT_TablePagination,\r\n  MRT_ToolbarAlertBanner,\r\n  type MRT_ColumnDef,\r\n  useMantineReactTable,\r\n  MRT_TableBodyCellValue,\r\n} from \"mantine-react-table\";\r\n\r\nimport {\r\n  Divider,\r\n  Flex,\r\n  Stack,\r\n  Table,\r\n  Title,\r\n  Button,\r\n  ActionIcon,\r\n  Tooltip,\r\n} from \"@mantine/core\";\r\n\r\nimport { ModalsProvider, modals } from \"@mantine/modals\";\r\n\r\nimport { type Collection, Data } from \"./Data\";\r\nimport { IconEdit, IconTrash } from \"@tabler/icons-react\";\r\nimport { useMemo } from \"react\";\r\nimport ActionsButtonXL from \"@/components/ActionsButtonXL/ActionsButtonXL\";\r\n\r\nconst columns: MRT_ColumnDef<Collection>[] = [\r\n  {\r\n    accessorKey: \"trackID\",\r\n    header: \"Track ID\",\r\n    // size: 180,\r\n\r\n    // mantineTableHeadCellProps: {\r\n    //   align: \"center\",\r\n    // },\r\n    // mantineTableBodyCellProps: {\r\n    //   align: \"center\",\r\n    // },\r\n  },\r\n  {\r\n    accessorKey: \"customerPhone\",\r\n    header: \"Customer Phone\",\r\n\r\n    mantineTableHeadCellProps: {\r\n      align: \"center\",\r\n    },\r\n    mantineTableBodyCellProps: {\r\n      align: \"center\",\r\n    },\r\n  },\r\n  {\r\n    accessorKey: \"orderID\",\r\n    header: \"Order ID\",\r\n  },\r\n  {\r\n    accessorKey: \"cityFrom\",\r\n    header: \"City From\",\r\n  },\r\n  {\r\n    accessorKey: \"cityTo\",\r\n    header: \"City To\",\r\n  },\r\n];\r\n\r\nconst AwaitingCollectionTable = () => {\r\n  const table = useMantineReactTable({\r\n    columns,\r\n    data: Data, //must be memoized or stable (useState, useMemo, defined outside of this component, etc.)\r\n    //MRT display columns can still work, optionally override cell renders with `displayColumnDefOptions`\r\n    enableFilterMatchHighlighting: true,\r\n    enableGlobalFilter: true,\r\n    enableGlobalFilterModes: true,\r\n    enableGlobalFilterRankedResults: true,\r\n    enableRowSelection: false,\r\n    enableEditing: true,\r\n    enableRowActions: true,\r\n    initialState: {\r\n      pagination: { pageSize: 5, pageIndex: 0 },\r\n      showGlobalFilter: true,\r\n    },\r\n    //customize the MRT components\r\n    mantinePaginationProps: {\r\n      rowsPerPageOptions: [\"5\", \"10\", \"15\"],\r\n    },\r\n    paginationDisplayMode: \"pages\",\r\n    positionActionsColumn: \"last\",\r\n    renderRowActions: ({ row, table }) => (\r\n      <Flex gap=\"md\">\r\n        <Tooltip label=\"Edit\">\r\n          <ActionIcon onClick={() => table.setEditingRow(row)}>\r\n            <IconEdit />\r\n          </ActionIcon>\r\n        </Tooltip>\r\n        <Tooltip label=\"Delete\">\r\n          <ActionIcon\r\n            color=\"red\"\r\n            // onClick={() => openDeleteConfirmModal(row)}\r\n          >\r\n            <IconTrash />\r\n          </ActionIcon>\r\n        </Tooltip>\r\n      </Flex>\r\n    ),\r\n  });\r\n\r\n  return (\r\n    <Stack>\r\n      {/* <Divider /> */}\r\n      <Title pb={50} order={2}>\r\n        Awaiting Collection\r\n      </Title>\r\n      <Flex justify=\"space-between\" align=\"center\">\r\n        {/**\r\n         * Use MRT components along side your own markup.\r\n         * They just need the `table` instance passed as a prop to work!\r\n         */}\r\n        <MRT_GlobalFilterTextInput table={table} />\r\n        {/* <ActionsButtonXL title=\"Add a new distributor\" /> */}\r\n      </Flex>\r\n      {/* Using Vanilla Mantine Table component here */}\r\n      <Table.ScrollContainer minWidth={500}>\r\n        <Table\r\n          captionSide=\"top\"\r\n          fz=\"md\"\r\n          highlightOnHover\r\n          horizontalSpacing=\"xl\"\r\n          striped\r\n          verticalSpacing=\"xs\"\r\n          withTableBorder\r\n          withColumnBorders\r\n          m=\"0\"\r\n          // miw=\"700\"\r\n        >\r\n          {/* Use your own markup or stock Mantine components, customize however you want using the power of TanStack Table */}\r\n          <Table.Thead>\r\n            {table.getHeaderGroups().map((headerGroup) => (\r\n              <Table.Tr key={headerGroup.id}>\r\n                {headerGroup.headers.map((header) => (\r\n                  <Table.Th key={header.id}>\r\n                    {header.isPlaceholder\r\n                      ? null\r\n                      : flexRender(\r\n                          header.column.columnDef.Header ??\r\n                            header.column.columnDef.header,\r\n                          header.getContext()\r\n                        )}\r\n                  </Table.Th>\r\n                ))}\r\n              </Table.Tr>\r\n            ))}\r\n          </Table.Thead>\r\n          <Table.Tbody>\r\n            {table.getRowModel().rows.map((row) => (\r\n              <Table.Tr key={row.id}>\r\n                {row.getVisibleCells().map((cell) => (\r\n                  <Table.Td key={cell.id}>\r\n                    <MRT_TableBodyCellValue cell={cell} table={table} />\r\n                  </Table.Td>\r\n                ))}\r\n              </Table.Tr>\r\n            ))}\r\n          </Table.Tbody>\r\n        </Table>\r\n      </Table.ScrollContainer>\r\n      <MRT_TablePagination table={table} />\r\n      <MRT_ToolbarAlertBanner stackAlertBanner table={table} />\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default AwaitingCollectionTable;\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA;;;;;;;;AAkCA,MAAM,UAAuC;IAC3C;QACE,aAAa;QACb,QAAQ;IASV;IACA;QACE,aAAa;QACb,QAAQ;QAER,2BAA2B;YACzB,OAAO;QACT;QACA,2BAA2B;YACzB,OAAO;QACT;IACF;IACA;QACE,aAAa;QACb,QAAQ;IACV;IACA;QACE,aAAa;QACb,QAAQ;IACV;IACA;QACE,aAAa;QACb,QAAQ;IACV;CACD;AAED,MAAM,0BAA0B;;IAC9B,MAAM,QAAQ,8LAAqB;QACjC;QACA,IAAI;QACJ,qGAAqG;QACrG,+BAA+B;QAC/B,oBAAoB;QACpB,yBAAyB;QACzB,iCAAiC;QACjC,oBAAoB;QACpB,eAAe;QACf,kBAAkB;QAClB,cAAc;YACZ,YAAY;gBAAE,UAAU;gBAAG,WAAW;YAAE;YACxC,kBAAkB;QACpB;QACA,8BAA8B;QAC9B,wBAAwB;YACtB,oBAAoB;gBAAC;gBAAK;gBAAM;aAAK;QACvC;QACA,uBAAuB;QACvB,uBAAuB;QACvB,kBAAkB,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,iBAC/B;gBAAM,KAAI;;kCACR;wBAAS,OAAM;kCACb,cAAA;4BAAY,SAAS,IAAM,MAAM,aAAa,CAAC;sCAC7C,cAAA;;;;;;;;;;;;;;;kCAGJ;wBAAS,OAAM;kCACb,cAAA;4BACE,OAAM;sCAGN,cAAA;;;;;;;;;;;;;;;;;;;;;IAKV;IAEA,qBACE;;0BAEE;gBAAO,IAAI;gBAAI,OAAO;0BAAG;;;;;;0BAGzB;gBAAM,SAAQ;gBAAgB,OAAM;0BAKlC,cAAA;oBAA2B,OAAO;;;;;;;;;;;0BAIpC,wLAAC,sLAAM,eAAe;gBAAC,UAAU;0BAC/B,cAAA;oBACE,aAAY;oBACZ,IAAG;oBACH,gBAAgB;oBAChB,mBAAkB;oBAClB,OAAO;oBACP,iBAAgB;oBAChB,eAAe;oBACf,iBAAiB;oBACjB,GAAE;;sCAIF,wLAAC,sLAAM,KAAK;sCACT,MAAM,eAAe,GAAG,GAAG,CAAC,CAAC,4BAC5B,wLAAC,sLAAM,EAAE;8CACN,YAAY,OAAO,CAAC,GAAG,CAAC,CAAC,uBACxB,wLAAC,sLAAM,EAAE;sDACN,OAAO,aAAa,GACjB,OACA,oLACE,OAAO,MAAM,CAAC,SAAS,CAAC,MAAM,IAC5B,OAAO,MAAM,CAAC,SAAS,CAAC,MAAM,EAChC,OAAO,UAAU;2CANV,OAAO,EAAE;;;;;mCAFb,YAAY,EAAE;;;;;;;;;;sCAejC,wLAAC,sLAAM,KAAK;sCACT,MAAM,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,oBAC7B,wLAAC,sLAAM,EAAE;8CACN,IAAI,eAAe,GAAG,GAAG,CAAC,CAAC,qBAC1B,wLAAC,sLAAM,EAAE;sDACP,cAAA;gDAAwB,MAAM;gDAAM,OAAO;;;;;;2CAD9B,KAAK,EAAE;;;;;mCAFX,IAAI,EAAE;;;;;;;;;;;;;;;;;;;;;0BAW7B;gBAAqB,OAAO;;;;;;0BAC5B;gBAAwB,gBAAgB;gBAAC,OAAO;;;;;;;;;;;;AAGtD;GAxGM;;;;;KAAA;uCA0GS"}},
    {"offset": {"line": 301, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}