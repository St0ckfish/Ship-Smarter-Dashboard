{
  "version": 3,
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/app/(Dashboard)/shipping-company/components/Table2/makeData.ts"],"sourcesContent":["export type Company = {\r\n    companyName: string;\r\n    customerService: number;\r\n    shippingCost: string;\r\n}\r\n\r\n\r\n\r\nexport const data: Company[] = [\r\n    {\r\n        companyName: \"Elborak1\",\r\n        customerService: 34578895,\r\n        shippingCost: \"Show price list\"\r\n    },\r\n    {\r\n        companyName: \"Elborak2\",\r\n        customerService: 34578895,\r\n        shippingCost: \"Show price list\"\r\n    },\r\n    {\r\n        companyName: \"Elborak3\",\r\n        customerService: 34578895,\r\n        shippingCost: \"Show price list\"\r\n    },\r\n    {\r\n        companyName: \"Elborak4\",\r\n        customerService: 34578895,\r\n        shippingCost: \"Show price list\"\r\n    },\r\n    {\r\n        companyName: \"Elborak5\",\r\n        customerService: 34578895,\r\n        shippingCost: \"Show price list\"\r\n    },\r\n];"],"names":[],"mappings":";;;AAQO,MAAM,OAAkB;IAC3B;QACI,aAAa;QACb,iBAAiB;QACjB,cAAc;IAClB;IACA;QACI,aAAa;QACb,iBAAiB;QACjB,cAAc;IAClB;IACA;QACI,aAAa;QACb,iBAAiB;QACjB,cAAc;IAClB;IACA;QACI,aAAa;QACb,iBAAiB;QACjB,cAAc;IAClB;IACA;QACI,aAAa;QACb,iBAAiB;QACjB,cAAc;IAClB;CACH"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/components/ActionsButtonXL/ActionsButtonXL.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"actions__button\": \"actions__button__ActionsButtonXL__8a7d3d66\",\n  \"button__icon\": \"button__icon__ActionsButtonXL__8a7d3d66\",\n  \"button__text\": \"button__text__ActionsButtonXL__8a7d3d66\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 44, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 49, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/components/ActionsButtonXL/ActionsButtonXL.tsx"],"sourcesContent":["import Link from \"next/link\"\r\nimport styles from \"./ActionsButtonXL.module.css\"\r\n\r\n\r\nexport default function ActionsButtonXL({ title }: { title: string }) {\r\n    return (\r\n        <>\r\n            <Link href={\"create-company\"} className={styles[\"actions__button\"]}>\r\n                <span className={styles[\"button__icon\"]}>+</span>\r\n                <span className={styles[\"button__text\"]}>\r\n                    {title}\r\n                </span>\r\n            </Link>\r\n        </>\r\n    )\r\n}\r\n\r\n"],"names":[],"mappings":";;;;;;;;;;AAIe,SAAS,gBAAgB,EAAE,KAAK,EAAqB;IAChE,qBACI;kBACI,cAAA;YAAM,MAAM;YAAkB,WAAW,iLAAM,CAAC,kBAAkB;;8BAC9D,wLAAC;oBAAK,WAAW,iLAAM,CAAC,eAAe;8BAAE;;;;;;8BACzC,wLAAC;oBAAK,WAAW,iLAAM,CAAC,eAAe;8BAClC;;;;;;;;;;;;;AAKrB;KAXwB"}},
    {"offset": {"line": 92, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/app/(Dashboard)/shipping-company/components/Table2/Table2.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport '@mantine/core/styles.css';\r\nimport '@mantine/dates/styles.css'; //if using mantine date picker features\r\nimport 'mantine-react-table/styles.css'; //make sure MRT styles were imported in your app root (once)\r\nimport {\r\n    MRT_EditActionButtons,\r\n    flexRender,\r\n    MRT_GlobalFilterTextInput,\r\n    MRT_TablePagination,\r\n    MRT_ToolbarAlertBanner,\r\n    type MRT_ColumnDef,\r\n    useMantineReactTable,\r\n    MRT_TableBodyCellValue,\r\n} from 'mantine-react-table';\r\n\r\nimport { Divider, Flex, Stack, Table, Title, Button, ActionIcon, Tooltip } from '@mantine/core';\r\n\r\nimport { ModalsProvider, modals } from '@mantine/modals';\r\n\r\nimport { type Company, data } from './makeData';\r\nimport { IconEdit, IconTrash } from '@tabler/icons-react';\r\nimport { useMemo } from 'react';\r\nimport ActionsButtonXL from '@/components/ActionsButtonXL/ActionsButtonXL';\r\n\r\nconst columns: MRT_ColumnDef<Company>[] = [\r\n    {\r\n        accessorKey: 'companyName',\r\n        header: 'Company Name',\r\n        Cell: ({ renderedCellValue }) => (\r\n            <a style={{ color: \"#EF4887\", textDecoration: \"underline\" }} href=\"\">\r\n\r\n                {renderedCellValue}\r\n\r\n            </a>\r\n        ),\r\n        mantineTableBodyCellProps: {\r\n            align: 'center',\r\n        },\r\n    },\r\n    {\r\n        accessorKey: 'customerService',\r\n        header: 'Customer Service',\r\n\r\n        mantineTableHeadCellProps: {\r\n            align: 'center',\r\n        },\r\n        mantineTableBodyCellProps: {\r\n            align: 'center',\r\n        },\r\n\r\n    },\r\n    {\r\n        accessorKey: 'shippingCost',\r\n        header: 'Shipping Cost',\r\n\r\n\r\n        Cell: ({ renderedCellValue, }) => (\r\n            <a style={{ textAlign: \"center\", color: \"#EF4887\", textDecoration: \"underline\" }} href=\"\">\r\n                {renderedCellValue}\r\n            </a>\r\n\r\n        ),\r\n        mantineTableBodyCellProps: {\r\n            align: 'right',\r\n        },\r\n    },\r\n\r\n];\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Table2 = () => {\r\n\r\n\r\n    const table = useMantineReactTable({\r\n        columns,\r\n        data, //must be memoized or stable (useState, useMemo, defined outside of this component, etc.)\r\n        //MRT display columns can still work, optionally override cell renders with `displayColumnDefOptions`\r\n        enableFilterMatchHighlighting: true,\r\n        enableGlobalFilter: true,\r\n        enableGlobalFilterModes: true,\r\n        enableGlobalFilterRankedResults: true,\r\n        enableRowSelection: false,\r\n        enableEditing: true,\r\n        enableRowActions: true,\r\n        initialState: {\r\n            pagination: { pageSize: 5, pageIndex: 0 },\r\n            showGlobalFilter: true,\r\n        },\r\n        //customize the MRT components\r\n        mantinePaginationProps: {\r\n            rowsPerPageOptions: ['5', '10', '15'],\r\n        },\r\n        paginationDisplayMode: 'pages',\r\n        positionActionsColumn: 'last',\r\n        renderRowActions: ({ row, table }) => (\r\n\r\n            <Flex gap=\"md\">\r\n                <Tooltip label=\"Edit\">\r\n                    <ActionIcon onClick={() => table.setEditingRow(row)}>\r\n                        <IconEdit />\r\n                    </ActionIcon>\r\n                </Tooltip>\r\n                <Tooltip label=\"Delete\">\r\n                    <ActionIcon color=\"red\"\r\n                    // onClick={() => openDeleteConfirmModal(row)}\r\n                    >\r\n                        <IconTrash />\r\n                    </ActionIcon>\r\n                </Tooltip>\r\n            </Flex>\r\n        ),\r\n    });\r\n\r\n    return (\r\n        <Stack>\r\n            {/* <Divider /> */}\r\n            <Title pb={50} order={2}>Shipping Companies</Title>\r\n            <Flex justify=\"space-between\" align=\"center\">\r\n                {/**\r\n         * Use MRT components along side your own markup.\r\n         * They just need the `table` instance passed as a prop to work!\r\n         */}\r\n                <MRT_GlobalFilterTextInput table={table} />\r\n                <ActionsButtonXL title={\"Create a new compnay\"} />\r\n\r\n            </Flex>\r\n            {/* Using Vanilla Mantine Table component here */}\r\n            <Table\r\n                captionSide=\"top\"\r\n                fz=\"md\"\r\n                highlightOnHover\r\n                horizontalSpacing=\"xl\"\r\n                striped\r\n                verticalSpacing=\"xs\"\r\n                withTableBorder\r\n                withColumnBorders\r\n                m=\"0\"\r\n            >\r\n                {/* Use your own markup or stock Mantine components, customize however you want using the power of TanStack Table */}\r\n                <Table.Thead>\r\n                    {table.getHeaderGroups().map((headerGroup) => (\r\n                        <Table.Tr key={headerGroup.id}>\r\n                            {headerGroup.headers.map((header) => (\r\n                                <Table.Th key={header.id}>\r\n                                    {header.isPlaceholder\r\n                                        ? null\r\n                                        : flexRender(\r\n                                            header.column.columnDef.Header ??\r\n                                            header.column.columnDef.header,\r\n                                            header.getContext(),\r\n                                        )}\r\n                                </Table.Th>\r\n                            ))}\r\n                        </Table.Tr>\r\n                    ))}\r\n                </Table.Thead>\r\n                <Table.Tbody>\r\n                    {table.getRowModel().rows.map((row) => (\r\n                        <Table.Tr key={row.id}>\r\n                            {row.getVisibleCells().map((cell) => (\r\n                                <Table.Td key={cell.id}>\r\n                                    <MRT_TableBodyCellValue cell={cell} table={table} />\r\n                                </Table.Td>\r\n                            ))}\r\n                        </Table.Tr>\r\n                    ))}\r\n                </Table.Tbody>\r\n            </Table>\r\n            <MRT_TablePagination table={table} />\r\n            <MRT_ToolbarAlertBanner stackAlertBanner table={table} />\r\n        </Stack>\r\n    );\r\n};\r\n\r\nexport default Table2;"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;AAyBA,MAAM,UAAoC;IACtC;QACI,aAAa;QACb,QAAQ;QACR,MAAM,CAAC,EAAE,iBAAiB,EAAE,iBACxB,wLAAC;gBAAE,OAAO;oBAAE,OAAO;oBAAW,gBAAgB;gBAAY;gBAAG,MAAK;0BAE7D;;;;;;QAIT,2BAA2B;YACvB,OAAO;QACX;IACJ;IACA;QACI,aAAa;QACb,QAAQ;QAER,2BAA2B;YACvB,OAAO;QACX;QACA,2BAA2B;YACvB,OAAO;QACX;IAEJ;IACA;QACI,aAAa;QACb,QAAQ;QAGR,MAAM,CAAC,EAAE,iBAAiB,EAAG,iBACzB,wLAAC;gBAAE,OAAO;oBAAE,WAAW;oBAAU,OAAO;oBAAW,gBAAgB;gBAAY;gBAAG,MAAK;0BAClF;;;;;;QAIT,2BAA2B;YACvB,OAAO;QACX;IACJ;CAEH;AAQD,MAAM,SAAS;;IAGX,MAAM,QAAQ,8LAAqB;QAC/B;QACA,IAAI;QACJ,qGAAqG;QACrG,+BAA+B;QAC/B,oBAAoB;QACpB,yBAAyB;QACzB,iCAAiC;QACjC,oBAAoB;QACpB,eAAe;QACf,kBAAkB;QAClB,cAAc;YACV,YAAY;gBAAE,UAAU;gBAAG,WAAW;YAAE;YACxC,kBAAkB;QACtB;QACA,8BAA8B;QAC9B,wBAAwB;YACpB,oBAAoB;gBAAC;gBAAK;gBAAM;aAAK;QACzC;QACA,uBAAuB;QACvB,uBAAuB;QACvB,kBAAkB,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,iBAE7B;gBAAM,KAAI;;kCACN;wBAAS,OAAM;kCACX,cAAA;4BAAY,SAAS,IAAM,MAAM,aAAa,CAAC;sCAC3C,cAAA;;;;;;;;;;;;;;;kCAGR;wBAAS,OAAM;kCACX,cAAA;4BAAY,OAAM;sCAGd,cAAA;;;;;;;;;;;;;;;;;;;;;IAKpB;IAEA,qBACI;;0BAEI;gBAAO,IAAI;gBAAI,OAAO;0BAAG;;;;;;0BACzB;gBAAM,SAAQ;gBAAgB,OAAM;;kCAKhC;wBAA2B,OAAO;;;;;;kCAClC;wBAAiB,OAAO;;;;;;;;;;;;0BAI5B;gBACI,aAAY;gBACZ,IAAG;gBACH,gBAAgB;gBAChB,mBAAkB;gBAClB,OAAO;gBACP,iBAAgB;gBAChB,eAAe;gBACf,iBAAiB;gBACjB,GAAE;;kCAGF,wLAAC,sLAAM,KAAK;kCACP,MAAM,eAAe,GAAG,GAAG,CAAC,CAAC,4BAC1B,wLAAC,sLAAM,EAAE;0CACJ,YAAY,OAAO,CAAC,GAAG,CAAC,CAAC,uBACtB,wLAAC,sLAAM,EAAE;kDACJ,OAAO,aAAa,GACf,OACA,oLACE,OAAO,MAAM,CAAC,SAAS,CAAC,MAAM,IAC9B,OAAO,MAAM,CAAC,SAAS,CAAC,MAAM,EAC9B,OAAO,UAAU;uCANd,OAAO,EAAE;;;;;+BAFjB,YAAY,EAAE;;;;;;;;;;kCAerC,wLAAC,sLAAM,KAAK;kCACP,MAAM,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,oBAC3B,wLAAC,sLAAM,EAAE;0CACJ,IAAI,eAAe,GAAG,GAAG,CAAC,CAAC,qBACxB,wLAAC,sLAAM,EAAE;kDACL,cAAA;4CAAwB,MAAM;4CAAM,OAAO;;;;;;uCADhC,KAAK,EAAE;;;;;+BAFf,IAAI,EAAE;;;;;;;;;;;;;;;;0BAUjC;gBAAqB,OAAO;;;;;;0BAC5B;gBAAwB,gBAAgB;gBAAC,OAAO;;;;;;;;;;;;AAG5D;GAtGM;;;;;KAAA;uCAwGS"}},
    {"offset": {"line": 382, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}